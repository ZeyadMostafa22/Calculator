
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000120  00800060  000023cc  00002440  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001380  00000000  00000000  00002560  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c6f  00000000  00000000  000038e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001a0  00000000  00000000  0000454f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001f0  00000000  00000000  000046ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000240c  00000000  00000000  000048df  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001377  00000000  00000000  00006ceb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011d8  00000000  00000000  00008062  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  0000923c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002f3  00000000  00000000  000093fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ce  00000000  00000000  000096ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a0bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
       8:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
       c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      10:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      14:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      18:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      1c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      20:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      24:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      28:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      30:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      34:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      38:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      3c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      40:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      44:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      48:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      4c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      50:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__floatsisf+0x1a>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__mulsf3+0x172>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z+
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <_fpadd_parts+0x1f8>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <__bad_interrupt>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <__fixunssfsi+0x3e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ec ec       	ldi	r30, 0xCC	; 204
     162:	f3 e2       	ldi	r31, 0x23	; 35
     164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
     16a:	a0 38       	cpi	r26, 0x80	; 128
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>
     170:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <main>
     174:	0c 94 e4 11 	jmp	0x23c8	; 0x23c8 <_exit>

00000178 <__bad_interrupt>:
     178:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000017c <__fixunssfsi>:
     17c:	ef 92       	push	r14
     17e:	ff 92       	push	r15
     180:	0f 93       	push	r16
     182:	1f 93       	push	r17
     184:	7b 01       	movw	r14, r22
     186:	8c 01       	movw	r16, r24
     188:	20 e0       	ldi	r18, 0x00	; 0
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	40 e0       	ldi	r20, 0x00	; 0
     18e:	5f e4       	ldi	r21, 0x4F	; 79
     190:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__gesf2>
     194:	88 23       	and	r24, r24
     196:	8c f0       	brlt	.+34     	; 0x1ba <__fixunssfsi+0x3e>
     198:	c8 01       	movw	r24, r16
     19a:	b7 01       	movw	r22, r14
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 36 02 	call	0x46c	; 0x46c <__subsf3>
     1a8:	0e 94 28 05 	call	0xa50	; 0xa50 <__fixsfsi>
     1ac:	9b 01       	movw	r18, r22
     1ae:	ac 01       	movw	r20, r24
     1b0:	20 50       	subi	r18, 0x00	; 0
     1b2:	30 40       	sbci	r19, 0x00	; 0
     1b4:	40 40       	sbci	r20, 0x00	; 0
     1b6:	50 48       	sbci	r21, 0x80	; 128
     1b8:	06 c0       	rjmp	.+12     	; 0x1c6 <__fixunssfsi+0x4a>
     1ba:	c8 01       	movw	r24, r16
     1bc:	b7 01       	movw	r22, r14
     1be:	0e 94 28 05 	call	0xa50	; 0xa50 <__fixsfsi>
     1c2:	9b 01       	movw	r18, r22
     1c4:	ac 01       	movw	r20, r24
     1c6:	b9 01       	movw	r22, r18
     1c8:	ca 01       	movw	r24, r20
     1ca:	1f 91       	pop	r17
     1cc:	0f 91       	pop	r16
     1ce:	ff 90       	pop	r15
     1d0:	ef 90       	pop	r14
     1d2:	08 95       	ret

000001d4 <_fpadd_parts>:
     1d4:	a0 e0       	ldi	r26, 0x00	; 0
     1d6:	b0 e0       	ldi	r27, 0x00	; 0
     1d8:	e0 ef       	ldi	r30, 0xF0	; 240
     1da:	f0 e0       	ldi	r31, 0x00	; 0
     1dc:	0c 94 0d 0f 	jmp	0x1e1a	; 0x1e1a <__prologue_saves__>
     1e0:	dc 01       	movw	r26, r24
     1e2:	2b 01       	movw	r4, r22
     1e4:	fa 01       	movw	r30, r20
     1e6:	9c 91       	ld	r25, X
     1e8:	92 30       	cpi	r25, 0x02	; 2
     1ea:	08 f4       	brcc	.+2      	; 0x1ee <_fpadd_parts+0x1a>
     1ec:	39 c1       	rjmp	.+626    	; 0x460 <_fpadd_parts+0x28c>
     1ee:	eb 01       	movw	r28, r22
     1f0:	88 81       	ld	r24, Y
     1f2:	82 30       	cpi	r24, 0x02	; 2
     1f4:	08 f4       	brcc	.+2      	; 0x1f8 <_fpadd_parts+0x24>
     1f6:	33 c1       	rjmp	.+614    	; 0x45e <_fpadd_parts+0x28a>
     1f8:	94 30       	cpi	r25, 0x04	; 4
     1fa:	69 f4       	brne	.+26     	; 0x216 <_fpadd_parts+0x42>
     1fc:	84 30       	cpi	r24, 0x04	; 4
     1fe:	09 f0       	breq	.+2      	; 0x202 <_fpadd_parts+0x2e>
     200:	2f c1       	rjmp	.+606    	; 0x460 <_fpadd_parts+0x28c>
     202:	11 96       	adiw	r26, 0x01	; 1
     204:	9c 91       	ld	r25, X
     206:	11 97       	sbiw	r26, 0x01	; 1
     208:	89 81       	ldd	r24, Y+1	; 0x01
     20a:	98 17       	cp	r25, r24
     20c:	09 f4       	brne	.+2      	; 0x210 <_fpadd_parts+0x3c>
     20e:	28 c1       	rjmp	.+592    	; 0x460 <_fpadd_parts+0x28c>
     210:	a0 e6       	ldi	r26, 0x60	; 96
     212:	b0 e0       	ldi	r27, 0x00	; 0
     214:	25 c1       	rjmp	.+586    	; 0x460 <_fpadd_parts+0x28c>
     216:	84 30       	cpi	r24, 0x04	; 4
     218:	09 f4       	brne	.+2      	; 0x21c <_fpadd_parts+0x48>
     21a:	21 c1       	rjmp	.+578    	; 0x45e <_fpadd_parts+0x28a>
     21c:	82 30       	cpi	r24, 0x02	; 2
     21e:	a9 f4       	brne	.+42     	; 0x24a <_fpadd_parts+0x76>
     220:	92 30       	cpi	r25, 0x02	; 2
     222:	09 f0       	breq	.+2      	; 0x226 <_fpadd_parts+0x52>
     224:	1d c1       	rjmp	.+570    	; 0x460 <_fpadd_parts+0x28c>
     226:	9a 01       	movw	r18, r20
     228:	ad 01       	movw	r20, r26
     22a:	88 e0       	ldi	r24, 0x08	; 8
     22c:	ea 01       	movw	r28, r20
     22e:	09 90       	ld	r0, Y+
     230:	ae 01       	movw	r20, r28
     232:	e9 01       	movw	r28, r18
     234:	09 92       	st	Y+, r0
     236:	9e 01       	movw	r18, r28
     238:	81 50       	subi	r24, 0x01	; 1
     23a:	c1 f7       	brne	.-16     	; 0x22c <_fpadd_parts+0x58>
     23c:	e2 01       	movw	r28, r4
     23e:	89 81       	ldd	r24, Y+1	; 0x01
     240:	11 96       	adiw	r26, 0x01	; 1
     242:	9c 91       	ld	r25, X
     244:	89 23       	and	r24, r25
     246:	81 83       	std	Z+1, r24	; 0x01
     248:	08 c1       	rjmp	.+528    	; 0x45a <_fpadd_parts+0x286>
     24a:	92 30       	cpi	r25, 0x02	; 2
     24c:	09 f4       	brne	.+2      	; 0x250 <_fpadd_parts+0x7c>
     24e:	07 c1       	rjmp	.+526    	; 0x45e <_fpadd_parts+0x28a>
     250:	12 96       	adiw	r26, 0x02	; 2
     252:	2d 90       	ld	r2, X+
     254:	3c 90       	ld	r3, X
     256:	13 97       	sbiw	r26, 0x03	; 3
     258:	eb 01       	movw	r28, r22
     25a:	8a 81       	ldd	r24, Y+2	; 0x02
     25c:	9b 81       	ldd	r25, Y+3	; 0x03
     25e:	14 96       	adiw	r26, 0x04	; 4
     260:	ad 90       	ld	r10, X+
     262:	bd 90       	ld	r11, X+
     264:	cd 90       	ld	r12, X+
     266:	dc 90       	ld	r13, X
     268:	17 97       	sbiw	r26, 0x07	; 7
     26a:	ec 80       	ldd	r14, Y+4	; 0x04
     26c:	fd 80       	ldd	r15, Y+5	; 0x05
     26e:	0e 81       	ldd	r16, Y+6	; 0x06
     270:	1f 81       	ldd	r17, Y+7	; 0x07
     272:	91 01       	movw	r18, r2
     274:	28 1b       	sub	r18, r24
     276:	39 0b       	sbc	r19, r25
     278:	b9 01       	movw	r22, r18
     27a:	37 ff       	sbrs	r19, 7
     27c:	04 c0       	rjmp	.+8      	; 0x286 <_fpadd_parts+0xb2>
     27e:	66 27       	eor	r22, r22
     280:	77 27       	eor	r23, r23
     282:	62 1b       	sub	r22, r18
     284:	73 0b       	sbc	r23, r19
     286:	60 32       	cpi	r22, 0x20	; 32
     288:	71 05       	cpc	r23, r1
     28a:	0c f0       	brlt	.+2      	; 0x28e <_fpadd_parts+0xba>
     28c:	61 c0       	rjmp	.+194    	; 0x350 <_fpadd_parts+0x17c>
     28e:	12 16       	cp	r1, r18
     290:	13 06       	cpc	r1, r19
     292:	6c f5       	brge	.+90     	; 0x2ee <_fpadd_parts+0x11a>
     294:	37 01       	movw	r6, r14
     296:	48 01       	movw	r8, r16
     298:	06 2e       	mov	r0, r22
     29a:	04 c0       	rjmp	.+8      	; 0x2a4 <_fpadd_parts+0xd0>
     29c:	96 94       	lsr	r9
     29e:	87 94       	ror	r8
     2a0:	77 94       	ror	r7
     2a2:	67 94       	ror	r6
     2a4:	0a 94       	dec	r0
     2a6:	d2 f7       	brpl	.-12     	; 0x29c <_fpadd_parts+0xc8>
     2a8:	21 e0       	ldi	r18, 0x01	; 1
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	50 e0       	ldi	r21, 0x00	; 0
     2b0:	04 c0       	rjmp	.+8      	; 0x2ba <_fpadd_parts+0xe6>
     2b2:	22 0f       	add	r18, r18
     2b4:	33 1f       	adc	r19, r19
     2b6:	44 1f       	adc	r20, r20
     2b8:	55 1f       	adc	r21, r21
     2ba:	6a 95       	dec	r22
     2bc:	d2 f7       	brpl	.-12     	; 0x2b2 <_fpadd_parts+0xde>
     2be:	21 50       	subi	r18, 0x01	; 1
     2c0:	30 40       	sbci	r19, 0x00	; 0
     2c2:	40 40       	sbci	r20, 0x00	; 0
     2c4:	50 40       	sbci	r21, 0x00	; 0
     2c6:	2e 21       	and	r18, r14
     2c8:	3f 21       	and	r19, r15
     2ca:	40 23       	and	r20, r16
     2cc:	51 23       	and	r21, r17
     2ce:	21 15       	cp	r18, r1
     2d0:	31 05       	cpc	r19, r1
     2d2:	41 05       	cpc	r20, r1
     2d4:	51 05       	cpc	r21, r1
     2d6:	21 f0       	breq	.+8      	; 0x2e0 <_fpadd_parts+0x10c>
     2d8:	21 e0       	ldi	r18, 0x01	; 1
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	40 e0       	ldi	r20, 0x00	; 0
     2de:	50 e0       	ldi	r21, 0x00	; 0
     2e0:	79 01       	movw	r14, r18
     2e2:	8a 01       	movw	r16, r20
     2e4:	e6 28       	or	r14, r6
     2e6:	f7 28       	or	r15, r7
     2e8:	08 29       	or	r16, r8
     2ea:	19 29       	or	r17, r9
     2ec:	3c c0       	rjmp	.+120    	; 0x366 <_fpadd_parts+0x192>
     2ee:	23 2b       	or	r18, r19
     2f0:	d1 f1       	breq	.+116    	; 0x366 <_fpadd_parts+0x192>
     2f2:	26 0e       	add	r2, r22
     2f4:	37 1e       	adc	r3, r23
     2f6:	35 01       	movw	r6, r10
     2f8:	46 01       	movw	r8, r12
     2fa:	06 2e       	mov	r0, r22
     2fc:	04 c0       	rjmp	.+8      	; 0x306 <_fpadd_parts+0x132>
     2fe:	96 94       	lsr	r9
     300:	87 94       	ror	r8
     302:	77 94       	ror	r7
     304:	67 94       	ror	r6
     306:	0a 94       	dec	r0
     308:	d2 f7       	brpl	.-12     	; 0x2fe <_fpadd_parts+0x12a>
     30a:	21 e0       	ldi	r18, 0x01	; 1
     30c:	30 e0       	ldi	r19, 0x00	; 0
     30e:	40 e0       	ldi	r20, 0x00	; 0
     310:	50 e0       	ldi	r21, 0x00	; 0
     312:	04 c0       	rjmp	.+8      	; 0x31c <_fpadd_parts+0x148>
     314:	22 0f       	add	r18, r18
     316:	33 1f       	adc	r19, r19
     318:	44 1f       	adc	r20, r20
     31a:	55 1f       	adc	r21, r21
     31c:	6a 95       	dec	r22
     31e:	d2 f7       	brpl	.-12     	; 0x314 <_fpadd_parts+0x140>
     320:	21 50       	subi	r18, 0x01	; 1
     322:	30 40       	sbci	r19, 0x00	; 0
     324:	40 40       	sbci	r20, 0x00	; 0
     326:	50 40       	sbci	r21, 0x00	; 0
     328:	2a 21       	and	r18, r10
     32a:	3b 21       	and	r19, r11
     32c:	4c 21       	and	r20, r12
     32e:	5d 21       	and	r21, r13
     330:	21 15       	cp	r18, r1
     332:	31 05       	cpc	r19, r1
     334:	41 05       	cpc	r20, r1
     336:	51 05       	cpc	r21, r1
     338:	21 f0       	breq	.+8      	; 0x342 <_fpadd_parts+0x16e>
     33a:	21 e0       	ldi	r18, 0x01	; 1
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	40 e0       	ldi	r20, 0x00	; 0
     340:	50 e0       	ldi	r21, 0x00	; 0
     342:	59 01       	movw	r10, r18
     344:	6a 01       	movw	r12, r20
     346:	a6 28       	or	r10, r6
     348:	b7 28       	or	r11, r7
     34a:	c8 28       	or	r12, r8
     34c:	d9 28       	or	r13, r9
     34e:	0b c0       	rjmp	.+22     	; 0x366 <_fpadd_parts+0x192>
     350:	82 15       	cp	r24, r2
     352:	93 05       	cpc	r25, r3
     354:	2c f0       	brlt	.+10     	; 0x360 <_fpadd_parts+0x18c>
     356:	1c 01       	movw	r2, r24
     358:	aa 24       	eor	r10, r10
     35a:	bb 24       	eor	r11, r11
     35c:	65 01       	movw	r12, r10
     35e:	03 c0       	rjmp	.+6      	; 0x366 <_fpadd_parts+0x192>
     360:	ee 24       	eor	r14, r14
     362:	ff 24       	eor	r15, r15
     364:	87 01       	movw	r16, r14
     366:	11 96       	adiw	r26, 0x01	; 1
     368:	9c 91       	ld	r25, X
     36a:	d2 01       	movw	r26, r4
     36c:	11 96       	adiw	r26, 0x01	; 1
     36e:	8c 91       	ld	r24, X
     370:	98 17       	cp	r25, r24
     372:	09 f4       	brne	.+2      	; 0x376 <_fpadd_parts+0x1a2>
     374:	45 c0       	rjmp	.+138    	; 0x400 <_fpadd_parts+0x22c>
     376:	99 23       	and	r25, r25
     378:	39 f0       	breq	.+14     	; 0x388 <_fpadd_parts+0x1b4>
     37a:	a8 01       	movw	r20, r16
     37c:	97 01       	movw	r18, r14
     37e:	2a 19       	sub	r18, r10
     380:	3b 09       	sbc	r19, r11
     382:	4c 09       	sbc	r20, r12
     384:	5d 09       	sbc	r21, r13
     386:	06 c0       	rjmp	.+12     	; 0x394 <_fpadd_parts+0x1c0>
     388:	a6 01       	movw	r20, r12
     38a:	95 01       	movw	r18, r10
     38c:	2e 19       	sub	r18, r14
     38e:	3f 09       	sbc	r19, r15
     390:	40 0b       	sbc	r20, r16
     392:	51 0b       	sbc	r21, r17
     394:	57 fd       	sbrc	r21, 7
     396:	08 c0       	rjmp	.+16     	; 0x3a8 <_fpadd_parts+0x1d4>
     398:	11 82       	std	Z+1, r1	; 0x01
     39a:	33 82       	std	Z+3, r3	; 0x03
     39c:	22 82       	std	Z+2, r2	; 0x02
     39e:	24 83       	std	Z+4, r18	; 0x04
     3a0:	35 83       	std	Z+5, r19	; 0x05
     3a2:	46 83       	std	Z+6, r20	; 0x06
     3a4:	57 83       	std	Z+7, r21	; 0x07
     3a6:	1d c0       	rjmp	.+58     	; 0x3e2 <_fpadd_parts+0x20e>
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	81 83       	std	Z+1, r24	; 0x01
     3ac:	33 82       	std	Z+3, r3	; 0x03
     3ae:	22 82       	std	Z+2, r2	; 0x02
     3b0:	88 27       	eor	r24, r24
     3b2:	99 27       	eor	r25, r25
     3b4:	dc 01       	movw	r26, r24
     3b6:	82 1b       	sub	r24, r18
     3b8:	93 0b       	sbc	r25, r19
     3ba:	a4 0b       	sbc	r26, r20
     3bc:	b5 0b       	sbc	r27, r21
     3be:	84 83       	std	Z+4, r24	; 0x04
     3c0:	95 83       	std	Z+5, r25	; 0x05
     3c2:	a6 83       	std	Z+6, r26	; 0x06
     3c4:	b7 83       	std	Z+7, r27	; 0x07
     3c6:	0d c0       	rjmp	.+26     	; 0x3e2 <_fpadd_parts+0x20e>
     3c8:	22 0f       	add	r18, r18
     3ca:	33 1f       	adc	r19, r19
     3cc:	44 1f       	adc	r20, r20
     3ce:	55 1f       	adc	r21, r21
     3d0:	24 83       	std	Z+4, r18	; 0x04
     3d2:	35 83       	std	Z+5, r19	; 0x05
     3d4:	46 83       	std	Z+6, r20	; 0x06
     3d6:	57 83       	std	Z+7, r21	; 0x07
     3d8:	82 81       	ldd	r24, Z+2	; 0x02
     3da:	93 81       	ldd	r25, Z+3	; 0x03
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	93 83       	std	Z+3, r25	; 0x03
     3e0:	82 83       	std	Z+2, r24	; 0x02
     3e2:	24 81       	ldd	r18, Z+4	; 0x04
     3e4:	35 81       	ldd	r19, Z+5	; 0x05
     3e6:	46 81       	ldd	r20, Z+6	; 0x06
     3e8:	57 81       	ldd	r21, Z+7	; 0x07
     3ea:	da 01       	movw	r26, r20
     3ec:	c9 01       	movw	r24, r18
     3ee:	01 97       	sbiw	r24, 0x01	; 1
     3f0:	a1 09       	sbc	r26, r1
     3f2:	b1 09       	sbc	r27, r1
     3f4:	8f 5f       	subi	r24, 0xFF	; 255
     3f6:	9f 4f       	sbci	r25, 0xFF	; 255
     3f8:	af 4f       	sbci	r26, 0xFF	; 255
     3fa:	bf 43       	sbci	r27, 0x3F	; 63
     3fc:	28 f3       	brcs	.-54     	; 0x3c8 <_fpadd_parts+0x1f4>
     3fe:	0b c0       	rjmp	.+22     	; 0x416 <_fpadd_parts+0x242>
     400:	91 83       	std	Z+1, r25	; 0x01
     402:	33 82       	std	Z+3, r3	; 0x03
     404:	22 82       	std	Z+2, r2	; 0x02
     406:	ea 0c       	add	r14, r10
     408:	fb 1c       	adc	r15, r11
     40a:	0c 1d       	adc	r16, r12
     40c:	1d 1d       	adc	r17, r13
     40e:	e4 82       	std	Z+4, r14	; 0x04
     410:	f5 82       	std	Z+5, r15	; 0x05
     412:	06 83       	std	Z+6, r16	; 0x06
     414:	17 83       	std	Z+7, r17	; 0x07
     416:	83 e0       	ldi	r24, 0x03	; 3
     418:	80 83       	st	Z, r24
     41a:	24 81       	ldd	r18, Z+4	; 0x04
     41c:	35 81       	ldd	r19, Z+5	; 0x05
     41e:	46 81       	ldd	r20, Z+6	; 0x06
     420:	57 81       	ldd	r21, Z+7	; 0x07
     422:	57 ff       	sbrs	r21, 7
     424:	1a c0       	rjmp	.+52     	; 0x45a <_fpadd_parts+0x286>
     426:	c9 01       	movw	r24, r18
     428:	aa 27       	eor	r26, r26
     42a:	97 fd       	sbrc	r25, 7
     42c:	a0 95       	com	r26
     42e:	ba 2f       	mov	r27, r26
     430:	81 70       	andi	r24, 0x01	; 1
     432:	90 70       	andi	r25, 0x00	; 0
     434:	a0 70       	andi	r26, 0x00	; 0
     436:	b0 70       	andi	r27, 0x00	; 0
     438:	56 95       	lsr	r21
     43a:	47 95       	ror	r20
     43c:	37 95       	ror	r19
     43e:	27 95       	ror	r18
     440:	82 2b       	or	r24, r18
     442:	93 2b       	or	r25, r19
     444:	a4 2b       	or	r26, r20
     446:	b5 2b       	or	r27, r21
     448:	84 83       	std	Z+4, r24	; 0x04
     44a:	95 83       	std	Z+5, r25	; 0x05
     44c:	a6 83       	std	Z+6, r26	; 0x06
     44e:	b7 83       	std	Z+7, r27	; 0x07
     450:	82 81       	ldd	r24, Z+2	; 0x02
     452:	93 81       	ldd	r25, Z+3	; 0x03
     454:	01 96       	adiw	r24, 0x01	; 1
     456:	93 83       	std	Z+3, r25	; 0x03
     458:	82 83       	std	Z+2, r24	; 0x02
     45a:	df 01       	movw	r26, r30
     45c:	01 c0       	rjmp	.+2      	; 0x460 <_fpadd_parts+0x28c>
     45e:	d2 01       	movw	r26, r4
     460:	cd 01       	movw	r24, r26
     462:	cd b7       	in	r28, 0x3d	; 61
     464:	de b7       	in	r29, 0x3e	; 62
     466:	e2 e1       	ldi	r30, 0x12	; 18
     468:	0c 94 29 0f 	jmp	0x1e52	; 0x1e52 <__epilogue_restores__>

0000046c <__subsf3>:
     46c:	a0 e2       	ldi	r26, 0x20	; 32
     46e:	b0 e0       	ldi	r27, 0x00	; 0
     470:	ec e3       	ldi	r30, 0x3C	; 60
     472:	f2 e0       	ldi	r31, 0x02	; 2
     474:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__prologue_saves__+0x18>
     478:	69 83       	std	Y+1, r22	; 0x01
     47a:	7a 83       	std	Y+2, r23	; 0x02
     47c:	8b 83       	std	Y+3, r24	; 0x03
     47e:	9c 83       	std	Y+4, r25	; 0x04
     480:	2d 83       	std	Y+5, r18	; 0x05
     482:	3e 83       	std	Y+6, r19	; 0x06
     484:	4f 83       	std	Y+7, r20	; 0x07
     486:	58 87       	std	Y+8, r21	; 0x08
     488:	e9 e0       	ldi	r30, 0x09	; 9
     48a:	ee 2e       	mov	r14, r30
     48c:	f1 2c       	mov	r15, r1
     48e:	ec 0e       	add	r14, r28
     490:	fd 1e       	adc	r15, r29
     492:	ce 01       	movw	r24, r28
     494:	01 96       	adiw	r24, 0x01	; 1
     496:	b7 01       	movw	r22, r14
     498:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     49c:	8e 01       	movw	r16, r28
     49e:	0f 5e       	subi	r16, 0xEF	; 239
     4a0:	1f 4f       	sbci	r17, 0xFF	; 255
     4a2:	ce 01       	movw	r24, r28
     4a4:	05 96       	adiw	r24, 0x05	; 5
     4a6:	b8 01       	movw	r22, r16
     4a8:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     4ac:	8a 89       	ldd	r24, Y+18	; 0x12
     4ae:	91 e0       	ldi	r25, 0x01	; 1
     4b0:	89 27       	eor	r24, r25
     4b2:	8a 8b       	std	Y+18, r24	; 0x12
     4b4:	c7 01       	movw	r24, r14
     4b6:	b8 01       	movw	r22, r16
     4b8:	ae 01       	movw	r20, r28
     4ba:	47 5e       	subi	r20, 0xE7	; 231
     4bc:	5f 4f       	sbci	r21, 0xFF	; 255
     4be:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <_fpadd_parts>
     4c2:	0e 94 cb 05 	call	0xb96	; 0xb96 <__pack_f>
     4c6:	a0 96       	adiw	r28, 0x20	; 32
     4c8:	e6 e0       	ldi	r30, 0x06	; 6
     4ca:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__epilogue_restores__+0x18>

000004ce <__addsf3>:
     4ce:	a0 e2       	ldi	r26, 0x20	; 32
     4d0:	b0 e0       	ldi	r27, 0x00	; 0
     4d2:	ed e6       	ldi	r30, 0x6D	; 109
     4d4:	f2 e0       	ldi	r31, 0x02	; 2
     4d6:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__prologue_saves__+0x18>
     4da:	69 83       	std	Y+1, r22	; 0x01
     4dc:	7a 83       	std	Y+2, r23	; 0x02
     4de:	8b 83       	std	Y+3, r24	; 0x03
     4e0:	9c 83       	std	Y+4, r25	; 0x04
     4e2:	2d 83       	std	Y+5, r18	; 0x05
     4e4:	3e 83       	std	Y+6, r19	; 0x06
     4e6:	4f 83       	std	Y+7, r20	; 0x07
     4e8:	58 87       	std	Y+8, r21	; 0x08
     4ea:	f9 e0       	ldi	r31, 0x09	; 9
     4ec:	ef 2e       	mov	r14, r31
     4ee:	f1 2c       	mov	r15, r1
     4f0:	ec 0e       	add	r14, r28
     4f2:	fd 1e       	adc	r15, r29
     4f4:	ce 01       	movw	r24, r28
     4f6:	01 96       	adiw	r24, 0x01	; 1
     4f8:	b7 01       	movw	r22, r14
     4fa:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     4fe:	8e 01       	movw	r16, r28
     500:	0f 5e       	subi	r16, 0xEF	; 239
     502:	1f 4f       	sbci	r17, 0xFF	; 255
     504:	ce 01       	movw	r24, r28
     506:	05 96       	adiw	r24, 0x05	; 5
     508:	b8 01       	movw	r22, r16
     50a:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     50e:	c7 01       	movw	r24, r14
     510:	b8 01       	movw	r22, r16
     512:	ae 01       	movw	r20, r28
     514:	47 5e       	subi	r20, 0xE7	; 231
     516:	5f 4f       	sbci	r21, 0xFF	; 255
     518:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <_fpadd_parts>
     51c:	0e 94 cb 05 	call	0xb96	; 0xb96 <__pack_f>
     520:	a0 96       	adiw	r28, 0x20	; 32
     522:	e6 e0       	ldi	r30, 0x06	; 6
     524:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__epilogue_restores__+0x18>

00000528 <__mulsf3>:
     528:	a0 e2       	ldi	r26, 0x20	; 32
     52a:	b0 e0       	ldi	r27, 0x00	; 0
     52c:	ea e9       	ldi	r30, 0x9A	; 154
     52e:	f2 e0       	ldi	r31, 0x02	; 2
     530:	0c 94 0d 0f 	jmp	0x1e1a	; 0x1e1a <__prologue_saves__>
     534:	69 83       	std	Y+1, r22	; 0x01
     536:	7a 83       	std	Y+2, r23	; 0x02
     538:	8b 83       	std	Y+3, r24	; 0x03
     53a:	9c 83       	std	Y+4, r25	; 0x04
     53c:	2d 83       	std	Y+5, r18	; 0x05
     53e:	3e 83       	std	Y+6, r19	; 0x06
     540:	4f 83       	std	Y+7, r20	; 0x07
     542:	58 87       	std	Y+8, r21	; 0x08
     544:	ce 01       	movw	r24, r28
     546:	01 96       	adiw	r24, 0x01	; 1
     548:	be 01       	movw	r22, r28
     54a:	67 5f       	subi	r22, 0xF7	; 247
     54c:	7f 4f       	sbci	r23, 0xFF	; 255
     54e:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     552:	ce 01       	movw	r24, r28
     554:	05 96       	adiw	r24, 0x05	; 5
     556:	be 01       	movw	r22, r28
     558:	6f 5e       	subi	r22, 0xEF	; 239
     55a:	7f 4f       	sbci	r23, 0xFF	; 255
     55c:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     560:	99 85       	ldd	r25, Y+9	; 0x09
     562:	92 30       	cpi	r25, 0x02	; 2
     564:	88 f0       	brcs	.+34     	; 0x588 <__mulsf3+0x60>
     566:	89 89       	ldd	r24, Y+17	; 0x11
     568:	82 30       	cpi	r24, 0x02	; 2
     56a:	c8 f0       	brcs	.+50     	; 0x59e <__mulsf3+0x76>
     56c:	94 30       	cpi	r25, 0x04	; 4
     56e:	19 f4       	brne	.+6      	; 0x576 <__mulsf3+0x4e>
     570:	82 30       	cpi	r24, 0x02	; 2
     572:	51 f4       	brne	.+20     	; 0x588 <__mulsf3+0x60>
     574:	04 c0       	rjmp	.+8      	; 0x57e <__mulsf3+0x56>
     576:	84 30       	cpi	r24, 0x04	; 4
     578:	29 f4       	brne	.+10     	; 0x584 <__mulsf3+0x5c>
     57a:	92 30       	cpi	r25, 0x02	; 2
     57c:	81 f4       	brne	.+32     	; 0x59e <__mulsf3+0x76>
     57e:	80 e6       	ldi	r24, 0x60	; 96
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	c6 c0       	rjmp	.+396    	; 0x710 <__mulsf3+0x1e8>
     584:	92 30       	cpi	r25, 0x02	; 2
     586:	49 f4       	brne	.+18     	; 0x59a <__mulsf3+0x72>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	9a 85       	ldd	r25, Y+10	; 0x0a
     58c:	8a 89       	ldd	r24, Y+18	; 0x12
     58e:	98 13       	cpse	r25, r24
     590:	21 e0       	ldi	r18, 0x01	; 1
     592:	2a 87       	std	Y+10, r18	; 0x0a
     594:	ce 01       	movw	r24, r28
     596:	09 96       	adiw	r24, 0x09	; 9
     598:	bb c0       	rjmp	.+374    	; 0x710 <__mulsf3+0x1e8>
     59a:	82 30       	cpi	r24, 0x02	; 2
     59c:	49 f4       	brne	.+18     	; 0x5b0 <__mulsf3+0x88>
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5a2:	8a 89       	ldd	r24, Y+18	; 0x12
     5a4:	98 13       	cpse	r25, r24
     5a6:	21 e0       	ldi	r18, 0x01	; 1
     5a8:	2a 8b       	std	Y+18, r18	; 0x12
     5aa:	ce 01       	movw	r24, r28
     5ac:	41 96       	adiw	r24, 0x11	; 17
     5ae:	b0 c0       	rjmp	.+352    	; 0x710 <__mulsf3+0x1e8>
     5b0:	2d 84       	ldd	r2, Y+13	; 0x0d
     5b2:	3e 84       	ldd	r3, Y+14	; 0x0e
     5b4:	4f 84       	ldd	r4, Y+15	; 0x0f
     5b6:	58 88       	ldd	r5, Y+16	; 0x10
     5b8:	6d 88       	ldd	r6, Y+21	; 0x15
     5ba:	7e 88       	ldd	r7, Y+22	; 0x16
     5bc:	8f 88       	ldd	r8, Y+23	; 0x17
     5be:	98 8c       	ldd	r9, Y+24	; 0x18
     5c0:	ee 24       	eor	r14, r14
     5c2:	ff 24       	eor	r15, r15
     5c4:	87 01       	movw	r16, r14
     5c6:	aa 24       	eor	r10, r10
     5c8:	bb 24       	eor	r11, r11
     5ca:	65 01       	movw	r12, r10
     5cc:	40 e0       	ldi	r20, 0x00	; 0
     5ce:	50 e0       	ldi	r21, 0x00	; 0
     5d0:	60 e0       	ldi	r22, 0x00	; 0
     5d2:	70 e0       	ldi	r23, 0x00	; 0
     5d4:	e0 e0       	ldi	r30, 0x00	; 0
     5d6:	f0 e0       	ldi	r31, 0x00	; 0
     5d8:	c1 01       	movw	r24, r2
     5da:	81 70       	andi	r24, 0x01	; 1
     5dc:	90 70       	andi	r25, 0x00	; 0
     5de:	89 2b       	or	r24, r25
     5e0:	e9 f0       	breq	.+58     	; 0x61c <__mulsf3+0xf4>
     5e2:	e6 0c       	add	r14, r6
     5e4:	f7 1c       	adc	r15, r7
     5e6:	08 1d       	adc	r16, r8
     5e8:	19 1d       	adc	r17, r9
     5ea:	9a 01       	movw	r18, r20
     5ec:	ab 01       	movw	r20, r22
     5ee:	2a 0d       	add	r18, r10
     5f0:	3b 1d       	adc	r19, r11
     5f2:	4c 1d       	adc	r20, r12
     5f4:	5d 1d       	adc	r21, r13
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	a0 e0       	ldi	r26, 0x00	; 0
     5fc:	b0 e0       	ldi	r27, 0x00	; 0
     5fe:	e6 14       	cp	r14, r6
     600:	f7 04       	cpc	r15, r7
     602:	08 05       	cpc	r16, r8
     604:	19 05       	cpc	r17, r9
     606:	20 f4       	brcc	.+8      	; 0x610 <__mulsf3+0xe8>
     608:	81 e0       	ldi	r24, 0x01	; 1
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	a0 e0       	ldi	r26, 0x00	; 0
     60e:	b0 e0       	ldi	r27, 0x00	; 0
     610:	ba 01       	movw	r22, r20
     612:	a9 01       	movw	r20, r18
     614:	48 0f       	add	r20, r24
     616:	59 1f       	adc	r21, r25
     618:	6a 1f       	adc	r22, r26
     61a:	7b 1f       	adc	r23, r27
     61c:	aa 0c       	add	r10, r10
     61e:	bb 1c       	adc	r11, r11
     620:	cc 1c       	adc	r12, r12
     622:	dd 1c       	adc	r13, r13
     624:	97 fe       	sbrs	r9, 7
     626:	08 c0       	rjmp	.+16     	; 0x638 <__mulsf3+0x110>
     628:	81 e0       	ldi	r24, 0x01	; 1
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	a0 e0       	ldi	r26, 0x00	; 0
     62e:	b0 e0       	ldi	r27, 0x00	; 0
     630:	a8 2a       	or	r10, r24
     632:	b9 2a       	or	r11, r25
     634:	ca 2a       	or	r12, r26
     636:	db 2a       	or	r13, r27
     638:	31 96       	adiw	r30, 0x01	; 1
     63a:	e0 32       	cpi	r30, 0x20	; 32
     63c:	f1 05       	cpc	r31, r1
     63e:	49 f0       	breq	.+18     	; 0x652 <__mulsf3+0x12a>
     640:	66 0c       	add	r6, r6
     642:	77 1c       	adc	r7, r7
     644:	88 1c       	adc	r8, r8
     646:	99 1c       	adc	r9, r9
     648:	56 94       	lsr	r5
     64a:	47 94       	ror	r4
     64c:	37 94       	ror	r3
     64e:	27 94       	ror	r2
     650:	c3 cf       	rjmp	.-122    	; 0x5d8 <__mulsf3+0xb0>
     652:	fa 85       	ldd	r31, Y+10	; 0x0a
     654:	ea 89       	ldd	r30, Y+18	; 0x12
     656:	2b 89       	ldd	r18, Y+19	; 0x13
     658:	3c 89       	ldd	r19, Y+20	; 0x14
     65a:	8b 85       	ldd	r24, Y+11	; 0x0b
     65c:	9c 85       	ldd	r25, Y+12	; 0x0c
     65e:	28 0f       	add	r18, r24
     660:	39 1f       	adc	r19, r25
     662:	2e 5f       	subi	r18, 0xFE	; 254
     664:	3f 4f       	sbci	r19, 0xFF	; 255
     666:	17 c0       	rjmp	.+46     	; 0x696 <__mulsf3+0x16e>
     668:	ca 01       	movw	r24, r20
     66a:	81 70       	andi	r24, 0x01	; 1
     66c:	90 70       	andi	r25, 0x00	; 0
     66e:	89 2b       	or	r24, r25
     670:	61 f0       	breq	.+24     	; 0x68a <__mulsf3+0x162>
     672:	16 95       	lsr	r17
     674:	07 95       	ror	r16
     676:	f7 94       	ror	r15
     678:	e7 94       	ror	r14
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	a0 e0       	ldi	r26, 0x00	; 0
     680:	b0 e8       	ldi	r27, 0x80	; 128
     682:	e8 2a       	or	r14, r24
     684:	f9 2a       	or	r15, r25
     686:	0a 2b       	or	r16, r26
     688:	1b 2b       	or	r17, r27
     68a:	76 95       	lsr	r23
     68c:	67 95       	ror	r22
     68e:	57 95       	ror	r21
     690:	47 95       	ror	r20
     692:	2f 5f       	subi	r18, 0xFF	; 255
     694:	3f 4f       	sbci	r19, 0xFF	; 255
     696:	77 fd       	sbrc	r23, 7
     698:	e7 cf       	rjmp	.-50     	; 0x668 <__mulsf3+0x140>
     69a:	0c c0       	rjmp	.+24     	; 0x6b4 <__mulsf3+0x18c>
     69c:	44 0f       	add	r20, r20
     69e:	55 1f       	adc	r21, r21
     6a0:	66 1f       	adc	r22, r22
     6a2:	77 1f       	adc	r23, r23
     6a4:	17 fd       	sbrc	r17, 7
     6a6:	41 60       	ori	r20, 0x01	; 1
     6a8:	ee 0c       	add	r14, r14
     6aa:	ff 1c       	adc	r15, r15
     6ac:	00 1f       	adc	r16, r16
     6ae:	11 1f       	adc	r17, r17
     6b0:	21 50       	subi	r18, 0x01	; 1
     6b2:	30 40       	sbci	r19, 0x00	; 0
     6b4:	40 30       	cpi	r20, 0x00	; 0
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	59 07       	cpc	r21, r25
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	69 07       	cpc	r22, r25
     6be:	90 e4       	ldi	r25, 0x40	; 64
     6c0:	79 07       	cpc	r23, r25
     6c2:	60 f3       	brcs	.-40     	; 0x69c <__mulsf3+0x174>
     6c4:	2b 8f       	std	Y+27, r18	; 0x1b
     6c6:	3c 8f       	std	Y+28, r19	; 0x1c
     6c8:	db 01       	movw	r26, r22
     6ca:	ca 01       	movw	r24, r20
     6cc:	8f 77       	andi	r24, 0x7F	; 127
     6ce:	90 70       	andi	r25, 0x00	; 0
     6d0:	a0 70       	andi	r26, 0x00	; 0
     6d2:	b0 70       	andi	r27, 0x00	; 0
     6d4:	80 34       	cpi	r24, 0x40	; 64
     6d6:	91 05       	cpc	r25, r1
     6d8:	a1 05       	cpc	r26, r1
     6da:	b1 05       	cpc	r27, r1
     6dc:	61 f4       	brne	.+24     	; 0x6f6 <__mulsf3+0x1ce>
     6de:	47 fd       	sbrc	r20, 7
     6e0:	0a c0       	rjmp	.+20     	; 0x6f6 <__mulsf3+0x1ce>
     6e2:	e1 14       	cp	r14, r1
     6e4:	f1 04       	cpc	r15, r1
     6e6:	01 05       	cpc	r16, r1
     6e8:	11 05       	cpc	r17, r1
     6ea:	29 f0       	breq	.+10     	; 0x6f6 <__mulsf3+0x1ce>
     6ec:	40 5c       	subi	r20, 0xC0	; 192
     6ee:	5f 4f       	sbci	r21, 0xFF	; 255
     6f0:	6f 4f       	sbci	r22, 0xFF	; 255
     6f2:	7f 4f       	sbci	r23, 0xFF	; 255
     6f4:	40 78       	andi	r20, 0x80	; 128
     6f6:	1a 8e       	std	Y+26, r1	; 0x1a
     6f8:	fe 17       	cp	r31, r30
     6fa:	11 f0       	breq	.+4      	; 0x700 <__mulsf3+0x1d8>
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	8a 8f       	std	Y+26, r24	; 0x1a
     700:	4d 8f       	std	Y+29, r20	; 0x1d
     702:	5e 8f       	std	Y+30, r21	; 0x1e
     704:	6f 8f       	std	Y+31, r22	; 0x1f
     706:	78 a3       	std	Y+32, r23	; 0x20
     708:	83 e0       	ldi	r24, 0x03	; 3
     70a:	89 8f       	std	Y+25, r24	; 0x19
     70c:	ce 01       	movw	r24, r28
     70e:	49 96       	adiw	r24, 0x19	; 25
     710:	0e 94 cb 05 	call	0xb96	; 0xb96 <__pack_f>
     714:	a0 96       	adiw	r28, 0x20	; 32
     716:	e2 e1       	ldi	r30, 0x12	; 18
     718:	0c 94 29 0f 	jmp	0x1e52	; 0x1e52 <__epilogue_restores__>

0000071c <__divsf3>:
     71c:	a8 e1       	ldi	r26, 0x18	; 24
     71e:	b0 e0       	ldi	r27, 0x00	; 0
     720:	e4 e9       	ldi	r30, 0x94	; 148
     722:	f3 e0       	ldi	r31, 0x03	; 3
     724:	0c 94 15 0f 	jmp	0x1e2a	; 0x1e2a <__prologue_saves__+0x10>
     728:	69 83       	std	Y+1, r22	; 0x01
     72a:	7a 83       	std	Y+2, r23	; 0x02
     72c:	8b 83       	std	Y+3, r24	; 0x03
     72e:	9c 83       	std	Y+4, r25	; 0x04
     730:	2d 83       	std	Y+5, r18	; 0x05
     732:	3e 83       	std	Y+6, r19	; 0x06
     734:	4f 83       	std	Y+7, r20	; 0x07
     736:	58 87       	std	Y+8, r21	; 0x08
     738:	b9 e0       	ldi	r27, 0x09	; 9
     73a:	eb 2e       	mov	r14, r27
     73c:	f1 2c       	mov	r15, r1
     73e:	ec 0e       	add	r14, r28
     740:	fd 1e       	adc	r15, r29
     742:	ce 01       	movw	r24, r28
     744:	01 96       	adiw	r24, 0x01	; 1
     746:	b7 01       	movw	r22, r14
     748:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     74c:	8e 01       	movw	r16, r28
     74e:	0f 5e       	subi	r16, 0xEF	; 239
     750:	1f 4f       	sbci	r17, 0xFF	; 255
     752:	ce 01       	movw	r24, r28
     754:	05 96       	adiw	r24, 0x05	; 5
     756:	b8 01       	movw	r22, r16
     758:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     75c:	29 85       	ldd	r18, Y+9	; 0x09
     75e:	22 30       	cpi	r18, 0x02	; 2
     760:	08 f4       	brcc	.+2      	; 0x764 <__divsf3+0x48>
     762:	7e c0       	rjmp	.+252    	; 0x860 <__stack+0x1>
     764:	39 89       	ldd	r19, Y+17	; 0x11
     766:	32 30       	cpi	r19, 0x02	; 2
     768:	10 f4       	brcc	.+4      	; 0x76e <__divsf3+0x52>
     76a:	b8 01       	movw	r22, r16
     76c:	7c c0       	rjmp	.+248    	; 0x866 <__stack+0x7>
     76e:	8a 85       	ldd	r24, Y+10	; 0x0a
     770:	9a 89       	ldd	r25, Y+18	; 0x12
     772:	89 27       	eor	r24, r25
     774:	8a 87       	std	Y+10, r24	; 0x0a
     776:	24 30       	cpi	r18, 0x04	; 4
     778:	11 f0       	breq	.+4      	; 0x77e <__divsf3+0x62>
     77a:	22 30       	cpi	r18, 0x02	; 2
     77c:	31 f4       	brne	.+12     	; 0x78a <__divsf3+0x6e>
     77e:	23 17       	cp	r18, r19
     780:	09 f0       	breq	.+2      	; 0x784 <__divsf3+0x68>
     782:	6e c0       	rjmp	.+220    	; 0x860 <__stack+0x1>
     784:	60 e6       	ldi	r22, 0x60	; 96
     786:	70 e0       	ldi	r23, 0x00	; 0
     788:	6e c0       	rjmp	.+220    	; 0x866 <__stack+0x7>
     78a:	34 30       	cpi	r19, 0x04	; 4
     78c:	39 f4       	brne	.+14     	; 0x79c <__divsf3+0x80>
     78e:	1d 86       	std	Y+13, r1	; 0x0d
     790:	1e 86       	std	Y+14, r1	; 0x0e
     792:	1f 86       	std	Y+15, r1	; 0x0f
     794:	18 8a       	std	Y+16, r1	; 0x10
     796:	1c 86       	std	Y+12, r1	; 0x0c
     798:	1b 86       	std	Y+11, r1	; 0x0b
     79a:	04 c0       	rjmp	.+8      	; 0x7a4 <__divsf3+0x88>
     79c:	32 30       	cpi	r19, 0x02	; 2
     79e:	21 f4       	brne	.+8      	; 0x7a8 <__divsf3+0x8c>
     7a0:	84 e0       	ldi	r24, 0x04	; 4
     7a2:	89 87       	std	Y+9, r24	; 0x09
     7a4:	b7 01       	movw	r22, r14
     7a6:	5f c0       	rjmp	.+190    	; 0x866 <__stack+0x7>
     7a8:	2b 85       	ldd	r18, Y+11	; 0x0b
     7aa:	3c 85       	ldd	r19, Y+12	; 0x0c
     7ac:	8b 89       	ldd	r24, Y+19	; 0x13
     7ae:	9c 89       	ldd	r25, Y+20	; 0x14
     7b0:	28 1b       	sub	r18, r24
     7b2:	39 0b       	sbc	r19, r25
     7b4:	3c 87       	std	Y+12, r19	; 0x0c
     7b6:	2b 87       	std	Y+11, r18	; 0x0b
     7b8:	ed 84       	ldd	r14, Y+13	; 0x0d
     7ba:	fe 84       	ldd	r15, Y+14	; 0x0e
     7bc:	0f 85       	ldd	r16, Y+15	; 0x0f
     7be:	18 89       	ldd	r17, Y+16	; 0x10
     7c0:	ad 88       	ldd	r10, Y+21	; 0x15
     7c2:	be 88       	ldd	r11, Y+22	; 0x16
     7c4:	cf 88       	ldd	r12, Y+23	; 0x17
     7c6:	d8 8c       	ldd	r13, Y+24	; 0x18
     7c8:	ea 14       	cp	r14, r10
     7ca:	fb 04       	cpc	r15, r11
     7cc:	0c 05       	cpc	r16, r12
     7ce:	1d 05       	cpc	r17, r13
     7d0:	40 f4       	brcc	.+16     	; 0x7e2 <__divsf3+0xc6>
     7d2:	ee 0c       	add	r14, r14
     7d4:	ff 1c       	adc	r15, r15
     7d6:	00 1f       	adc	r16, r16
     7d8:	11 1f       	adc	r17, r17
     7da:	21 50       	subi	r18, 0x01	; 1
     7dc:	30 40       	sbci	r19, 0x00	; 0
     7de:	3c 87       	std	Y+12, r19	; 0x0c
     7e0:	2b 87       	std	Y+11, r18	; 0x0b
     7e2:	20 e0       	ldi	r18, 0x00	; 0
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	40 e0       	ldi	r20, 0x00	; 0
     7e8:	50 e0       	ldi	r21, 0x00	; 0
     7ea:	80 e0       	ldi	r24, 0x00	; 0
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	a0 e0       	ldi	r26, 0x00	; 0
     7f0:	b0 e4       	ldi	r27, 0x40	; 64
     7f2:	60 e0       	ldi	r22, 0x00	; 0
     7f4:	70 e0       	ldi	r23, 0x00	; 0
     7f6:	ea 14       	cp	r14, r10
     7f8:	fb 04       	cpc	r15, r11
     7fa:	0c 05       	cpc	r16, r12
     7fc:	1d 05       	cpc	r17, r13
     7fe:	40 f0       	brcs	.+16     	; 0x810 <__divsf3+0xf4>
     800:	28 2b       	or	r18, r24
     802:	39 2b       	or	r19, r25
     804:	4a 2b       	or	r20, r26
     806:	5b 2b       	or	r21, r27
     808:	ea 18       	sub	r14, r10
     80a:	fb 08       	sbc	r15, r11
     80c:	0c 09       	sbc	r16, r12
     80e:	1d 09       	sbc	r17, r13
     810:	b6 95       	lsr	r27
     812:	a7 95       	ror	r26
     814:	97 95       	ror	r25
     816:	87 95       	ror	r24
     818:	ee 0c       	add	r14, r14
     81a:	ff 1c       	adc	r15, r15
     81c:	00 1f       	adc	r16, r16
     81e:	11 1f       	adc	r17, r17
     820:	6f 5f       	subi	r22, 0xFF	; 255
     822:	7f 4f       	sbci	r23, 0xFF	; 255
     824:	6f 31       	cpi	r22, 0x1F	; 31
     826:	71 05       	cpc	r23, r1
     828:	31 f7       	brne	.-52     	; 0x7f6 <__divsf3+0xda>
     82a:	da 01       	movw	r26, r20
     82c:	c9 01       	movw	r24, r18
     82e:	8f 77       	andi	r24, 0x7F	; 127
     830:	90 70       	andi	r25, 0x00	; 0
     832:	a0 70       	andi	r26, 0x00	; 0
     834:	b0 70       	andi	r27, 0x00	; 0
     836:	80 34       	cpi	r24, 0x40	; 64
     838:	91 05       	cpc	r25, r1
     83a:	a1 05       	cpc	r26, r1
     83c:	b1 05       	cpc	r27, r1
     83e:	61 f4       	brne	.+24     	; 0x858 <__divsf3+0x13c>
     840:	27 fd       	sbrc	r18, 7
     842:	0a c0       	rjmp	.+20     	; 0x858 <__divsf3+0x13c>
     844:	e1 14       	cp	r14, r1
     846:	f1 04       	cpc	r15, r1
     848:	01 05       	cpc	r16, r1
     84a:	11 05       	cpc	r17, r1
     84c:	29 f0       	breq	.+10     	; 0x858 <__divsf3+0x13c>
     84e:	20 5c       	subi	r18, 0xC0	; 192
     850:	3f 4f       	sbci	r19, 0xFF	; 255
     852:	4f 4f       	sbci	r20, 0xFF	; 255
     854:	5f 4f       	sbci	r21, 0xFF	; 255
     856:	20 78       	andi	r18, 0x80	; 128
     858:	2d 87       	std	Y+13, r18	; 0x0d
     85a:	3e 87       	std	Y+14, r19	; 0x0e
     85c:	4f 87       	std	Y+15, r20	; 0x0f
     85e:	58 8b       	std	Y+16, r21	; 0x10
     860:	be 01       	movw	r22, r28
     862:	67 5f       	subi	r22, 0xF7	; 247
     864:	7f 4f       	sbci	r23, 0xFF	; 255
     866:	cb 01       	movw	r24, r22
     868:	0e 94 cb 05 	call	0xb96	; 0xb96 <__pack_f>
     86c:	68 96       	adiw	r28, 0x18	; 24
     86e:	ea e0       	ldi	r30, 0x0A	; 10
     870:	0c 94 31 0f 	jmp	0x1e62	; 0x1e62 <__epilogue_restores__+0x10>

00000874 <__gtsf2>:
     874:	a8 e1       	ldi	r26, 0x18	; 24
     876:	b0 e0       	ldi	r27, 0x00	; 0
     878:	e0 e4       	ldi	r30, 0x40	; 64
     87a:	f4 e0       	ldi	r31, 0x04	; 4
     87c:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__prologue_saves__+0x18>
     880:	69 83       	std	Y+1, r22	; 0x01
     882:	7a 83       	std	Y+2, r23	; 0x02
     884:	8b 83       	std	Y+3, r24	; 0x03
     886:	9c 83       	std	Y+4, r25	; 0x04
     888:	2d 83       	std	Y+5, r18	; 0x05
     88a:	3e 83       	std	Y+6, r19	; 0x06
     88c:	4f 83       	std	Y+7, r20	; 0x07
     88e:	58 87       	std	Y+8, r21	; 0x08
     890:	89 e0       	ldi	r24, 0x09	; 9
     892:	e8 2e       	mov	r14, r24
     894:	f1 2c       	mov	r15, r1
     896:	ec 0e       	add	r14, r28
     898:	fd 1e       	adc	r15, r29
     89a:	ce 01       	movw	r24, r28
     89c:	01 96       	adiw	r24, 0x01	; 1
     89e:	b7 01       	movw	r22, r14
     8a0:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     8a4:	8e 01       	movw	r16, r28
     8a6:	0f 5e       	subi	r16, 0xEF	; 239
     8a8:	1f 4f       	sbci	r17, 0xFF	; 255
     8aa:	ce 01       	movw	r24, r28
     8ac:	05 96       	adiw	r24, 0x05	; 5
     8ae:	b8 01       	movw	r22, r16
     8b0:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     8b4:	89 85       	ldd	r24, Y+9	; 0x09
     8b6:	82 30       	cpi	r24, 0x02	; 2
     8b8:	40 f0       	brcs	.+16     	; 0x8ca <__gtsf2+0x56>
     8ba:	89 89       	ldd	r24, Y+17	; 0x11
     8bc:	82 30       	cpi	r24, 0x02	; 2
     8be:	28 f0       	brcs	.+10     	; 0x8ca <__gtsf2+0x56>
     8c0:	c7 01       	movw	r24, r14
     8c2:	b8 01       	movw	r22, r16
     8c4:	0e 94 18 07 	call	0xe30	; 0xe30 <__fpcmp_parts_f>
     8c8:	01 c0       	rjmp	.+2      	; 0x8cc <__gtsf2+0x58>
     8ca:	8f ef       	ldi	r24, 0xFF	; 255
     8cc:	68 96       	adiw	r28, 0x18	; 24
     8ce:	e6 e0       	ldi	r30, 0x06	; 6
     8d0:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__epilogue_restores__+0x18>

000008d4 <__gesf2>:
     8d4:	a8 e1       	ldi	r26, 0x18	; 24
     8d6:	b0 e0       	ldi	r27, 0x00	; 0
     8d8:	e0 e7       	ldi	r30, 0x70	; 112
     8da:	f4 e0       	ldi	r31, 0x04	; 4
     8dc:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__prologue_saves__+0x18>
     8e0:	69 83       	std	Y+1, r22	; 0x01
     8e2:	7a 83       	std	Y+2, r23	; 0x02
     8e4:	8b 83       	std	Y+3, r24	; 0x03
     8e6:	9c 83       	std	Y+4, r25	; 0x04
     8e8:	2d 83       	std	Y+5, r18	; 0x05
     8ea:	3e 83       	std	Y+6, r19	; 0x06
     8ec:	4f 83       	std	Y+7, r20	; 0x07
     8ee:	58 87       	std	Y+8, r21	; 0x08
     8f0:	89 e0       	ldi	r24, 0x09	; 9
     8f2:	e8 2e       	mov	r14, r24
     8f4:	f1 2c       	mov	r15, r1
     8f6:	ec 0e       	add	r14, r28
     8f8:	fd 1e       	adc	r15, r29
     8fa:	ce 01       	movw	r24, r28
     8fc:	01 96       	adiw	r24, 0x01	; 1
     8fe:	b7 01       	movw	r22, r14
     900:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     904:	8e 01       	movw	r16, r28
     906:	0f 5e       	subi	r16, 0xEF	; 239
     908:	1f 4f       	sbci	r17, 0xFF	; 255
     90a:	ce 01       	movw	r24, r28
     90c:	05 96       	adiw	r24, 0x05	; 5
     90e:	b8 01       	movw	r22, r16
     910:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     914:	89 85       	ldd	r24, Y+9	; 0x09
     916:	82 30       	cpi	r24, 0x02	; 2
     918:	40 f0       	brcs	.+16     	; 0x92a <__gesf2+0x56>
     91a:	89 89       	ldd	r24, Y+17	; 0x11
     91c:	82 30       	cpi	r24, 0x02	; 2
     91e:	28 f0       	brcs	.+10     	; 0x92a <__gesf2+0x56>
     920:	c7 01       	movw	r24, r14
     922:	b8 01       	movw	r22, r16
     924:	0e 94 18 07 	call	0xe30	; 0xe30 <__fpcmp_parts_f>
     928:	01 c0       	rjmp	.+2      	; 0x92c <__gesf2+0x58>
     92a:	8f ef       	ldi	r24, 0xFF	; 255
     92c:	68 96       	adiw	r28, 0x18	; 24
     92e:	e6 e0       	ldi	r30, 0x06	; 6
     930:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__epilogue_restores__+0x18>

00000934 <__ltsf2>:
     934:	a8 e1       	ldi	r26, 0x18	; 24
     936:	b0 e0       	ldi	r27, 0x00	; 0
     938:	e0 ea       	ldi	r30, 0xA0	; 160
     93a:	f4 e0       	ldi	r31, 0x04	; 4
     93c:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__prologue_saves__+0x18>
     940:	69 83       	std	Y+1, r22	; 0x01
     942:	7a 83       	std	Y+2, r23	; 0x02
     944:	8b 83       	std	Y+3, r24	; 0x03
     946:	9c 83       	std	Y+4, r25	; 0x04
     948:	2d 83       	std	Y+5, r18	; 0x05
     94a:	3e 83       	std	Y+6, r19	; 0x06
     94c:	4f 83       	std	Y+7, r20	; 0x07
     94e:	58 87       	std	Y+8, r21	; 0x08
     950:	89 e0       	ldi	r24, 0x09	; 9
     952:	e8 2e       	mov	r14, r24
     954:	f1 2c       	mov	r15, r1
     956:	ec 0e       	add	r14, r28
     958:	fd 1e       	adc	r15, r29
     95a:	ce 01       	movw	r24, r28
     95c:	01 96       	adiw	r24, 0x01	; 1
     95e:	b7 01       	movw	r22, r14
     960:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     964:	8e 01       	movw	r16, r28
     966:	0f 5e       	subi	r16, 0xEF	; 239
     968:	1f 4f       	sbci	r17, 0xFF	; 255
     96a:	ce 01       	movw	r24, r28
     96c:	05 96       	adiw	r24, 0x05	; 5
     96e:	b8 01       	movw	r22, r16
     970:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     974:	89 85       	ldd	r24, Y+9	; 0x09
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	40 f0       	brcs	.+16     	; 0x98a <__ltsf2+0x56>
     97a:	89 89       	ldd	r24, Y+17	; 0x11
     97c:	82 30       	cpi	r24, 0x02	; 2
     97e:	28 f0       	brcs	.+10     	; 0x98a <__ltsf2+0x56>
     980:	c7 01       	movw	r24, r14
     982:	b8 01       	movw	r22, r16
     984:	0e 94 18 07 	call	0xe30	; 0xe30 <__fpcmp_parts_f>
     988:	01 c0       	rjmp	.+2      	; 0x98c <__ltsf2+0x58>
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	68 96       	adiw	r28, 0x18	; 24
     98e:	e6 e0       	ldi	r30, 0x06	; 6
     990:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__epilogue_restores__+0x18>

00000994 <__floatsisf>:
     994:	a8 e0       	ldi	r26, 0x08	; 8
     996:	b0 e0       	ldi	r27, 0x00	; 0
     998:	e0 ed       	ldi	r30, 0xD0	; 208
     99a:	f4 e0       	ldi	r31, 0x04	; 4
     99c:	0c 94 16 0f 	jmp	0x1e2c	; 0x1e2c <__prologue_saves__+0x12>
     9a0:	9b 01       	movw	r18, r22
     9a2:	ac 01       	movw	r20, r24
     9a4:	83 e0       	ldi	r24, 0x03	; 3
     9a6:	89 83       	std	Y+1, r24	; 0x01
     9a8:	da 01       	movw	r26, r20
     9aa:	c9 01       	movw	r24, r18
     9ac:	88 27       	eor	r24, r24
     9ae:	b7 fd       	sbrc	r27, 7
     9b0:	83 95       	inc	r24
     9b2:	99 27       	eor	r25, r25
     9b4:	aa 27       	eor	r26, r26
     9b6:	bb 27       	eor	r27, r27
     9b8:	b8 2e       	mov	r11, r24
     9ba:	21 15       	cp	r18, r1
     9bc:	31 05       	cpc	r19, r1
     9be:	41 05       	cpc	r20, r1
     9c0:	51 05       	cpc	r21, r1
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__floatsisf+0x36>
     9c4:	82 e0       	ldi	r24, 0x02	; 2
     9c6:	89 83       	std	Y+1, r24	; 0x01
     9c8:	3a c0       	rjmp	.+116    	; 0xa3e <__floatsisf+0xaa>
     9ca:	88 23       	and	r24, r24
     9cc:	a9 f0       	breq	.+42     	; 0x9f8 <__floatsisf+0x64>
     9ce:	20 30       	cpi	r18, 0x00	; 0
     9d0:	80 e0       	ldi	r24, 0x00	; 0
     9d2:	38 07       	cpc	r19, r24
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	48 07       	cpc	r20, r24
     9d8:	80 e8       	ldi	r24, 0x80	; 128
     9da:	58 07       	cpc	r21, r24
     9dc:	29 f4       	brne	.+10     	; 0x9e8 <__floatsisf+0x54>
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	70 e0       	ldi	r23, 0x00	; 0
     9e2:	80 e0       	ldi	r24, 0x00	; 0
     9e4:	9f ec       	ldi	r25, 0xCF	; 207
     9e6:	30 c0       	rjmp	.+96     	; 0xa48 <__floatsisf+0xb4>
     9e8:	ee 24       	eor	r14, r14
     9ea:	ff 24       	eor	r15, r15
     9ec:	87 01       	movw	r16, r14
     9ee:	e2 1a       	sub	r14, r18
     9f0:	f3 0a       	sbc	r15, r19
     9f2:	04 0b       	sbc	r16, r20
     9f4:	15 0b       	sbc	r17, r21
     9f6:	02 c0       	rjmp	.+4      	; 0x9fc <__floatsisf+0x68>
     9f8:	79 01       	movw	r14, r18
     9fa:	8a 01       	movw	r16, r20
     9fc:	8e e1       	ldi	r24, 0x1E	; 30
     9fe:	c8 2e       	mov	r12, r24
     a00:	d1 2c       	mov	r13, r1
     a02:	dc 82       	std	Y+4, r13	; 0x04
     a04:	cb 82       	std	Y+3, r12	; 0x03
     a06:	ed 82       	std	Y+5, r14	; 0x05
     a08:	fe 82       	std	Y+6, r15	; 0x06
     a0a:	0f 83       	std	Y+7, r16	; 0x07
     a0c:	18 87       	std	Y+8, r17	; 0x08
     a0e:	c8 01       	movw	r24, r16
     a10:	b7 01       	movw	r22, r14
     a12:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <__clzsi2>
     a16:	01 97       	sbiw	r24, 0x01	; 1
     a18:	18 16       	cp	r1, r24
     a1a:	19 06       	cpc	r1, r25
     a1c:	84 f4       	brge	.+32     	; 0xa3e <__floatsisf+0xaa>
     a1e:	08 2e       	mov	r0, r24
     a20:	04 c0       	rjmp	.+8      	; 0xa2a <__floatsisf+0x96>
     a22:	ee 0c       	add	r14, r14
     a24:	ff 1c       	adc	r15, r15
     a26:	00 1f       	adc	r16, r16
     a28:	11 1f       	adc	r17, r17
     a2a:	0a 94       	dec	r0
     a2c:	d2 f7       	brpl	.-12     	; 0xa22 <__floatsisf+0x8e>
     a2e:	ed 82       	std	Y+5, r14	; 0x05
     a30:	fe 82       	std	Y+6, r15	; 0x06
     a32:	0f 83       	std	Y+7, r16	; 0x07
     a34:	18 87       	std	Y+8, r17	; 0x08
     a36:	c8 1a       	sub	r12, r24
     a38:	d9 0a       	sbc	r13, r25
     a3a:	dc 82       	std	Y+4, r13	; 0x04
     a3c:	cb 82       	std	Y+3, r12	; 0x03
     a3e:	ba 82       	std	Y+2, r11	; 0x02
     a40:	ce 01       	movw	r24, r28
     a42:	01 96       	adiw	r24, 0x01	; 1
     a44:	0e 94 cb 05 	call	0xb96	; 0xb96 <__pack_f>
     a48:	28 96       	adiw	r28, 0x08	; 8
     a4a:	e9 e0       	ldi	r30, 0x09	; 9
     a4c:	0c 94 32 0f 	jmp	0x1e64	; 0x1e64 <__epilogue_restores__+0x12>

00000a50 <__fixsfsi>:
     a50:	ac e0       	ldi	r26, 0x0C	; 12
     a52:	b0 e0       	ldi	r27, 0x00	; 0
     a54:	ee e2       	ldi	r30, 0x2E	; 46
     a56:	f5 e0       	ldi	r31, 0x05	; 5
     a58:	0c 94 1d 0f 	jmp	0x1e3a	; 0x1e3a <__prologue_saves__+0x20>
     a5c:	69 83       	std	Y+1, r22	; 0x01
     a5e:	7a 83       	std	Y+2, r23	; 0x02
     a60:	8b 83       	std	Y+3, r24	; 0x03
     a62:	9c 83       	std	Y+4, r25	; 0x04
     a64:	ce 01       	movw	r24, r28
     a66:	01 96       	adiw	r24, 0x01	; 1
     a68:	be 01       	movw	r22, r28
     a6a:	6b 5f       	subi	r22, 0xFB	; 251
     a6c:	7f 4f       	sbci	r23, 0xFF	; 255
     a6e:	0e 94 a0 06 	call	0xd40	; 0xd40 <__unpack_f>
     a72:	8d 81       	ldd	r24, Y+5	; 0x05
     a74:	82 30       	cpi	r24, 0x02	; 2
     a76:	61 f1       	breq	.+88     	; 0xad0 <__fixsfsi+0x80>
     a78:	82 30       	cpi	r24, 0x02	; 2
     a7a:	50 f1       	brcs	.+84     	; 0xad0 <__fixsfsi+0x80>
     a7c:	84 30       	cpi	r24, 0x04	; 4
     a7e:	21 f4       	brne	.+8      	; 0xa88 <__fixsfsi+0x38>
     a80:	8e 81       	ldd	r24, Y+6	; 0x06
     a82:	88 23       	and	r24, r24
     a84:	51 f1       	breq	.+84     	; 0xada <__fixsfsi+0x8a>
     a86:	2e c0       	rjmp	.+92     	; 0xae4 <__fixsfsi+0x94>
     a88:	2f 81       	ldd	r18, Y+7	; 0x07
     a8a:	38 85       	ldd	r19, Y+8	; 0x08
     a8c:	37 fd       	sbrc	r19, 7
     a8e:	20 c0       	rjmp	.+64     	; 0xad0 <__fixsfsi+0x80>
     a90:	6e 81       	ldd	r22, Y+6	; 0x06
     a92:	2f 31       	cpi	r18, 0x1F	; 31
     a94:	31 05       	cpc	r19, r1
     a96:	1c f0       	brlt	.+6      	; 0xa9e <__fixsfsi+0x4e>
     a98:	66 23       	and	r22, r22
     a9a:	f9 f0       	breq	.+62     	; 0xada <__fixsfsi+0x8a>
     a9c:	23 c0       	rjmp	.+70     	; 0xae4 <__fixsfsi+0x94>
     a9e:	8e e1       	ldi	r24, 0x1E	; 30
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	82 1b       	sub	r24, r18
     aa4:	93 0b       	sbc	r25, r19
     aa6:	29 85       	ldd	r18, Y+9	; 0x09
     aa8:	3a 85       	ldd	r19, Y+10	; 0x0a
     aaa:	4b 85       	ldd	r20, Y+11	; 0x0b
     aac:	5c 85       	ldd	r21, Y+12	; 0x0c
     aae:	04 c0       	rjmp	.+8      	; 0xab8 <__fixsfsi+0x68>
     ab0:	56 95       	lsr	r21
     ab2:	47 95       	ror	r20
     ab4:	37 95       	ror	r19
     ab6:	27 95       	ror	r18
     ab8:	8a 95       	dec	r24
     aba:	d2 f7       	brpl	.-12     	; 0xab0 <__fixsfsi+0x60>
     abc:	66 23       	and	r22, r22
     abe:	b1 f0       	breq	.+44     	; 0xaec <__fixsfsi+0x9c>
     ac0:	50 95       	com	r21
     ac2:	40 95       	com	r20
     ac4:	30 95       	com	r19
     ac6:	21 95       	neg	r18
     ac8:	3f 4f       	sbci	r19, 0xFF	; 255
     aca:	4f 4f       	sbci	r20, 0xFF	; 255
     acc:	5f 4f       	sbci	r21, 0xFF	; 255
     ace:	0e c0       	rjmp	.+28     	; 0xaec <__fixsfsi+0x9c>
     ad0:	20 e0       	ldi	r18, 0x00	; 0
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	40 e0       	ldi	r20, 0x00	; 0
     ad6:	50 e0       	ldi	r21, 0x00	; 0
     ad8:	09 c0       	rjmp	.+18     	; 0xaec <__fixsfsi+0x9c>
     ada:	2f ef       	ldi	r18, 0xFF	; 255
     adc:	3f ef       	ldi	r19, 0xFF	; 255
     ade:	4f ef       	ldi	r20, 0xFF	; 255
     ae0:	5f e7       	ldi	r21, 0x7F	; 127
     ae2:	04 c0       	rjmp	.+8      	; 0xaec <__fixsfsi+0x9c>
     ae4:	20 e0       	ldi	r18, 0x00	; 0
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	40 e0       	ldi	r20, 0x00	; 0
     aea:	50 e8       	ldi	r21, 0x80	; 128
     aec:	b9 01       	movw	r22, r18
     aee:	ca 01       	movw	r24, r20
     af0:	2c 96       	adiw	r28, 0x0c	; 12
     af2:	e2 e0       	ldi	r30, 0x02	; 2
     af4:	0c 94 39 0f 	jmp	0x1e72	; 0x1e72 <__epilogue_restores__+0x20>

00000af8 <__clzsi2>:
     af8:	ef 92       	push	r14
     afa:	ff 92       	push	r15
     afc:	0f 93       	push	r16
     afe:	1f 93       	push	r17
     b00:	7b 01       	movw	r14, r22
     b02:	8c 01       	movw	r16, r24
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	e8 16       	cp	r14, r24
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	f8 06       	cpc	r15, r24
     b0c:	81 e0       	ldi	r24, 0x01	; 1
     b0e:	08 07       	cpc	r16, r24
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	18 07       	cpc	r17, r24
     b14:	88 f4       	brcc	.+34     	; 0xb38 <__clzsi2+0x40>
     b16:	8f ef       	ldi	r24, 0xFF	; 255
     b18:	e8 16       	cp	r14, r24
     b1a:	f1 04       	cpc	r15, r1
     b1c:	01 05       	cpc	r16, r1
     b1e:	11 05       	cpc	r17, r1
     b20:	31 f0       	breq	.+12     	; 0xb2e <__clzsi2+0x36>
     b22:	28 f0       	brcs	.+10     	; 0xb2e <__clzsi2+0x36>
     b24:	88 e0       	ldi	r24, 0x08	; 8
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	a0 e0       	ldi	r26, 0x00	; 0
     b2a:	b0 e0       	ldi	r27, 0x00	; 0
     b2c:	17 c0       	rjmp	.+46     	; 0xb5c <__clzsi2+0x64>
     b2e:	80 e0       	ldi	r24, 0x00	; 0
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	a0 e0       	ldi	r26, 0x00	; 0
     b34:	b0 e0       	ldi	r27, 0x00	; 0
     b36:	12 c0       	rjmp	.+36     	; 0xb5c <__clzsi2+0x64>
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	e8 16       	cp	r14, r24
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	f8 06       	cpc	r15, r24
     b40:	80 e0       	ldi	r24, 0x00	; 0
     b42:	08 07       	cpc	r16, r24
     b44:	81 e0       	ldi	r24, 0x01	; 1
     b46:	18 07       	cpc	r17, r24
     b48:	28 f0       	brcs	.+10     	; 0xb54 <__clzsi2+0x5c>
     b4a:	88 e1       	ldi	r24, 0x18	; 24
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	a0 e0       	ldi	r26, 0x00	; 0
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	04 c0       	rjmp	.+8      	; 0xb5c <__clzsi2+0x64>
     b54:	80 e1       	ldi	r24, 0x10	; 16
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	a0 e0       	ldi	r26, 0x00	; 0
     b5a:	b0 e0       	ldi	r27, 0x00	; 0
     b5c:	20 e2       	ldi	r18, 0x20	; 32
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	40 e0       	ldi	r20, 0x00	; 0
     b62:	50 e0       	ldi	r21, 0x00	; 0
     b64:	28 1b       	sub	r18, r24
     b66:	39 0b       	sbc	r19, r25
     b68:	4a 0b       	sbc	r20, r26
     b6a:	5b 0b       	sbc	r21, r27
     b6c:	04 c0       	rjmp	.+8      	; 0xb76 <__clzsi2+0x7e>
     b6e:	16 95       	lsr	r17
     b70:	07 95       	ror	r16
     b72:	f7 94       	ror	r15
     b74:	e7 94       	ror	r14
     b76:	8a 95       	dec	r24
     b78:	d2 f7       	brpl	.-12     	; 0xb6e <__clzsi2+0x76>
     b7a:	f7 01       	movw	r30, r14
     b7c:	e8 59       	subi	r30, 0x98	; 152
     b7e:	ff 4f       	sbci	r31, 0xFF	; 255
     b80:	80 81       	ld	r24, Z
     b82:	28 1b       	sub	r18, r24
     b84:	31 09       	sbc	r19, r1
     b86:	41 09       	sbc	r20, r1
     b88:	51 09       	sbc	r21, r1
     b8a:	c9 01       	movw	r24, r18
     b8c:	1f 91       	pop	r17
     b8e:	0f 91       	pop	r16
     b90:	ff 90       	pop	r15
     b92:	ef 90       	pop	r14
     b94:	08 95       	ret

00000b96 <__pack_f>:
     b96:	df 92       	push	r13
     b98:	ef 92       	push	r14
     b9a:	ff 92       	push	r15
     b9c:	0f 93       	push	r16
     b9e:	1f 93       	push	r17
     ba0:	fc 01       	movw	r30, r24
     ba2:	e4 80       	ldd	r14, Z+4	; 0x04
     ba4:	f5 80       	ldd	r15, Z+5	; 0x05
     ba6:	06 81       	ldd	r16, Z+6	; 0x06
     ba8:	17 81       	ldd	r17, Z+7	; 0x07
     baa:	d1 80       	ldd	r13, Z+1	; 0x01
     bac:	80 81       	ld	r24, Z
     bae:	82 30       	cpi	r24, 0x02	; 2
     bb0:	48 f4       	brcc	.+18     	; 0xbc4 <__pack_f+0x2e>
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	a0 e1       	ldi	r26, 0x10	; 16
     bb8:	b0 e0       	ldi	r27, 0x00	; 0
     bba:	e8 2a       	or	r14, r24
     bbc:	f9 2a       	or	r15, r25
     bbe:	0a 2b       	or	r16, r26
     bc0:	1b 2b       	or	r17, r27
     bc2:	a5 c0       	rjmp	.+330    	; 0xd0e <__pack_f+0x178>
     bc4:	84 30       	cpi	r24, 0x04	; 4
     bc6:	09 f4       	brne	.+2      	; 0xbca <__pack_f+0x34>
     bc8:	9f c0       	rjmp	.+318    	; 0xd08 <__pack_f+0x172>
     bca:	82 30       	cpi	r24, 0x02	; 2
     bcc:	21 f4       	brne	.+8      	; 0xbd6 <__pack_f+0x40>
     bce:	ee 24       	eor	r14, r14
     bd0:	ff 24       	eor	r15, r15
     bd2:	87 01       	movw	r16, r14
     bd4:	05 c0       	rjmp	.+10     	; 0xbe0 <__pack_f+0x4a>
     bd6:	e1 14       	cp	r14, r1
     bd8:	f1 04       	cpc	r15, r1
     bda:	01 05       	cpc	r16, r1
     bdc:	11 05       	cpc	r17, r1
     bde:	19 f4       	brne	.+6      	; 0xbe6 <__pack_f+0x50>
     be0:	e0 e0       	ldi	r30, 0x00	; 0
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	96 c0       	rjmp	.+300    	; 0xd12 <__pack_f+0x17c>
     be6:	62 81       	ldd	r22, Z+2	; 0x02
     be8:	73 81       	ldd	r23, Z+3	; 0x03
     bea:	9f ef       	ldi	r25, 0xFF	; 255
     bec:	62 38       	cpi	r22, 0x82	; 130
     bee:	79 07       	cpc	r23, r25
     bf0:	0c f0       	brlt	.+2      	; 0xbf4 <__pack_f+0x5e>
     bf2:	5b c0       	rjmp	.+182    	; 0xcaa <__pack_f+0x114>
     bf4:	22 e8       	ldi	r18, 0x82	; 130
     bf6:	3f ef       	ldi	r19, 0xFF	; 255
     bf8:	26 1b       	sub	r18, r22
     bfa:	37 0b       	sbc	r19, r23
     bfc:	2a 31       	cpi	r18, 0x1A	; 26
     bfe:	31 05       	cpc	r19, r1
     c00:	2c f0       	brlt	.+10     	; 0xc0c <__pack_f+0x76>
     c02:	20 e0       	ldi	r18, 0x00	; 0
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	40 e0       	ldi	r20, 0x00	; 0
     c08:	50 e0       	ldi	r21, 0x00	; 0
     c0a:	2a c0       	rjmp	.+84     	; 0xc60 <__pack_f+0xca>
     c0c:	b8 01       	movw	r22, r16
     c0e:	a7 01       	movw	r20, r14
     c10:	02 2e       	mov	r0, r18
     c12:	04 c0       	rjmp	.+8      	; 0xc1c <__pack_f+0x86>
     c14:	76 95       	lsr	r23
     c16:	67 95       	ror	r22
     c18:	57 95       	ror	r21
     c1a:	47 95       	ror	r20
     c1c:	0a 94       	dec	r0
     c1e:	d2 f7       	brpl	.-12     	; 0xc14 <__pack_f+0x7e>
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	a0 e0       	ldi	r26, 0x00	; 0
     c26:	b0 e0       	ldi	r27, 0x00	; 0
     c28:	04 c0       	rjmp	.+8      	; 0xc32 <__pack_f+0x9c>
     c2a:	88 0f       	add	r24, r24
     c2c:	99 1f       	adc	r25, r25
     c2e:	aa 1f       	adc	r26, r26
     c30:	bb 1f       	adc	r27, r27
     c32:	2a 95       	dec	r18
     c34:	d2 f7       	brpl	.-12     	; 0xc2a <__pack_f+0x94>
     c36:	01 97       	sbiw	r24, 0x01	; 1
     c38:	a1 09       	sbc	r26, r1
     c3a:	b1 09       	sbc	r27, r1
     c3c:	8e 21       	and	r24, r14
     c3e:	9f 21       	and	r25, r15
     c40:	a0 23       	and	r26, r16
     c42:	b1 23       	and	r27, r17
     c44:	00 97       	sbiw	r24, 0x00	; 0
     c46:	a1 05       	cpc	r26, r1
     c48:	b1 05       	cpc	r27, r1
     c4a:	21 f0       	breq	.+8      	; 0xc54 <__pack_f+0xbe>
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	a0 e0       	ldi	r26, 0x00	; 0
     c52:	b0 e0       	ldi	r27, 0x00	; 0
     c54:	9a 01       	movw	r18, r20
     c56:	ab 01       	movw	r20, r22
     c58:	28 2b       	or	r18, r24
     c5a:	39 2b       	or	r19, r25
     c5c:	4a 2b       	or	r20, r26
     c5e:	5b 2b       	or	r21, r27
     c60:	da 01       	movw	r26, r20
     c62:	c9 01       	movw	r24, r18
     c64:	8f 77       	andi	r24, 0x7F	; 127
     c66:	90 70       	andi	r25, 0x00	; 0
     c68:	a0 70       	andi	r26, 0x00	; 0
     c6a:	b0 70       	andi	r27, 0x00	; 0
     c6c:	80 34       	cpi	r24, 0x40	; 64
     c6e:	91 05       	cpc	r25, r1
     c70:	a1 05       	cpc	r26, r1
     c72:	b1 05       	cpc	r27, r1
     c74:	39 f4       	brne	.+14     	; 0xc84 <__pack_f+0xee>
     c76:	27 ff       	sbrs	r18, 7
     c78:	09 c0       	rjmp	.+18     	; 0xc8c <__pack_f+0xf6>
     c7a:	20 5c       	subi	r18, 0xC0	; 192
     c7c:	3f 4f       	sbci	r19, 0xFF	; 255
     c7e:	4f 4f       	sbci	r20, 0xFF	; 255
     c80:	5f 4f       	sbci	r21, 0xFF	; 255
     c82:	04 c0       	rjmp	.+8      	; 0xc8c <__pack_f+0xf6>
     c84:	21 5c       	subi	r18, 0xC1	; 193
     c86:	3f 4f       	sbci	r19, 0xFF	; 255
     c88:	4f 4f       	sbci	r20, 0xFF	; 255
     c8a:	5f 4f       	sbci	r21, 0xFF	; 255
     c8c:	e0 e0       	ldi	r30, 0x00	; 0
     c8e:	f0 e0       	ldi	r31, 0x00	; 0
     c90:	20 30       	cpi	r18, 0x00	; 0
     c92:	a0 e0       	ldi	r26, 0x00	; 0
     c94:	3a 07       	cpc	r19, r26
     c96:	a0 e0       	ldi	r26, 0x00	; 0
     c98:	4a 07       	cpc	r20, r26
     c9a:	a0 e4       	ldi	r26, 0x40	; 64
     c9c:	5a 07       	cpc	r21, r26
     c9e:	10 f0       	brcs	.+4      	; 0xca4 <__pack_f+0x10e>
     ca0:	e1 e0       	ldi	r30, 0x01	; 1
     ca2:	f0 e0       	ldi	r31, 0x00	; 0
     ca4:	79 01       	movw	r14, r18
     ca6:	8a 01       	movw	r16, r20
     ca8:	27 c0       	rjmp	.+78     	; 0xcf8 <__pack_f+0x162>
     caa:	60 38       	cpi	r22, 0x80	; 128
     cac:	71 05       	cpc	r23, r1
     cae:	64 f5       	brge	.+88     	; 0xd08 <__pack_f+0x172>
     cb0:	fb 01       	movw	r30, r22
     cb2:	e1 58       	subi	r30, 0x81	; 129
     cb4:	ff 4f       	sbci	r31, 0xFF	; 255
     cb6:	d8 01       	movw	r26, r16
     cb8:	c7 01       	movw	r24, r14
     cba:	8f 77       	andi	r24, 0x7F	; 127
     cbc:	90 70       	andi	r25, 0x00	; 0
     cbe:	a0 70       	andi	r26, 0x00	; 0
     cc0:	b0 70       	andi	r27, 0x00	; 0
     cc2:	80 34       	cpi	r24, 0x40	; 64
     cc4:	91 05       	cpc	r25, r1
     cc6:	a1 05       	cpc	r26, r1
     cc8:	b1 05       	cpc	r27, r1
     cca:	39 f4       	brne	.+14     	; 0xcda <__pack_f+0x144>
     ccc:	e7 fe       	sbrs	r14, 7
     cce:	0d c0       	rjmp	.+26     	; 0xcea <__pack_f+0x154>
     cd0:	80 e4       	ldi	r24, 0x40	; 64
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	a0 e0       	ldi	r26, 0x00	; 0
     cd6:	b0 e0       	ldi	r27, 0x00	; 0
     cd8:	04 c0       	rjmp	.+8      	; 0xce2 <__pack_f+0x14c>
     cda:	8f e3       	ldi	r24, 0x3F	; 63
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	a0 e0       	ldi	r26, 0x00	; 0
     ce0:	b0 e0       	ldi	r27, 0x00	; 0
     ce2:	e8 0e       	add	r14, r24
     ce4:	f9 1e       	adc	r15, r25
     ce6:	0a 1f       	adc	r16, r26
     ce8:	1b 1f       	adc	r17, r27
     cea:	17 ff       	sbrs	r17, 7
     cec:	05 c0       	rjmp	.+10     	; 0xcf8 <__pack_f+0x162>
     cee:	16 95       	lsr	r17
     cf0:	07 95       	ror	r16
     cf2:	f7 94       	ror	r15
     cf4:	e7 94       	ror	r14
     cf6:	31 96       	adiw	r30, 0x01	; 1
     cf8:	87 e0       	ldi	r24, 0x07	; 7
     cfa:	16 95       	lsr	r17
     cfc:	07 95       	ror	r16
     cfe:	f7 94       	ror	r15
     d00:	e7 94       	ror	r14
     d02:	8a 95       	dec	r24
     d04:	d1 f7       	brne	.-12     	; 0xcfa <__pack_f+0x164>
     d06:	05 c0       	rjmp	.+10     	; 0xd12 <__pack_f+0x17c>
     d08:	ee 24       	eor	r14, r14
     d0a:	ff 24       	eor	r15, r15
     d0c:	87 01       	movw	r16, r14
     d0e:	ef ef       	ldi	r30, 0xFF	; 255
     d10:	f0 e0       	ldi	r31, 0x00	; 0
     d12:	6e 2f       	mov	r22, r30
     d14:	67 95       	ror	r22
     d16:	66 27       	eor	r22, r22
     d18:	67 95       	ror	r22
     d1a:	90 2f       	mov	r25, r16
     d1c:	9f 77       	andi	r25, 0x7F	; 127
     d1e:	d7 94       	ror	r13
     d20:	dd 24       	eor	r13, r13
     d22:	d7 94       	ror	r13
     d24:	8e 2f       	mov	r24, r30
     d26:	86 95       	lsr	r24
     d28:	49 2f       	mov	r20, r25
     d2a:	46 2b       	or	r20, r22
     d2c:	58 2f       	mov	r21, r24
     d2e:	5d 29       	or	r21, r13
     d30:	b7 01       	movw	r22, r14
     d32:	ca 01       	movw	r24, r20
     d34:	1f 91       	pop	r17
     d36:	0f 91       	pop	r16
     d38:	ff 90       	pop	r15
     d3a:	ef 90       	pop	r14
     d3c:	df 90       	pop	r13
     d3e:	08 95       	ret

00000d40 <__unpack_f>:
     d40:	fc 01       	movw	r30, r24
     d42:	db 01       	movw	r26, r22
     d44:	40 81       	ld	r20, Z
     d46:	51 81       	ldd	r21, Z+1	; 0x01
     d48:	22 81       	ldd	r18, Z+2	; 0x02
     d4a:	62 2f       	mov	r22, r18
     d4c:	6f 77       	andi	r22, 0x7F	; 127
     d4e:	70 e0       	ldi	r23, 0x00	; 0
     d50:	22 1f       	adc	r18, r18
     d52:	22 27       	eor	r18, r18
     d54:	22 1f       	adc	r18, r18
     d56:	93 81       	ldd	r25, Z+3	; 0x03
     d58:	89 2f       	mov	r24, r25
     d5a:	88 0f       	add	r24, r24
     d5c:	82 2b       	or	r24, r18
     d5e:	28 2f       	mov	r18, r24
     d60:	30 e0       	ldi	r19, 0x00	; 0
     d62:	99 1f       	adc	r25, r25
     d64:	99 27       	eor	r25, r25
     d66:	99 1f       	adc	r25, r25
     d68:	11 96       	adiw	r26, 0x01	; 1
     d6a:	9c 93       	st	X, r25
     d6c:	11 97       	sbiw	r26, 0x01	; 1
     d6e:	21 15       	cp	r18, r1
     d70:	31 05       	cpc	r19, r1
     d72:	a9 f5       	brne	.+106    	; 0xdde <__unpack_f+0x9e>
     d74:	41 15       	cp	r20, r1
     d76:	51 05       	cpc	r21, r1
     d78:	61 05       	cpc	r22, r1
     d7a:	71 05       	cpc	r23, r1
     d7c:	11 f4       	brne	.+4      	; 0xd82 <__unpack_f+0x42>
     d7e:	82 e0       	ldi	r24, 0x02	; 2
     d80:	37 c0       	rjmp	.+110    	; 0xdf0 <__unpack_f+0xb0>
     d82:	82 e8       	ldi	r24, 0x82	; 130
     d84:	9f ef       	ldi	r25, 0xFF	; 255
     d86:	13 96       	adiw	r26, 0x03	; 3
     d88:	9c 93       	st	X, r25
     d8a:	8e 93       	st	-X, r24
     d8c:	12 97       	sbiw	r26, 0x02	; 2
     d8e:	9a 01       	movw	r18, r20
     d90:	ab 01       	movw	r20, r22
     d92:	67 e0       	ldi	r22, 0x07	; 7
     d94:	22 0f       	add	r18, r18
     d96:	33 1f       	adc	r19, r19
     d98:	44 1f       	adc	r20, r20
     d9a:	55 1f       	adc	r21, r21
     d9c:	6a 95       	dec	r22
     d9e:	d1 f7       	brne	.-12     	; 0xd94 <__unpack_f+0x54>
     da0:	83 e0       	ldi	r24, 0x03	; 3
     da2:	8c 93       	st	X, r24
     da4:	0d c0       	rjmp	.+26     	; 0xdc0 <__unpack_f+0x80>
     da6:	22 0f       	add	r18, r18
     da8:	33 1f       	adc	r19, r19
     daa:	44 1f       	adc	r20, r20
     dac:	55 1f       	adc	r21, r21
     dae:	12 96       	adiw	r26, 0x02	; 2
     db0:	8d 91       	ld	r24, X+
     db2:	9c 91       	ld	r25, X
     db4:	13 97       	sbiw	r26, 0x03	; 3
     db6:	01 97       	sbiw	r24, 0x01	; 1
     db8:	13 96       	adiw	r26, 0x03	; 3
     dba:	9c 93       	st	X, r25
     dbc:	8e 93       	st	-X, r24
     dbe:	12 97       	sbiw	r26, 0x02	; 2
     dc0:	20 30       	cpi	r18, 0x00	; 0
     dc2:	80 e0       	ldi	r24, 0x00	; 0
     dc4:	38 07       	cpc	r19, r24
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	48 07       	cpc	r20, r24
     dca:	80 e4       	ldi	r24, 0x40	; 64
     dcc:	58 07       	cpc	r21, r24
     dce:	58 f3       	brcs	.-42     	; 0xda6 <__unpack_f+0x66>
     dd0:	14 96       	adiw	r26, 0x04	; 4
     dd2:	2d 93       	st	X+, r18
     dd4:	3d 93       	st	X+, r19
     dd6:	4d 93       	st	X+, r20
     dd8:	5c 93       	st	X, r21
     dda:	17 97       	sbiw	r26, 0x07	; 7
     ddc:	08 95       	ret
     dde:	2f 3f       	cpi	r18, 0xFF	; 255
     de0:	31 05       	cpc	r19, r1
     de2:	79 f4       	brne	.+30     	; 0xe02 <__unpack_f+0xc2>
     de4:	41 15       	cp	r20, r1
     de6:	51 05       	cpc	r21, r1
     de8:	61 05       	cpc	r22, r1
     dea:	71 05       	cpc	r23, r1
     dec:	19 f4       	brne	.+6      	; 0xdf4 <__unpack_f+0xb4>
     dee:	84 e0       	ldi	r24, 0x04	; 4
     df0:	8c 93       	st	X, r24
     df2:	08 95       	ret
     df4:	64 ff       	sbrs	r22, 4
     df6:	03 c0       	rjmp	.+6      	; 0xdfe <__unpack_f+0xbe>
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	8c 93       	st	X, r24
     dfc:	12 c0       	rjmp	.+36     	; 0xe22 <__unpack_f+0xe2>
     dfe:	1c 92       	st	X, r1
     e00:	10 c0       	rjmp	.+32     	; 0xe22 <__unpack_f+0xe2>
     e02:	2f 57       	subi	r18, 0x7F	; 127
     e04:	30 40       	sbci	r19, 0x00	; 0
     e06:	13 96       	adiw	r26, 0x03	; 3
     e08:	3c 93       	st	X, r19
     e0a:	2e 93       	st	-X, r18
     e0c:	12 97       	sbiw	r26, 0x02	; 2
     e0e:	83 e0       	ldi	r24, 0x03	; 3
     e10:	8c 93       	st	X, r24
     e12:	87 e0       	ldi	r24, 0x07	; 7
     e14:	44 0f       	add	r20, r20
     e16:	55 1f       	adc	r21, r21
     e18:	66 1f       	adc	r22, r22
     e1a:	77 1f       	adc	r23, r23
     e1c:	8a 95       	dec	r24
     e1e:	d1 f7       	brne	.-12     	; 0xe14 <__unpack_f+0xd4>
     e20:	70 64       	ori	r23, 0x40	; 64
     e22:	14 96       	adiw	r26, 0x04	; 4
     e24:	4d 93       	st	X+, r20
     e26:	5d 93       	st	X+, r21
     e28:	6d 93       	st	X+, r22
     e2a:	7c 93       	st	X, r23
     e2c:	17 97       	sbiw	r26, 0x07	; 7
     e2e:	08 95       	ret

00000e30 <__fpcmp_parts_f>:
     e30:	1f 93       	push	r17
     e32:	dc 01       	movw	r26, r24
     e34:	fb 01       	movw	r30, r22
     e36:	9c 91       	ld	r25, X
     e38:	92 30       	cpi	r25, 0x02	; 2
     e3a:	08 f4       	brcc	.+2      	; 0xe3e <__fpcmp_parts_f+0xe>
     e3c:	47 c0       	rjmp	.+142    	; 0xecc <__fpcmp_parts_f+0x9c>
     e3e:	80 81       	ld	r24, Z
     e40:	82 30       	cpi	r24, 0x02	; 2
     e42:	08 f4       	brcc	.+2      	; 0xe46 <__fpcmp_parts_f+0x16>
     e44:	43 c0       	rjmp	.+134    	; 0xecc <__fpcmp_parts_f+0x9c>
     e46:	94 30       	cpi	r25, 0x04	; 4
     e48:	51 f4       	brne	.+20     	; 0xe5e <__fpcmp_parts_f+0x2e>
     e4a:	11 96       	adiw	r26, 0x01	; 1
     e4c:	1c 91       	ld	r17, X
     e4e:	84 30       	cpi	r24, 0x04	; 4
     e50:	99 f5       	brne	.+102    	; 0xeb8 <__fpcmp_parts_f+0x88>
     e52:	81 81       	ldd	r24, Z+1	; 0x01
     e54:	68 2f       	mov	r22, r24
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	61 1b       	sub	r22, r17
     e5a:	71 09       	sbc	r23, r1
     e5c:	3f c0       	rjmp	.+126    	; 0xedc <__fpcmp_parts_f+0xac>
     e5e:	84 30       	cpi	r24, 0x04	; 4
     e60:	21 f0       	breq	.+8      	; 0xe6a <__fpcmp_parts_f+0x3a>
     e62:	92 30       	cpi	r25, 0x02	; 2
     e64:	31 f4       	brne	.+12     	; 0xe72 <__fpcmp_parts_f+0x42>
     e66:	82 30       	cpi	r24, 0x02	; 2
     e68:	b9 f1       	breq	.+110    	; 0xed8 <__fpcmp_parts_f+0xa8>
     e6a:	81 81       	ldd	r24, Z+1	; 0x01
     e6c:	88 23       	and	r24, r24
     e6e:	89 f1       	breq	.+98     	; 0xed2 <__fpcmp_parts_f+0xa2>
     e70:	2d c0       	rjmp	.+90     	; 0xecc <__fpcmp_parts_f+0x9c>
     e72:	11 96       	adiw	r26, 0x01	; 1
     e74:	1c 91       	ld	r17, X
     e76:	11 97       	sbiw	r26, 0x01	; 1
     e78:	82 30       	cpi	r24, 0x02	; 2
     e7a:	f1 f0       	breq	.+60     	; 0xeb8 <__fpcmp_parts_f+0x88>
     e7c:	81 81       	ldd	r24, Z+1	; 0x01
     e7e:	18 17       	cp	r17, r24
     e80:	d9 f4       	brne	.+54     	; 0xeb8 <__fpcmp_parts_f+0x88>
     e82:	12 96       	adiw	r26, 0x02	; 2
     e84:	2d 91       	ld	r18, X+
     e86:	3c 91       	ld	r19, X
     e88:	13 97       	sbiw	r26, 0x03	; 3
     e8a:	82 81       	ldd	r24, Z+2	; 0x02
     e8c:	93 81       	ldd	r25, Z+3	; 0x03
     e8e:	82 17       	cp	r24, r18
     e90:	93 07       	cpc	r25, r19
     e92:	94 f0       	brlt	.+36     	; 0xeb8 <__fpcmp_parts_f+0x88>
     e94:	28 17       	cp	r18, r24
     e96:	39 07       	cpc	r19, r25
     e98:	bc f0       	brlt	.+46     	; 0xec8 <__fpcmp_parts_f+0x98>
     e9a:	14 96       	adiw	r26, 0x04	; 4
     e9c:	8d 91       	ld	r24, X+
     e9e:	9d 91       	ld	r25, X+
     ea0:	0d 90       	ld	r0, X+
     ea2:	bc 91       	ld	r27, X
     ea4:	a0 2d       	mov	r26, r0
     ea6:	24 81       	ldd	r18, Z+4	; 0x04
     ea8:	35 81       	ldd	r19, Z+5	; 0x05
     eaa:	46 81       	ldd	r20, Z+6	; 0x06
     eac:	57 81       	ldd	r21, Z+7	; 0x07
     eae:	28 17       	cp	r18, r24
     eb0:	39 07       	cpc	r19, r25
     eb2:	4a 07       	cpc	r20, r26
     eb4:	5b 07       	cpc	r21, r27
     eb6:	18 f4       	brcc	.+6      	; 0xebe <__fpcmp_parts_f+0x8e>
     eb8:	11 23       	and	r17, r17
     eba:	41 f0       	breq	.+16     	; 0xecc <__fpcmp_parts_f+0x9c>
     ebc:	0a c0       	rjmp	.+20     	; 0xed2 <__fpcmp_parts_f+0xa2>
     ebe:	82 17       	cp	r24, r18
     ec0:	93 07       	cpc	r25, r19
     ec2:	a4 07       	cpc	r26, r20
     ec4:	b5 07       	cpc	r27, r21
     ec6:	40 f4       	brcc	.+16     	; 0xed8 <__fpcmp_parts_f+0xa8>
     ec8:	11 23       	and	r17, r17
     eca:	19 f0       	breq	.+6      	; 0xed2 <__fpcmp_parts_f+0xa2>
     ecc:	61 e0       	ldi	r22, 0x01	; 1
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	05 c0       	rjmp	.+10     	; 0xedc <__fpcmp_parts_f+0xac>
     ed2:	6f ef       	ldi	r22, 0xFF	; 255
     ed4:	7f ef       	ldi	r23, 0xFF	; 255
     ed6:	02 c0       	rjmp	.+4      	; 0xedc <__fpcmp_parts_f+0xac>
     ed8:	60 e0       	ldi	r22, 0x00	; 0
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	cb 01       	movw	r24, r22
     ede:	1f 91       	pop	r17
     ee0:	08 95       	ret

00000ee2 <DIO_VidSetPinDirection>:
#include "DIO_Private.h"
#include "DIO_Interface.h"


/* Setting Pin Direction */
void DIO_VidSetPinDirection(u8 u8_port, u8 u8_pin, u8 u8_direction) {
     ee2:	df 93       	push	r29
     ee4:	cf 93       	push	r28
     ee6:	cd b7       	in	r28, 0x3d	; 61
     ee8:	de b7       	in	r29, 0x3e	; 62
     eea:	27 97       	sbiw	r28, 0x07	; 7
     eec:	0f b6       	in	r0, 0x3f	; 63
     eee:	f8 94       	cli
     ef0:	de bf       	out	0x3e, r29	; 62
     ef2:	0f be       	out	0x3f, r0	; 63
     ef4:	cd bf       	out	0x3d, r28	; 61
     ef6:	89 83       	std	Y+1, r24	; 0x01
     ef8:	6a 83       	std	Y+2, r22	; 0x02
     efa:	4b 83       	std	Y+3, r20	; 0x03
	if (u8_direction == INPUT) {
     efc:	8b 81       	ldd	r24, Y+3	; 0x03
     efe:	88 23       	and	r24, r24
     f00:	09 f0       	breq	.+2      	; 0xf04 <DIO_VidSetPinDirection+0x22>
     f02:	74 c0       	rjmp	.+232    	; 0xfec <DIO_VidSetPinDirection+0x10a>
		switch (u8_port) {
     f04:	89 81       	ldd	r24, Y+1	; 0x01
     f06:	28 2f       	mov	r18, r24
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	3f 83       	std	Y+7, r19	; 0x07
     f0c:	2e 83       	std	Y+6, r18	; 0x06
     f0e:	8e 81       	ldd	r24, Y+6	; 0x06
     f10:	9f 81       	ldd	r25, Y+7	; 0x07
     f12:	81 30       	cpi	r24, 0x01	; 1
     f14:	91 05       	cpc	r25, r1
     f16:	59 f1       	breq	.+86     	; 0xf6e <DIO_VidSetPinDirection+0x8c>
     f18:	2e 81       	ldd	r18, Y+6	; 0x06
     f1a:	3f 81       	ldd	r19, Y+7	; 0x07
     f1c:	22 30       	cpi	r18, 0x02	; 2
     f1e:	31 05       	cpc	r19, r1
     f20:	2c f4       	brge	.+10     	; 0xf2c <DIO_VidSetPinDirection+0x4a>
     f22:	8e 81       	ldd	r24, Y+6	; 0x06
     f24:	9f 81       	ldd	r25, Y+7	; 0x07
     f26:	00 97       	sbiw	r24, 0x00	; 0
     f28:	69 f0       	breq	.+26     	; 0xf44 <DIO_VidSetPinDirection+0x62>
     f2a:	d2 c0       	rjmp	.+420    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
     f2c:	2e 81       	ldd	r18, Y+6	; 0x06
     f2e:	3f 81       	ldd	r19, Y+7	; 0x07
     f30:	22 30       	cpi	r18, 0x02	; 2
     f32:	31 05       	cpc	r19, r1
     f34:	89 f1       	breq	.+98     	; 0xf98 <DIO_VidSetPinDirection+0xb6>
     f36:	8e 81       	ldd	r24, Y+6	; 0x06
     f38:	9f 81       	ldd	r25, Y+7	; 0x07
     f3a:	83 30       	cpi	r24, 0x03	; 3
     f3c:	91 05       	cpc	r25, r1
     f3e:	09 f4       	brne	.+2      	; 0xf42 <DIO_VidSetPinDirection+0x60>
     f40:	40 c0       	rjmp	.+128    	; 0xfc2 <DIO_VidSetPinDirection+0xe0>
     f42:	c6 c0       	rjmp	.+396    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
		case PORT_A:
			CLEAR_BIT(DDRA, u8_pin);
     f44:	aa e3       	ldi	r26, 0x3A	; 58
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	ea e3       	ldi	r30, 0x3A	; 58
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	48 2f       	mov	r20, r24
     f50:	8a 81       	ldd	r24, Y+2	; 0x02
     f52:	28 2f       	mov	r18, r24
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	02 2e       	mov	r0, r18
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <DIO_VidSetPinDirection+0x80>
     f5e:	88 0f       	add	r24, r24
     f60:	99 1f       	adc	r25, r25
     f62:	0a 94       	dec	r0
     f64:	e2 f7       	brpl	.-8      	; 0xf5e <DIO_VidSetPinDirection+0x7c>
     f66:	80 95       	com	r24
     f68:	84 23       	and	r24, r20
     f6a:	8c 93       	st	X, r24
     f6c:	b1 c0       	rjmp	.+354    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
			break;
		case PORT_B:
			CLEAR_BIT(DDRB, u8_pin);
     f6e:	a7 e3       	ldi	r26, 0x37	; 55
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	e7 e3       	ldi	r30, 0x37	; 55
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	80 81       	ld	r24, Z
     f78:	48 2f       	mov	r20, r24
     f7a:	8a 81       	ldd	r24, Y+2	; 0x02
     f7c:	28 2f       	mov	r18, r24
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	81 e0       	ldi	r24, 0x01	; 1
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	02 2e       	mov	r0, r18
     f86:	02 c0       	rjmp	.+4      	; 0xf8c <DIO_VidSetPinDirection+0xaa>
     f88:	88 0f       	add	r24, r24
     f8a:	99 1f       	adc	r25, r25
     f8c:	0a 94       	dec	r0
     f8e:	e2 f7       	brpl	.-8      	; 0xf88 <DIO_VidSetPinDirection+0xa6>
     f90:	80 95       	com	r24
     f92:	84 23       	and	r24, r20
     f94:	8c 93       	st	X, r24
     f96:	9c c0       	rjmp	.+312    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
			break;
		case PORT_C:
			CLEAR_BIT(DDRC, u8_pin);
     f98:	a4 e3       	ldi	r26, 0x34	; 52
     f9a:	b0 e0       	ldi	r27, 0x00	; 0
     f9c:	e4 e3       	ldi	r30, 0x34	; 52
     f9e:	f0 e0       	ldi	r31, 0x00	; 0
     fa0:	80 81       	ld	r24, Z
     fa2:	48 2f       	mov	r20, r24
     fa4:	8a 81       	ldd	r24, Y+2	; 0x02
     fa6:	28 2f       	mov	r18, r24
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	81 e0       	ldi	r24, 0x01	; 1
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	02 2e       	mov	r0, r18
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <DIO_VidSetPinDirection+0xd4>
     fb2:	88 0f       	add	r24, r24
     fb4:	99 1f       	adc	r25, r25
     fb6:	0a 94       	dec	r0
     fb8:	e2 f7       	brpl	.-8      	; 0xfb2 <DIO_VidSetPinDirection+0xd0>
     fba:	80 95       	com	r24
     fbc:	84 23       	and	r24, r20
     fbe:	8c 93       	st	X, r24
     fc0:	87 c0       	rjmp	.+270    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
			break;
		case PORT_D:
			CLEAR_BIT(DDRD, u8_pin);
     fc2:	a1 e3       	ldi	r26, 0x31	; 49
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	e1 e3       	ldi	r30, 0x31	; 49
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	80 81       	ld	r24, Z
     fcc:	48 2f       	mov	r20, r24
     fce:	8a 81       	ldd	r24, Y+2	; 0x02
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	02 2e       	mov	r0, r18
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <DIO_VidSetPinDirection+0xfe>
     fdc:	88 0f       	add	r24, r24
     fde:	99 1f       	adc	r25, r25
     fe0:	0a 94       	dec	r0
     fe2:	e2 f7       	brpl	.-8      	; 0xfdc <DIO_VidSetPinDirection+0xfa>
     fe4:	80 95       	com	r24
     fe6:	84 23       	and	r24, r20
     fe8:	8c 93       	st	X, r24
     fea:	72 c0       	rjmp	.+228    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
			break;
		}
	} else if (u8_direction == OUTPUT) {
     fec:	8b 81       	ldd	r24, Y+3	; 0x03
     fee:	81 30       	cpi	r24, 0x01	; 1
     ff0:	09 f0       	breq	.+2      	; 0xff4 <DIO_VidSetPinDirection+0x112>
     ff2:	6e c0       	rjmp	.+220    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
		switch (u8_port) {
     ff4:	89 81       	ldd	r24, Y+1	; 0x01
     ff6:	28 2f       	mov	r18, r24
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	3d 83       	std	Y+5, r19	; 0x05
     ffc:	2c 83       	std	Y+4, r18	; 0x04
     ffe:	8c 81       	ldd	r24, Y+4	; 0x04
    1000:	9d 81       	ldd	r25, Y+5	; 0x05
    1002:	81 30       	cpi	r24, 0x01	; 1
    1004:	91 05       	cpc	r25, r1
    1006:	49 f1       	breq	.+82     	; 0x105a <DIO_VidSetPinDirection+0x178>
    1008:	2c 81       	ldd	r18, Y+4	; 0x04
    100a:	3d 81       	ldd	r19, Y+5	; 0x05
    100c:	22 30       	cpi	r18, 0x02	; 2
    100e:	31 05       	cpc	r19, r1
    1010:	2c f4       	brge	.+10     	; 0x101c <DIO_VidSetPinDirection+0x13a>
    1012:	8c 81       	ldd	r24, Y+4	; 0x04
    1014:	9d 81       	ldd	r25, Y+5	; 0x05
    1016:	00 97       	sbiw	r24, 0x00	; 0
    1018:	61 f0       	breq	.+24     	; 0x1032 <DIO_VidSetPinDirection+0x150>
    101a:	5a c0       	rjmp	.+180    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
    101c:	2c 81       	ldd	r18, Y+4	; 0x04
    101e:	3d 81       	ldd	r19, Y+5	; 0x05
    1020:	22 30       	cpi	r18, 0x02	; 2
    1022:	31 05       	cpc	r19, r1
    1024:	71 f1       	breq	.+92     	; 0x1082 <DIO_VidSetPinDirection+0x1a0>
    1026:	8c 81       	ldd	r24, Y+4	; 0x04
    1028:	9d 81       	ldd	r25, Y+5	; 0x05
    102a:	83 30       	cpi	r24, 0x03	; 3
    102c:	91 05       	cpc	r25, r1
    102e:	e9 f1       	breq	.+122    	; 0x10aa <DIO_VidSetPinDirection+0x1c8>
    1030:	4f c0       	rjmp	.+158    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
		case PORT_A:
			SET_BIT(DDRA, u8_pin);
    1032:	aa e3       	ldi	r26, 0x3A	; 58
    1034:	b0 e0       	ldi	r27, 0x00	; 0
    1036:	ea e3       	ldi	r30, 0x3A	; 58
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	80 81       	ld	r24, Z
    103c:	48 2f       	mov	r20, r24
    103e:	8a 81       	ldd	r24, Y+2	; 0x02
    1040:	28 2f       	mov	r18, r24
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	02 2e       	mov	r0, r18
    104a:	02 c0       	rjmp	.+4      	; 0x1050 <DIO_VidSetPinDirection+0x16e>
    104c:	88 0f       	add	r24, r24
    104e:	99 1f       	adc	r25, r25
    1050:	0a 94       	dec	r0
    1052:	e2 f7       	brpl	.-8      	; 0x104c <DIO_VidSetPinDirection+0x16a>
    1054:	84 2b       	or	r24, r20
    1056:	8c 93       	st	X, r24
    1058:	3b c0       	rjmp	.+118    	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
			break;
		case PORT_B:
			SET_BIT(DDRB, u8_pin);
    105a:	a7 e3       	ldi	r26, 0x37	; 55
    105c:	b0 e0       	ldi	r27, 0x00	; 0
    105e:	e7 e3       	ldi	r30, 0x37	; 55
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	80 81       	ld	r24, Z
    1064:	48 2f       	mov	r20, r24
    1066:	8a 81       	ldd	r24, Y+2	; 0x02
    1068:	28 2f       	mov	r18, r24
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	02 2e       	mov	r0, r18
    1072:	02 c0       	rjmp	.+4      	; 0x1078 <DIO_VidSetPinDirection+0x196>
    1074:	88 0f       	add	r24, r24
    1076:	99 1f       	adc	r25, r25
    1078:	0a 94       	dec	r0
    107a:	e2 f7       	brpl	.-8      	; 0x1074 <DIO_VidSetPinDirection+0x192>
    107c:	84 2b       	or	r24, r20
    107e:	8c 93       	st	X, r24
    1080:	27 c0       	rjmp	.+78     	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
			break;
		case PORT_C:
			SET_BIT(DDRC, u8_pin);
    1082:	a4 e3       	ldi	r26, 0x34	; 52
    1084:	b0 e0       	ldi	r27, 0x00	; 0
    1086:	e4 e3       	ldi	r30, 0x34	; 52
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	80 81       	ld	r24, Z
    108c:	48 2f       	mov	r20, r24
    108e:	8a 81       	ldd	r24, Y+2	; 0x02
    1090:	28 2f       	mov	r18, r24
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	02 2e       	mov	r0, r18
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <DIO_VidSetPinDirection+0x1be>
    109c:	88 0f       	add	r24, r24
    109e:	99 1f       	adc	r25, r25
    10a0:	0a 94       	dec	r0
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <DIO_VidSetPinDirection+0x1ba>
    10a4:	84 2b       	or	r24, r20
    10a6:	8c 93       	st	X, r24
    10a8:	13 c0       	rjmp	.+38     	; 0x10d0 <DIO_VidSetPinDirection+0x1ee>
			break;
		case PORT_D:
			SET_BIT(DDRD, u8_pin);
    10aa:	a1 e3       	ldi	r26, 0x31	; 49
    10ac:	b0 e0       	ldi	r27, 0x00	; 0
    10ae:	e1 e3       	ldi	r30, 0x31	; 49
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	80 81       	ld	r24, Z
    10b4:	48 2f       	mov	r20, r24
    10b6:	8a 81       	ldd	r24, Y+2	; 0x02
    10b8:	28 2f       	mov	r18, r24
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	02 2e       	mov	r0, r18
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <DIO_VidSetPinDirection+0x1e6>
    10c4:	88 0f       	add	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	0a 94       	dec	r0
    10ca:	e2 f7       	brpl	.-8      	; 0x10c4 <DIO_VidSetPinDirection+0x1e2>
    10cc:	84 2b       	or	r24, r20
    10ce:	8c 93       	st	X, r24
			break;
		}
	}
}
    10d0:	27 96       	adiw	r28, 0x07	; 7
    10d2:	0f b6       	in	r0, 0x3f	; 63
    10d4:	f8 94       	cli
    10d6:	de bf       	out	0x3e, r29	; 62
    10d8:	0f be       	out	0x3f, r0	; 63
    10da:	cd bf       	out	0x3d, r28	; 61
    10dc:	cf 91       	pop	r28
    10de:	df 91       	pop	r29
    10e0:	08 95       	ret

000010e2 <DIO_VidSetPinValue>:

/* Setting Pin Value */
void DIO_VidSetPinValue(u8 u8_port, u8 u8_pin, u8 u8_value) {
    10e2:	df 93       	push	r29
    10e4:	cf 93       	push	r28
    10e6:	cd b7       	in	r28, 0x3d	; 61
    10e8:	de b7       	in	r29, 0x3e	; 62
    10ea:	27 97       	sbiw	r28, 0x07	; 7
    10ec:	0f b6       	in	r0, 0x3f	; 63
    10ee:	f8 94       	cli
    10f0:	de bf       	out	0x3e, r29	; 62
    10f2:	0f be       	out	0x3f, r0	; 63
    10f4:	cd bf       	out	0x3d, r28	; 61
    10f6:	89 83       	std	Y+1, r24	; 0x01
    10f8:	6a 83       	std	Y+2, r22	; 0x02
    10fa:	4b 83       	std	Y+3, r20	; 0x03
	if (u8_value == PIN_LOW) {
    10fc:	8b 81       	ldd	r24, Y+3	; 0x03
    10fe:	88 23       	and	r24, r24
    1100:	09 f0       	breq	.+2      	; 0x1104 <DIO_VidSetPinValue+0x22>
    1102:	74 c0       	rjmp	.+232    	; 0x11ec <DIO_VidSetPinValue+0x10a>
		switch (u8_port) {
    1104:	89 81       	ldd	r24, Y+1	; 0x01
    1106:	28 2f       	mov	r18, r24
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	3f 83       	std	Y+7, r19	; 0x07
    110c:	2e 83       	std	Y+6, r18	; 0x06
    110e:	8e 81       	ldd	r24, Y+6	; 0x06
    1110:	9f 81       	ldd	r25, Y+7	; 0x07
    1112:	81 30       	cpi	r24, 0x01	; 1
    1114:	91 05       	cpc	r25, r1
    1116:	59 f1       	breq	.+86     	; 0x116e <DIO_VidSetPinValue+0x8c>
    1118:	2e 81       	ldd	r18, Y+6	; 0x06
    111a:	3f 81       	ldd	r19, Y+7	; 0x07
    111c:	22 30       	cpi	r18, 0x02	; 2
    111e:	31 05       	cpc	r19, r1
    1120:	2c f4       	brge	.+10     	; 0x112c <DIO_VidSetPinValue+0x4a>
    1122:	8e 81       	ldd	r24, Y+6	; 0x06
    1124:	9f 81       	ldd	r25, Y+7	; 0x07
    1126:	00 97       	sbiw	r24, 0x00	; 0
    1128:	69 f0       	breq	.+26     	; 0x1144 <DIO_VidSetPinValue+0x62>
    112a:	d2 c0       	rjmp	.+420    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
    112c:	2e 81       	ldd	r18, Y+6	; 0x06
    112e:	3f 81       	ldd	r19, Y+7	; 0x07
    1130:	22 30       	cpi	r18, 0x02	; 2
    1132:	31 05       	cpc	r19, r1
    1134:	89 f1       	breq	.+98     	; 0x1198 <DIO_VidSetPinValue+0xb6>
    1136:	8e 81       	ldd	r24, Y+6	; 0x06
    1138:	9f 81       	ldd	r25, Y+7	; 0x07
    113a:	83 30       	cpi	r24, 0x03	; 3
    113c:	91 05       	cpc	r25, r1
    113e:	09 f4       	brne	.+2      	; 0x1142 <DIO_VidSetPinValue+0x60>
    1140:	40 c0       	rjmp	.+128    	; 0x11c2 <DIO_VidSetPinValue+0xe0>
    1142:	c6 c0       	rjmp	.+396    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
		case PORT_A:
			CLEAR_BIT(PORTA, u8_pin);
    1144:	ab e3       	ldi	r26, 0x3B	; 59
    1146:	b0 e0       	ldi	r27, 0x00	; 0
    1148:	eb e3       	ldi	r30, 0x3B	; 59
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	80 81       	ld	r24, Z
    114e:	48 2f       	mov	r20, r24
    1150:	8a 81       	ldd	r24, Y+2	; 0x02
    1152:	28 2f       	mov	r18, r24
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	02 2e       	mov	r0, r18
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <DIO_VidSetPinValue+0x80>
    115e:	88 0f       	add	r24, r24
    1160:	99 1f       	adc	r25, r25
    1162:	0a 94       	dec	r0
    1164:	e2 f7       	brpl	.-8      	; 0x115e <DIO_VidSetPinValue+0x7c>
    1166:	80 95       	com	r24
    1168:	84 23       	and	r24, r20
    116a:	8c 93       	st	X, r24
    116c:	b1 c0       	rjmp	.+354    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
			break;
		case PORT_B:
			CLEAR_BIT(PORTB, u8_pin);
    116e:	a8 e3       	ldi	r26, 0x38	; 56
    1170:	b0 e0       	ldi	r27, 0x00	; 0
    1172:	e8 e3       	ldi	r30, 0x38	; 56
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	80 81       	ld	r24, Z
    1178:	48 2f       	mov	r20, r24
    117a:	8a 81       	ldd	r24, Y+2	; 0x02
    117c:	28 2f       	mov	r18, r24
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	02 2e       	mov	r0, r18
    1186:	02 c0       	rjmp	.+4      	; 0x118c <DIO_VidSetPinValue+0xaa>
    1188:	88 0f       	add	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	0a 94       	dec	r0
    118e:	e2 f7       	brpl	.-8      	; 0x1188 <DIO_VidSetPinValue+0xa6>
    1190:	80 95       	com	r24
    1192:	84 23       	and	r24, r20
    1194:	8c 93       	st	X, r24
    1196:	9c c0       	rjmp	.+312    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
			break;
		case PORT_C:
			CLEAR_BIT(PORTC, u8_pin);
    1198:	a5 e3       	ldi	r26, 0x35	; 53
    119a:	b0 e0       	ldi	r27, 0x00	; 0
    119c:	e5 e3       	ldi	r30, 0x35	; 53
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	80 81       	ld	r24, Z
    11a2:	48 2f       	mov	r20, r24
    11a4:	8a 81       	ldd	r24, Y+2	; 0x02
    11a6:	28 2f       	mov	r18, r24
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	02 2e       	mov	r0, r18
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <DIO_VidSetPinValue+0xd4>
    11b2:	88 0f       	add	r24, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	0a 94       	dec	r0
    11b8:	e2 f7       	brpl	.-8      	; 0x11b2 <DIO_VidSetPinValue+0xd0>
    11ba:	80 95       	com	r24
    11bc:	84 23       	and	r24, r20
    11be:	8c 93       	st	X, r24
    11c0:	87 c0       	rjmp	.+270    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
			break;
		case PORT_D:
			CLEAR_BIT(PORTD, u8_pin);
    11c2:	a2 e3       	ldi	r26, 0x32	; 50
    11c4:	b0 e0       	ldi	r27, 0x00	; 0
    11c6:	e2 e3       	ldi	r30, 0x32	; 50
    11c8:	f0 e0       	ldi	r31, 0x00	; 0
    11ca:	80 81       	ld	r24, Z
    11cc:	48 2f       	mov	r20, r24
    11ce:	8a 81       	ldd	r24, Y+2	; 0x02
    11d0:	28 2f       	mov	r18, r24
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	81 e0       	ldi	r24, 0x01	; 1
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	02 2e       	mov	r0, r18
    11da:	02 c0       	rjmp	.+4      	; 0x11e0 <DIO_VidSetPinValue+0xfe>
    11dc:	88 0f       	add	r24, r24
    11de:	99 1f       	adc	r25, r25
    11e0:	0a 94       	dec	r0
    11e2:	e2 f7       	brpl	.-8      	; 0x11dc <DIO_VidSetPinValue+0xfa>
    11e4:	80 95       	com	r24
    11e6:	84 23       	and	r24, r20
    11e8:	8c 93       	st	X, r24
    11ea:	72 c0       	rjmp	.+228    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
			break;
		}
	} else if (u8_value == PIN_HIGH) {
    11ec:	8b 81       	ldd	r24, Y+3	; 0x03
    11ee:	81 30       	cpi	r24, 0x01	; 1
    11f0:	09 f0       	breq	.+2      	; 0x11f4 <DIO_VidSetPinValue+0x112>
    11f2:	6e c0       	rjmp	.+220    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
		switch (u8_port) {
    11f4:	89 81       	ldd	r24, Y+1	; 0x01
    11f6:	28 2f       	mov	r18, r24
    11f8:	30 e0       	ldi	r19, 0x00	; 0
    11fa:	3d 83       	std	Y+5, r19	; 0x05
    11fc:	2c 83       	std	Y+4, r18	; 0x04
    11fe:	8c 81       	ldd	r24, Y+4	; 0x04
    1200:	9d 81       	ldd	r25, Y+5	; 0x05
    1202:	81 30       	cpi	r24, 0x01	; 1
    1204:	91 05       	cpc	r25, r1
    1206:	49 f1       	breq	.+82     	; 0x125a <DIO_VidSetPinValue+0x178>
    1208:	2c 81       	ldd	r18, Y+4	; 0x04
    120a:	3d 81       	ldd	r19, Y+5	; 0x05
    120c:	22 30       	cpi	r18, 0x02	; 2
    120e:	31 05       	cpc	r19, r1
    1210:	2c f4       	brge	.+10     	; 0x121c <DIO_VidSetPinValue+0x13a>
    1212:	8c 81       	ldd	r24, Y+4	; 0x04
    1214:	9d 81       	ldd	r25, Y+5	; 0x05
    1216:	00 97       	sbiw	r24, 0x00	; 0
    1218:	61 f0       	breq	.+24     	; 0x1232 <DIO_VidSetPinValue+0x150>
    121a:	5a c0       	rjmp	.+180    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
    121c:	2c 81       	ldd	r18, Y+4	; 0x04
    121e:	3d 81       	ldd	r19, Y+5	; 0x05
    1220:	22 30       	cpi	r18, 0x02	; 2
    1222:	31 05       	cpc	r19, r1
    1224:	71 f1       	breq	.+92     	; 0x1282 <DIO_VidSetPinValue+0x1a0>
    1226:	8c 81       	ldd	r24, Y+4	; 0x04
    1228:	9d 81       	ldd	r25, Y+5	; 0x05
    122a:	83 30       	cpi	r24, 0x03	; 3
    122c:	91 05       	cpc	r25, r1
    122e:	e9 f1       	breq	.+122    	; 0x12aa <DIO_VidSetPinValue+0x1c8>
    1230:	4f c0       	rjmp	.+158    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
		case PORT_A:
			SET_BIT(PORTA, u8_pin);
    1232:	ab e3       	ldi	r26, 0x3B	; 59
    1234:	b0 e0       	ldi	r27, 0x00	; 0
    1236:	eb e3       	ldi	r30, 0x3B	; 59
    1238:	f0 e0       	ldi	r31, 0x00	; 0
    123a:	80 81       	ld	r24, Z
    123c:	48 2f       	mov	r20, r24
    123e:	8a 81       	ldd	r24, Y+2	; 0x02
    1240:	28 2f       	mov	r18, r24
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	02 2e       	mov	r0, r18
    124a:	02 c0       	rjmp	.+4      	; 0x1250 <DIO_VidSetPinValue+0x16e>
    124c:	88 0f       	add	r24, r24
    124e:	99 1f       	adc	r25, r25
    1250:	0a 94       	dec	r0
    1252:	e2 f7       	brpl	.-8      	; 0x124c <DIO_VidSetPinValue+0x16a>
    1254:	84 2b       	or	r24, r20
    1256:	8c 93       	st	X, r24
    1258:	3b c0       	rjmp	.+118    	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
			break;
		case PORT_B:
			SET_BIT(PORTB, u8_pin);
    125a:	a8 e3       	ldi	r26, 0x38	; 56
    125c:	b0 e0       	ldi	r27, 0x00	; 0
    125e:	e8 e3       	ldi	r30, 0x38	; 56
    1260:	f0 e0       	ldi	r31, 0x00	; 0
    1262:	80 81       	ld	r24, Z
    1264:	48 2f       	mov	r20, r24
    1266:	8a 81       	ldd	r24, Y+2	; 0x02
    1268:	28 2f       	mov	r18, r24
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	81 e0       	ldi	r24, 0x01	; 1
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	02 2e       	mov	r0, r18
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <DIO_VidSetPinValue+0x196>
    1274:	88 0f       	add	r24, r24
    1276:	99 1f       	adc	r25, r25
    1278:	0a 94       	dec	r0
    127a:	e2 f7       	brpl	.-8      	; 0x1274 <DIO_VidSetPinValue+0x192>
    127c:	84 2b       	or	r24, r20
    127e:	8c 93       	st	X, r24
    1280:	27 c0       	rjmp	.+78     	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
			break;
		case PORT_C:
			SET_BIT(PORTC, u8_pin);
    1282:	a5 e3       	ldi	r26, 0x35	; 53
    1284:	b0 e0       	ldi	r27, 0x00	; 0
    1286:	e5 e3       	ldi	r30, 0x35	; 53
    1288:	f0 e0       	ldi	r31, 0x00	; 0
    128a:	80 81       	ld	r24, Z
    128c:	48 2f       	mov	r20, r24
    128e:	8a 81       	ldd	r24, Y+2	; 0x02
    1290:	28 2f       	mov	r18, r24
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	02 2e       	mov	r0, r18
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <DIO_VidSetPinValue+0x1be>
    129c:	88 0f       	add	r24, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	0a 94       	dec	r0
    12a2:	e2 f7       	brpl	.-8      	; 0x129c <DIO_VidSetPinValue+0x1ba>
    12a4:	84 2b       	or	r24, r20
    12a6:	8c 93       	st	X, r24
    12a8:	13 c0       	rjmp	.+38     	; 0x12d0 <DIO_VidSetPinValue+0x1ee>
			break;
		case PORT_D:
			SET_BIT(PORTD, u8_pin);
    12aa:	a2 e3       	ldi	r26, 0x32	; 50
    12ac:	b0 e0       	ldi	r27, 0x00	; 0
    12ae:	e2 e3       	ldi	r30, 0x32	; 50
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	80 81       	ld	r24, Z
    12b4:	48 2f       	mov	r20, r24
    12b6:	8a 81       	ldd	r24, Y+2	; 0x02
    12b8:	28 2f       	mov	r18, r24
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	02 2e       	mov	r0, r18
    12c2:	02 c0       	rjmp	.+4      	; 0x12c8 <DIO_VidSetPinValue+0x1e6>
    12c4:	88 0f       	add	r24, r24
    12c6:	99 1f       	adc	r25, r25
    12c8:	0a 94       	dec	r0
    12ca:	e2 f7       	brpl	.-8      	; 0x12c4 <DIO_VidSetPinValue+0x1e2>
    12cc:	84 2b       	or	r24, r20
    12ce:	8c 93       	st	X, r24
			break;
		}
	}
}
    12d0:	27 96       	adiw	r28, 0x07	; 7
    12d2:	0f b6       	in	r0, 0x3f	; 63
    12d4:	f8 94       	cli
    12d6:	de bf       	out	0x3e, r29	; 62
    12d8:	0f be       	out	0x3f, r0	; 63
    12da:	cd bf       	out	0x3d, r28	; 61
    12dc:	cf 91       	pop	r28
    12de:	df 91       	pop	r29
    12e0:	08 95       	ret

000012e2 <DIO_VidGetPinValue>:

/* Getting Pin Value */
void DIO_VidGetPinValue(u8 u8_port, u8 u8_pin, u8 *p_u8_data) {
    12e2:	df 93       	push	r29
    12e4:	cf 93       	push	r28
    12e6:	00 d0       	rcall	.+0      	; 0x12e8 <DIO_VidGetPinValue+0x6>
    12e8:	00 d0       	rcall	.+0      	; 0x12ea <DIO_VidGetPinValue+0x8>
    12ea:	00 d0       	rcall	.+0      	; 0x12ec <DIO_VidGetPinValue+0xa>
    12ec:	cd b7       	in	r28, 0x3d	; 61
    12ee:	de b7       	in	r29, 0x3e	; 62
    12f0:	89 83       	std	Y+1, r24	; 0x01
    12f2:	6a 83       	std	Y+2, r22	; 0x02
    12f4:	5c 83       	std	Y+4, r21	; 0x04
    12f6:	4b 83       	std	Y+3, r20	; 0x03
	switch (u8_port) {
    12f8:	89 81       	ldd	r24, Y+1	; 0x01
    12fa:	28 2f       	mov	r18, r24
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	3e 83       	std	Y+6, r19	; 0x06
    1300:	2d 83       	std	Y+5, r18	; 0x05
    1302:	8d 81       	ldd	r24, Y+5	; 0x05
    1304:	9e 81       	ldd	r25, Y+6	; 0x06
    1306:	81 30       	cpi	r24, 0x01	; 1
    1308:	91 05       	cpc	r25, r1
    130a:	49 f1       	breq	.+82     	; 0x135e <DIO_VidGetPinValue+0x7c>
    130c:	2d 81       	ldd	r18, Y+5	; 0x05
    130e:	3e 81       	ldd	r19, Y+6	; 0x06
    1310:	22 30       	cpi	r18, 0x02	; 2
    1312:	31 05       	cpc	r19, r1
    1314:	2c f4       	brge	.+10     	; 0x1320 <DIO_VidGetPinValue+0x3e>
    1316:	8d 81       	ldd	r24, Y+5	; 0x05
    1318:	9e 81       	ldd	r25, Y+6	; 0x06
    131a:	00 97       	sbiw	r24, 0x00	; 0
    131c:	61 f0       	breq	.+24     	; 0x1336 <DIO_VidGetPinValue+0x54>
    131e:	5a c0       	rjmp	.+180    	; 0x13d4 <DIO_VidGetPinValue+0xf2>
    1320:	2d 81       	ldd	r18, Y+5	; 0x05
    1322:	3e 81       	ldd	r19, Y+6	; 0x06
    1324:	22 30       	cpi	r18, 0x02	; 2
    1326:	31 05       	cpc	r19, r1
    1328:	71 f1       	breq	.+92     	; 0x1386 <DIO_VidGetPinValue+0xa4>
    132a:	8d 81       	ldd	r24, Y+5	; 0x05
    132c:	9e 81       	ldd	r25, Y+6	; 0x06
    132e:	83 30       	cpi	r24, 0x03	; 3
    1330:	91 05       	cpc	r25, r1
    1332:	e9 f1       	breq	.+122    	; 0x13ae <DIO_VidGetPinValue+0xcc>
    1334:	4f c0       	rjmp	.+158    	; 0x13d4 <DIO_VidGetPinValue+0xf2>
	case PORT_A:
		*p_u8_data = GET_BIT(PINA, u8_pin);
    1336:	e9 e3       	ldi	r30, 0x39	; 57
    1338:	f0 e0       	ldi	r31, 0x00	; 0
    133a:	80 81       	ld	r24, Z
    133c:	48 2f       	mov	r20, r24
    133e:	8a 81       	ldd	r24, Y+2	; 0x02
    1340:	28 2f       	mov	r18, r24
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	02 2e       	mov	r0, r18
    134a:	02 c0       	rjmp	.+4      	; 0x1350 <DIO_VidGetPinValue+0x6e>
    134c:	88 0f       	add	r24, r24
    134e:	99 1f       	adc	r25, r25
    1350:	0a 94       	dec	r0
    1352:	e2 f7       	brpl	.-8      	; 0x134c <DIO_VidGetPinValue+0x6a>
    1354:	84 23       	and	r24, r20
    1356:	eb 81       	ldd	r30, Y+3	; 0x03
    1358:	fc 81       	ldd	r31, Y+4	; 0x04
    135a:	80 83       	st	Z, r24
    135c:	3b c0       	rjmp	.+118    	; 0x13d4 <DIO_VidGetPinValue+0xf2>
		break;
	case PORT_B:
		*p_u8_data = GET_BIT(PINB, u8_pin);
    135e:	e6 e3       	ldi	r30, 0x36	; 54
    1360:	f0 e0       	ldi	r31, 0x00	; 0
    1362:	80 81       	ld	r24, Z
    1364:	48 2f       	mov	r20, r24
    1366:	8a 81       	ldd	r24, Y+2	; 0x02
    1368:	28 2f       	mov	r18, r24
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	81 e0       	ldi	r24, 0x01	; 1
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	02 2e       	mov	r0, r18
    1372:	02 c0       	rjmp	.+4      	; 0x1378 <DIO_VidGetPinValue+0x96>
    1374:	88 0f       	add	r24, r24
    1376:	99 1f       	adc	r25, r25
    1378:	0a 94       	dec	r0
    137a:	e2 f7       	brpl	.-8      	; 0x1374 <DIO_VidGetPinValue+0x92>
    137c:	84 23       	and	r24, r20
    137e:	eb 81       	ldd	r30, Y+3	; 0x03
    1380:	fc 81       	ldd	r31, Y+4	; 0x04
    1382:	80 83       	st	Z, r24
    1384:	27 c0       	rjmp	.+78     	; 0x13d4 <DIO_VidGetPinValue+0xf2>
		break;
	case PORT_C:
		*p_u8_data = GET_BIT(PINC, u8_pin);
    1386:	e3 e3       	ldi	r30, 0x33	; 51
    1388:	f0 e0       	ldi	r31, 0x00	; 0
    138a:	80 81       	ld	r24, Z
    138c:	48 2f       	mov	r20, r24
    138e:	8a 81       	ldd	r24, Y+2	; 0x02
    1390:	28 2f       	mov	r18, r24
    1392:	30 e0       	ldi	r19, 0x00	; 0
    1394:	81 e0       	ldi	r24, 0x01	; 1
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	02 2e       	mov	r0, r18
    139a:	02 c0       	rjmp	.+4      	; 0x13a0 <DIO_VidGetPinValue+0xbe>
    139c:	88 0f       	add	r24, r24
    139e:	99 1f       	adc	r25, r25
    13a0:	0a 94       	dec	r0
    13a2:	e2 f7       	brpl	.-8      	; 0x139c <DIO_VidGetPinValue+0xba>
    13a4:	84 23       	and	r24, r20
    13a6:	eb 81       	ldd	r30, Y+3	; 0x03
    13a8:	fc 81       	ldd	r31, Y+4	; 0x04
    13aa:	80 83       	st	Z, r24
    13ac:	13 c0       	rjmp	.+38     	; 0x13d4 <DIO_VidGetPinValue+0xf2>
		break;
	case PORT_D:
		*p_u8_data = GET_BIT(PIND, u8_pin);
    13ae:	e0 e3       	ldi	r30, 0x30	; 48
    13b0:	f0 e0       	ldi	r31, 0x00	; 0
    13b2:	80 81       	ld	r24, Z
    13b4:	48 2f       	mov	r20, r24
    13b6:	8a 81       	ldd	r24, Y+2	; 0x02
    13b8:	28 2f       	mov	r18, r24
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	02 2e       	mov	r0, r18
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <DIO_VidGetPinValue+0xe6>
    13c4:	88 0f       	add	r24, r24
    13c6:	99 1f       	adc	r25, r25
    13c8:	0a 94       	dec	r0
    13ca:	e2 f7       	brpl	.-8      	; 0x13c4 <DIO_VidGetPinValue+0xe2>
    13cc:	84 23       	and	r24, r20
    13ce:	eb 81       	ldd	r30, Y+3	; 0x03
    13d0:	fc 81       	ldd	r31, Y+4	; 0x04
    13d2:	80 83       	st	Z, r24
		break;
	}
}
    13d4:	26 96       	adiw	r28, 0x06	; 6
    13d6:	0f b6       	in	r0, 0x3f	; 63
    13d8:	f8 94       	cli
    13da:	de bf       	out	0x3e, r29	; 62
    13dc:	0f be       	out	0x3f, r0	; 63
    13de:	cd bf       	out	0x3d, r28	; 61
    13e0:	cf 91       	pop	r28
    13e2:	df 91       	pop	r29
    13e4:	08 95       	ret

000013e6 <DIO_VidSetPortDirection>:

/* Setting Port Direction */
void DIO_VidSetPortDirection(u8 u8_port, u8 u8_direction) {
    13e6:	df 93       	push	r29
    13e8:	cf 93       	push	r28
    13ea:	00 d0       	rcall	.+0      	; 0x13ec <DIO_VidSetPortDirection+0x6>
    13ec:	00 d0       	rcall	.+0      	; 0x13ee <DIO_VidSetPortDirection+0x8>
    13ee:	00 d0       	rcall	.+0      	; 0x13f0 <DIO_VidSetPortDirection+0xa>
    13f0:	cd b7       	in	r28, 0x3d	; 61
    13f2:	de b7       	in	r29, 0x3e	; 62
    13f4:	89 83       	std	Y+1, r24	; 0x01
    13f6:	6a 83       	std	Y+2, r22	; 0x02
	if (u8_direction == INPUT) {
    13f8:	8a 81       	ldd	r24, Y+2	; 0x02
    13fa:	88 23       	and	r24, r24
    13fc:	79 f5       	brne	.+94     	; 0x145c <DIO_VidSetPortDirection+0x76>
		switch (u8_port) {
    13fe:	89 81       	ldd	r24, Y+1	; 0x01
    1400:	28 2f       	mov	r18, r24
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	3e 83       	std	Y+6, r19	; 0x06
    1406:	2d 83       	std	Y+5, r18	; 0x05
    1408:	8d 81       	ldd	r24, Y+5	; 0x05
    140a:	9e 81       	ldd	r25, Y+6	; 0x06
    140c:	81 30       	cpi	r24, 0x01	; 1
    140e:	91 05       	cpc	r25, r1
    1410:	c9 f0       	breq	.+50     	; 0x1444 <DIO_VidSetPortDirection+0x5e>
    1412:	2d 81       	ldd	r18, Y+5	; 0x05
    1414:	3e 81       	ldd	r19, Y+6	; 0x06
    1416:	22 30       	cpi	r18, 0x02	; 2
    1418:	31 05       	cpc	r19, r1
    141a:	2c f4       	brge	.+10     	; 0x1426 <DIO_VidSetPortDirection+0x40>
    141c:	8d 81       	ldd	r24, Y+5	; 0x05
    141e:	9e 81       	ldd	r25, Y+6	; 0x06
    1420:	00 97       	sbiw	r24, 0x00	; 0
    1422:	61 f0       	breq	.+24     	; 0x143c <DIO_VidSetPortDirection+0x56>
    1424:	50 c0       	rjmp	.+160    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
    1426:	2d 81       	ldd	r18, Y+5	; 0x05
    1428:	3e 81       	ldd	r19, Y+6	; 0x06
    142a:	22 30       	cpi	r18, 0x02	; 2
    142c:	31 05       	cpc	r19, r1
    142e:	71 f0       	breq	.+28     	; 0x144c <DIO_VidSetPortDirection+0x66>
    1430:	8d 81       	ldd	r24, Y+5	; 0x05
    1432:	9e 81       	ldd	r25, Y+6	; 0x06
    1434:	83 30       	cpi	r24, 0x03	; 3
    1436:	91 05       	cpc	r25, r1
    1438:	69 f0       	breq	.+26     	; 0x1454 <DIO_VidSetPortDirection+0x6e>
    143a:	45 c0       	rjmp	.+138    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
		case PORT_A:
			DDRA = 0x00;
    143c:	ea e3       	ldi	r30, 0x3A	; 58
    143e:	f0 e0       	ldi	r31, 0x00	; 0
    1440:	10 82       	st	Z, r1
    1442:	41 c0       	rjmp	.+130    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			break;
		case PORT_B:
			DDRB = 0x00;
    1444:	e7 e3       	ldi	r30, 0x37	; 55
    1446:	f0 e0       	ldi	r31, 0x00	; 0
    1448:	10 82       	st	Z, r1
    144a:	3d c0       	rjmp	.+122    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			break;
		case PORT_C:
			DDRC = 0x00;
    144c:	e4 e3       	ldi	r30, 0x34	; 52
    144e:	f0 e0       	ldi	r31, 0x00	; 0
    1450:	10 82       	st	Z, r1
    1452:	39 c0       	rjmp	.+114    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			break;
		case PORT_D:
			DDRD = 0x00;
    1454:	e1 e3       	ldi	r30, 0x31	; 49
    1456:	f0 e0       	ldi	r31, 0x00	; 0
    1458:	10 82       	st	Z, r1
    145a:	35 c0       	rjmp	.+106    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			break;
		}
	} else if (u8_direction == OUTPUT) {
    145c:	8a 81       	ldd	r24, Y+2	; 0x02
    145e:	81 30       	cpi	r24, 0x01	; 1
    1460:	91 f5       	brne	.+100    	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
		switch (u8_port) {
    1462:	89 81       	ldd	r24, Y+1	; 0x01
    1464:	28 2f       	mov	r18, r24
    1466:	30 e0       	ldi	r19, 0x00	; 0
    1468:	3c 83       	std	Y+4, r19	; 0x04
    146a:	2b 83       	std	Y+3, r18	; 0x03
    146c:	8b 81       	ldd	r24, Y+3	; 0x03
    146e:	9c 81       	ldd	r25, Y+4	; 0x04
    1470:	81 30       	cpi	r24, 0x01	; 1
    1472:	91 05       	cpc	r25, r1
    1474:	d1 f0       	breq	.+52     	; 0x14aa <DIO_VidSetPortDirection+0xc4>
    1476:	2b 81       	ldd	r18, Y+3	; 0x03
    1478:	3c 81       	ldd	r19, Y+4	; 0x04
    147a:	22 30       	cpi	r18, 0x02	; 2
    147c:	31 05       	cpc	r19, r1
    147e:	2c f4       	brge	.+10     	; 0x148a <DIO_VidSetPortDirection+0xa4>
    1480:	8b 81       	ldd	r24, Y+3	; 0x03
    1482:	9c 81       	ldd	r25, Y+4	; 0x04
    1484:	00 97       	sbiw	r24, 0x00	; 0
    1486:	61 f0       	breq	.+24     	; 0x14a0 <DIO_VidSetPortDirection+0xba>
    1488:	1e c0       	rjmp	.+60     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
    148a:	2b 81       	ldd	r18, Y+3	; 0x03
    148c:	3c 81       	ldd	r19, Y+4	; 0x04
    148e:	22 30       	cpi	r18, 0x02	; 2
    1490:	31 05       	cpc	r19, r1
    1492:	81 f0       	breq	.+32     	; 0x14b4 <DIO_VidSetPortDirection+0xce>
    1494:	8b 81       	ldd	r24, Y+3	; 0x03
    1496:	9c 81       	ldd	r25, Y+4	; 0x04
    1498:	83 30       	cpi	r24, 0x03	; 3
    149a:	91 05       	cpc	r25, r1
    149c:	81 f0       	breq	.+32     	; 0x14be <DIO_VidSetPortDirection+0xd8>
    149e:	13 c0       	rjmp	.+38     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
		case PORT_A:
			DDRA = 0xFF;
    14a0:	ea e3       	ldi	r30, 0x3A	; 58
    14a2:	f0 e0       	ldi	r31, 0x00	; 0
    14a4:	8f ef       	ldi	r24, 0xFF	; 255
    14a6:	80 83       	st	Z, r24
    14a8:	0e c0       	rjmp	.+28     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			break;
		case PORT_B:
			DDRB = 0xFF;
    14aa:	e7 e3       	ldi	r30, 0x37	; 55
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	8f ef       	ldi	r24, 0xFF	; 255
    14b0:	80 83       	st	Z, r24
    14b2:	09 c0       	rjmp	.+18     	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			break;
		case PORT_C:
			DDRC = 0xFF;
    14b4:	e4 e3       	ldi	r30, 0x34	; 52
    14b6:	f0 e0       	ldi	r31, 0x00	; 0
    14b8:	8f ef       	ldi	r24, 0xFF	; 255
    14ba:	80 83       	st	Z, r24
    14bc:	04 c0       	rjmp	.+8      	; 0x14c6 <DIO_VidSetPortDirection+0xe0>
			break;
		case PORT_D:
			DDRD = 0xFF;
    14be:	e1 e3       	ldi	r30, 0x31	; 49
    14c0:	f0 e0       	ldi	r31, 0x00	; 0
    14c2:	8f ef       	ldi	r24, 0xFF	; 255
    14c4:	80 83       	st	Z, r24
			break;
		}
	}
}
    14c6:	26 96       	adiw	r28, 0x06	; 6
    14c8:	0f b6       	in	r0, 0x3f	; 63
    14ca:	f8 94       	cli
    14cc:	de bf       	out	0x3e, r29	; 62
    14ce:	0f be       	out	0x3f, r0	; 63
    14d0:	cd bf       	out	0x3d, r28	; 61
    14d2:	cf 91       	pop	r28
    14d4:	df 91       	pop	r29
    14d6:	08 95       	ret

000014d8 <DIO_VidSetPortValue>:

/* Setting Port Value */
void DIO_VidSetPortValue(u8 u8_port, u8 u8_value) {
    14d8:	df 93       	push	r29
    14da:	cf 93       	push	r28
    14dc:	00 d0       	rcall	.+0      	; 0x14de <DIO_VidSetPortValue+0x6>
    14de:	00 d0       	rcall	.+0      	; 0x14e0 <DIO_VidSetPortValue+0x8>
    14e0:	cd b7       	in	r28, 0x3d	; 61
    14e2:	de b7       	in	r29, 0x3e	; 62
    14e4:	89 83       	std	Y+1, r24	; 0x01
    14e6:	6a 83       	std	Y+2, r22	; 0x02
	switch (u8_port) {
    14e8:	89 81       	ldd	r24, Y+1	; 0x01
    14ea:	28 2f       	mov	r18, r24
    14ec:	30 e0       	ldi	r19, 0x00	; 0
    14ee:	3c 83       	std	Y+4, r19	; 0x04
    14f0:	2b 83       	std	Y+3, r18	; 0x03
    14f2:	8b 81       	ldd	r24, Y+3	; 0x03
    14f4:	9c 81       	ldd	r25, Y+4	; 0x04
    14f6:	81 30       	cpi	r24, 0x01	; 1
    14f8:	91 05       	cpc	r25, r1
    14fa:	d1 f0       	breq	.+52     	; 0x1530 <DIO_VidSetPortValue+0x58>
    14fc:	2b 81       	ldd	r18, Y+3	; 0x03
    14fe:	3c 81       	ldd	r19, Y+4	; 0x04
    1500:	22 30       	cpi	r18, 0x02	; 2
    1502:	31 05       	cpc	r19, r1
    1504:	2c f4       	brge	.+10     	; 0x1510 <DIO_VidSetPortValue+0x38>
    1506:	8b 81       	ldd	r24, Y+3	; 0x03
    1508:	9c 81       	ldd	r25, Y+4	; 0x04
    150a:	00 97       	sbiw	r24, 0x00	; 0
    150c:	61 f0       	breq	.+24     	; 0x1526 <DIO_VidSetPortValue+0x4e>
    150e:	1e c0       	rjmp	.+60     	; 0x154c <DIO_VidSetPortValue+0x74>
    1510:	2b 81       	ldd	r18, Y+3	; 0x03
    1512:	3c 81       	ldd	r19, Y+4	; 0x04
    1514:	22 30       	cpi	r18, 0x02	; 2
    1516:	31 05       	cpc	r19, r1
    1518:	81 f0       	breq	.+32     	; 0x153a <DIO_VidSetPortValue+0x62>
    151a:	8b 81       	ldd	r24, Y+3	; 0x03
    151c:	9c 81       	ldd	r25, Y+4	; 0x04
    151e:	83 30       	cpi	r24, 0x03	; 3
    1520:	91 05       	cpc	r25, r1
    1522:	81 f0       	breq	.+32     	; 0x1544 <DIO_VidSetPortValue+0x6c>
    1524:	13 c0       	rjmp	.+38     	; 0x154c <DIO_VidSetPortValue+0x74>
	case PORT_A:
		PORTA = u8_value;
    1526:	eb e3       	ldi	r30, 0x3B	; 59
    1528:	f0 e0       	ldi	r31, 0x00	; 0
    152a:	8a 81       	ldd	r24, Y+2	; 0x02
    152c:	80 83       	st	Z, r24
    152e:	0e c0       	rjmp	.+28     	; 0x154c <DIO_VidSetPortValue+0x74>
		break;
	case PORT_B:
		PORTB = u8_value;
    1530:	e8 e3       	ldi	r30, 0x38	; 56
    1532:	f0 e0       	ldi	r31, 0x00	; 0
    1534:	8a 81       	ldd	r24, Y+2	; 0x02
    1536:	80 83       	st	Z, r24
    1538:	09 c0       	rjmp	.+18     	; 0x154c <DIO_VidSetPortValue+0x74>
		break;
	case PORT_C:
		PORTC = u8_value;
    153a:	e5 e3       	ldi	r30, 0x35	; 53
    153c:	f0 e0       	ldi	r31, 0x00	; 0
    153e:	8a 81       	ldd	r24, Y+2	; 0x02
    1540:	80 83       	st	Z, r24
    1542:	04 c0       	rjmp	.+8      	; 0x154c <DIO_VidSetPortValue+0x74>
		break;
	case PORT_D:
		PORTD = u8_value;
    1544:	e2 e3       	ldi	r30, 0x32	; 50
    1546:	f0 e0       	ldi	r31, 0x00	; 0
    1548:	8a 81       	ldd	r24, Y+2	; 0x02
    154a:	80 83       	st	Z, r24
		break;
	}
}
    154c:	0f 90       	pop	r0
    154e:	0f 90       	pop	r0
    1550:	0f 90       	pop	r0
    1552:	0f 90       	pop	r0
    1554:	cf 91       	pop	r28
    1556:	df 91       	pop	r29
    1558:	08 95       	ret

0000155a <DIO_VidGetPortValue>:

/* Getting Port Value */
void DIO_VidGetPortValue(u8 u8_port, u8 *p_u8_data) {
    155a:	df 93       	push	r29
    155c:	cf 93       	push	r28
    155e:	00 d0       	rcall	.+0      	; 0x1560 <DIO_VidGetPortValue+0x6>
    1560:	00 d0       	rcall	.+0      	; 0x1562 <DIO_VidGetPortValue+0x8>
    1562:	0f 92       	push	r0
    1564:	cd b7       	in	r28, 0x3d	; 61
    1566:	de b7       	in	r29, 0x3e	; 62
    1568:	89 83       	std	Y+1, r24	; 0x01
    156a:	7b 83       	std	Y+3, r23	; 0x03
    156c:	6a 83       	std	Y+2, r22	; 0x02
	switch (u8_port) {
    156e:	89 81       	ldd	r24, Y+1	; 0x01
    1570:	28 2f       	mov	r18, r24
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	3d 83       	std	Y+5, r19	; 0x05
    1576:	2c 83       	std	Y+4, r18	; 0x04
    1578:	8c 81       	ldd	r24, Y+4	; 0x04
    157a:	9d 81       	ldd	r25, Y+5	; 0x05
    157c:	81 30       	cpi	r24, 0x01	; 1
    157e:	91 05       	cpc	r25, r1
    1580:	e1 f0       	breq	.+56     	; 0x15ba <DIO_VidGetPortValue+0x60>
    1582:	2c 81       	ldd	r18, Y+4	; 0x04
    1584:	3d 81       	ldd	r19, Y+5	; 0x05
    1586:	22 30       	cpi	r18, 0x02	; 2
    1588:	31 05       	cpc	r19, r1
    158a:	2c f4       	brge	.+10     	; 0x1596 <DIO_VidGetPortValue+0x3c>
    158c:	8c 81       	ldd	r24, Y+4	; 0x04
    158e:	9d 81       	ldd	r25, Y+5	; 0x05
    1590:	00 97       	sbiw	r24, 0x00	; 0
    1592:	61 f0       	breq	.+24     	; 0x15ac <DIO_VidGetPortValue+0x52>
    1594:	26 c0       	rjmp	.+76     	; 0x15e2 <DIO_VidGetPortValue+0x88>
    1596:	2c 81       	ldd	r18, Y+4	; 0x04
    1598:	3d 81       	ldd	r19, Y+5	; 0x05
    159a:	22 30       	cpi	r18, 0x02	; 2
    159c:	31 05       	cpc	r19, r1
    159e:	a1 f0       	breq	.+40     	; 0x15c8 <DIO_VidGetPortValue+0x6e>
    15a0:	8c 81       	ldd	r24, Y+4	; 0x04
    15a2:	9d 81       	ldd	r25, Y+5	; 0x05
    15a4:	83 30       	cpi	r24, 0x03	; 3
    15a6:	91 05       	cpc	r25, r1
    15a8:	b1 f0       	breq	.+44     	; 0x15d6 <DIO_VidGetPortValue+0x7c>
    15aa:	1b c0       	rjmp	.+54     	; 0x15e2 <DIO_VidGetPortValue+0x88>
	case PORT_A:
		*p_u8_data = PINA;
    15ac:	e9 e3       	ldi	r30, 0x39	; 57
    15ae:	f0 e0       	ldi	r31, 0x00	; 0
    15b0:	80 81       	ld	r24, Z
    15b2:	ea 81       	ldd	r30, Y+2	; 0x02
    15b4:	fb 81       	ldd	r31, Y+3	; 0x03
    15b6:	80 83       	st	Z, r24
    15b8:	14 c0       	rjmp	.+40     	; 0x15e2 <DIO_VidGetPortValue+0x88>
		break;
	case PORT_B:
		*p_u8_data = PINB;
    15ba:	e6 e3       	ldi	r30, 0x36	; 54
    15bc:	f0 e0       	ldi	r31, 0x00	; 0
    15be:	80 81       	ld	r24, Z
    15c0:	ea 81       	ldd	r30, Y+2	; 0x02
    15c2:	fb 81       	ldd	r31, Y+3	; 0x03
    15c4:	80 83       	st	Z, r24
    15c6:	0d c0       	rjmp	.+26     	; 0x15e2 <DIO_VidGetPortValue+0x88>
		break;
	case PORT_C:
		*p_u8_data = PINC;
    15c8:	e3 e3       	ldi	r30, 0x33	; 51
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	80 81       	ld	r24, Z
    15ce:	ea 81       	ldd	r30, Y+2	; 0x02
    15d0:	fb 81       	ldd	r31, Y+3	; 0x03
    15d2:	80 83       	st	Z, r24
    15d4:	06 c0       	rjmp	.+12     	; 0x15e2 <DIO_VidGetPortValue+0x88>
		break;
	case PORT_D:
		*p_u8_data = PIND;
    15d6:	e0 e3       	ldi	r30, 0x30	; 48
    15d8:	f0 e0       	ldi	r31, 0x00	; 0
    15da:	80 81       	ld	r24, Z
    15dc:	ea 81       	ldd	r30, Y+2	; 0x02
    15de:	fb 81       	ldd	r31, Y+3	; 0x03
    15e0:	80 83       	st	Z, r24
		break;
	}
}
    15e2:	0f 90       	pop	r0
    15e4:	0f 90       	pop	r0
    15e6:	0f 90       	pop	r0
    15e8:	0f 90       	pop	r0
    15ea:	0f 90       	pop	r0
    15ec:	cf 91       	pop	r28
    15ee:	df 91       	pop	r29
    15f0:	08 95       	ret

000015f2 <kpd_u8GetPressedKey>:
#include "Key_Pad_Interface.h"
#include "Key_Pad_Config.h"
#include <util/delay.h>

u8 kpd_u8GetPressedKey(void)
{
    15f2:	df 93       	push	r29
    15f4:	cf 93       	push	r28
    15f6:	00 d0       	rcall	.+0      	; 0x15f8 <kpd_u8GetPressedKey+0x6>
    15f8:	00 d0       	rcall	.+0      	; 0x15fa <kpd_u8GetPressedKey+0x8>
    15fa:	0f 92       	push	r0
    15fc:	cd b7       	in	r28, 0x3d	; 61
    15fe:	de b7       	in	r29, 0x3e	; 62
	/**************value if button was not pressed*******************/
		u8 Local_u8_Pressed_Key=  KPD_NO_PRESSED_KEY;
    1600:	8f ef       	ldi	r24, 0xFF	; 255
    1602:	8b 83       	std	Y+3, r24	; 0x03
	    /********************KEY_ROWS_Array*******************************/
	   static  u8 Local_u8_Kpd_Rows_Array[ROW_NUM]={KPD_ROW_0,KPD_ROW_1,KPD_ROW_2,KPD_ROW_3};



	    for(Local_u8_Column_Counter=0;Local_u8_Column_Counter<COLUMN_NUM;Local_u8_Column_Counter++)
    1604:	1a 82       	std	Y+2, r1	; 0x02
    1606:	5e c0       	rjmp	.+188    	; 0x16c4 <kpd_u8GetPressedKey+0xd2>
	    {
	    	/***************ACTIVATE CURRENT COLUMN*************************/

	    	DIO_VidSetPinValue(KPD_PORT_COLUMNS,Local_u8_Kpd_Column_Array[Local_u8_Column_Counter],PIN_LOW);
    1608:	8a 81       	ldd	r24, Y+2	; 0x02
    160a:	88 2f       	mov	r24, r24
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	fc 01       	movw	r30, r24
    1610:	e4 59       	subi	r30, 0x94	; 148
    1612:	fe 4f       	sbci	r31, 0xFE	; 254
    1614:	90 81       	ld	r25, Z
    1616:	83 e0       	ldi	r24, 0x03	; 3
    1618:	69 2f       	mov	r22, r25
    161a:	40 e0       	ldi	r20, 0x00	; 0
    161c:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>

	    	/**************READ CURRENT ROW*****************/
	    	for(Local_u8_Row_Counter=0;Local_u8_Row_Counter<ROW_NUM;Local_u8_Row_Counter++)
    1620:	19 82       	std	Y+1, r1	; 0x01
    1622:	3d c0       	rjmp	.+122    	; 0x169e <kpd_u8GetPressedKey+0xac>
	    	{
	    		DIO_VidGetPinValue(KPD_PORT_ROWS ,Local_u8_Kpd_Rows_Array[Local_u8_Row_Counter],&Local_u8_Pint_State);
    1624:	89 81       	ldd	r24, Y+1	; 0x01
    1626:	88 2f       	mov	r24, r24
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	fc 01       	movw	r30, r24
    162c:	e8 59       	subi	r30, 0x98	; 152
    162e:	fe 4f       	sbci	r31, 0xFE	; 254
    1630:	90 81       	ld	r25, Z
    1632:	9e 01       	movw	r18, r28
    1634:	2c 5f       	subi	r18, 0xFC	; 252
    1636:	3f 4f       	sbci	r19, 0xFF	; 255
    1638:	81 e0       	ldi	r24, 0x01	; 1
    163a:	69 2f       	mov	r22, r25
    163c:	a9 01       	movw	r20, r18
    163e:	0e 94 71 09 	call	0x12e2	; 0x12e2 <DIO_VidGetPinValue>

	             /******CHECK IF KEY IS PREESED********/

	    		if(Local_u8_Pint_State==PIN_LOW)
    1642:	8c 81       	ldd	r24, Y+4	; 0x04
    1644:	88 23       	and	r24, r24
    1646:	41 f5       	brne	.+80     	; 0x1698 <kpd_u8GetPressedKey+0xa6>
	    		{
	    			Local_u8_Pressed_Key=Local_u8_Kpd_Arr[Local_u8_Row_Counter][Local_u8_Column_Counter];
    1648:	89 81       	ldd	r24, Y+1	; 0x01
    164a:	48 2f       	mov	r20, r24
    164c:	50 e0       	ldi	r21, 0x00	; 0
    164e:	8a 81       	ldd	r24, Y+2	; 0x02
    1650:	28 2f       	mov	r18, r24
    1652:	30 e0       	ldi	r19, 0x00	; 0
    1654:	ca 01       	movw	r24, r20
    1656:	88 0f       	add	r24, r24
    1658:	99 1f       	adc	r25, r25
    165a:	88 0f       	add	r24, r24
    165c:	99 1f       	adc	r25, r25
    165e:	82 0f       	add	r24, r18
    1660:	93 1f       	adc	r25, r19
    1662:	fc 01       	movw	r30, r24
    1664:	e0 59       	subi	r30, 0x90	; 144
    1666:	fe 4f       	sbci	r31, 0xFE	; 254
    1668:	80 81       	ld	r24, Z
    166a:	8b 83       	std	Y+3, r24	; 0x03
    166c:	0f c0       	rjmp	.+30     	; 0x168c <kpd_u8GetPressedKey+0x9a>

	    			while(Local_u8_Pint_State==PIN_LOW)
	    			{
	    				DIO_VidGetPinValue(KPD_PORT_ROWS,Local_u8_Kpd_Rows_Array[Local_u8_Row_Counter],&Local_u8_Pint_State);
    166e:	89 81       	ldd	r24, Y+1	; 0x01
    1670:	88 2f       	mov	r24, r24
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	fc 01       	movw	r30, r24
    1676:	e8 59       	subi	r30, 0x98	; 152
    1678:	fe 4f       	sbci	r31, 0xFE	; 254
    167a:	90 81       	ld	r25, Z
    167c:	9e 01       	movw	r18, r28
    167e:	2c 5f       	subi	r18, 0xFC	; 252
    1680:	3f 4f       	sbci	r19, 0xFF	; 255
    1682:	81 e0       	ldi	r24, 0x01	; 1
    1684:	69 2f       	mov	r22, r25
    1686:	a9 01       	movw	r20, r18
    1688:	0e 94 71 09 	call	0x12e2	; 0x12e2 <DIO_VidGetPinValue>

	    		if(Local_u8_Pint_State==PIN_LOW)
	    		{
	    			Local_u8_Pressed_Key=Local_u8_Kpd_Arr[Local_u8_Row_Counter][Local_u8_Column_Counter];

	    			while(Local_u8_Pint_State==PIN_LOW)
    168c:	8c 81       	ldd	r24, Y+4	; 0x04
    168e:	88 23       	and	r24, r24
    1690:	71 f3       	breq	.-36     	; 0x166e <kpd_u8GetPressedKey+0x7c>
	    			{
	    				DIO_VidGetPinValue(KPD_PORT_ROWS,Local_u8_Kpd_Rows_Array[Local_u8_Row_Counter],&Local_u8_Pint_State);
	    			}
	    			return Local_u8_Pressed_Key;
    1692:	8b 81       	ldd	r24, Y+3	; 0x03
    1694:	8d 83       	std	Y+5, r24	; 0x05
    1696:	1c c0       	rjmp	.+56     	; 0x16d0 <kpd_u8GetPressedKey+0xde>
	    	/***************ACTIVATE CURRENT COLUMN*************************/

	    	DIO_VidSetPinValue(KPD_PORT_COLUMNS,Local_u8_Kpd_Column_Array[Local_u8_Column_Counter],PIN_LOW);

	    	/**************READ CURRENT ROW*****************/
	    	for(Local_u8_Row_Counter=0;Local_u8_Row_Counter<ROW_NUM;Local_u8_Row_Counter++)
    1698:	89 81       	ldd	r24, Y+1	; 0x01
    169a:	8f 5f       	subi	r24, 0xFF	; 255
    169c:	89 83       	std	Y+1, r24	; 0x01
    169e:	89 81       	ldd	r24, Y+1	; 0x01
    16a0:	84 30       	cpi	r24, 0x04	; 4
    16a2:	08 f4       	brcc	.+2      	; 0x16a6 <kpd_u8GetPressedKey+0xb4>
    16a4:	bf cf       	rjmp	.-130    	; 0x1624 <kpd_u8GetPressedKey+0x32>
	    			}
	    			return Local_u8_Pressed_Key;
	    		}
	    	}
	    	/********DEACTIVATE CURRENT COLUMN************/
	    	DIO_VidSetPinValue(KPD_PORT_COLUMNS,Local_u8_Kpd_Column_Array[Local_u8_Column_Counter],PIN_HIGH);
    16a6:	8a 81       	ldd	r24, Y+2	; 0x02
    16a8:	88 2f       	mov	r24, r24
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	fc 01       	movw	r30, r24
    16ae:	e4 59       	subi	r30, 0x94	; 148
    16b0:	fe 4f       	sbci	r31, 0xFE	; 254
    16b2:	90 81       	ld	r25, Z
    16b4:	83 e0       	ldi	r24, 0x03	; 3
    16b6:	69 2f       	mov	r22, r25
    16b8:	41 e0       	ldi	r20, 0x01	; 1
    16ba:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>
	    /********************KEY_ROWS_Array*******************************/
	   static  u8 Local_u8_Kpd_Rows_Array[ROW_NUM]={KPD_ROW_0,KPD_ROW_1,KPD_ROW_2,KPD_ROW_3};



	    for(Local_u8_Column_Counter=0;Local_u8_Column_Counter<COLUMN_NUM;Local_u8_Column_Counter++)
    16be:	8a 81       	ldd	r24, Y+2	; 0x02
    16c0:	8f 5f       	subi	r24, 0xFF	; 255
    16c2:	8a 83       	std	Y+2, r24	; 0x02
    16c4:	8a 81       	ldd	r24, Y+2	; 0x02
    16c6:	84 30       	cpi	r24, 0x04	; 4
    16c8:	08 f4       	brcc	.+2      	; 0x16cc <kpd_u8GetPressedKey+0xda>
    16ca:	9e cf       	rjmp	.-196    	; 0x1608 <kpd_u8GetPressedKey+0x16>
	    	/********DEACTIVATE CURRENT COLUMN************/
	    	DIO_VidSetPinValue(KPD_PORT_COLUMNS,Local_u8_Kpd_Column_Array[Local_u8_Column_Counter],PIN_HIGH);

	    }

	    return Local_u8_Pressed_Key;
    16cc:	8b 81       	ldd	r24, Y+3	; 0x03
    16ce:	8d 83       	std	Y+5, r24	; 0x05
    16d0:	8d 81       	ldd	r24, Y+5	; 0x05
}
    16d2:	0f 90       	pop	r0
    16d4:	0f 90       	pop	r0
    16d6:	0f 90       	pop	r0
    16d8:	0f 90       	pop	r0
    16da:	0f 90       	pop	r0
    16dc:	cf 91       	pop	r28
    16de:	df 91       	pop	r29
    16e0:	08 95       	ret

000016e2 <Kpd_VidInit>:


void Kpd_VidInit(void)
{
    16e2:	df 93       	push	r29
    16e4:	cf 93       	push	r28
    16e6:	cd b7       	in	r28, 0x3d	; 61
    16e8:	de b7       	in	r29, 0x3e	; 62
	  DIO_VidSetPinDirection(KPD_PORT_COLUMNS,KPD_COLUMN_0,OUTPUT);
    16ea:	83 e0       	ldi	r24, 0x03	; 3
    16ec:	62 e0       	ldi	r22, 0x02	; 2
    16ee:	41 e0       	ldi	r20, 0x01	; 1
    16f0:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
	  DIO_VidSetPinDirection(KPD_PORT_COLUMNS,KPD_COLUMN_1,OUTPUT);
    16f4:	83 e0       	ldi	r24, 0x03	; 3
    16f6:	63 e0       	ldi	r22, 0x03	; 3
    16f8:	41 e0       	ldi	r20, 0x01	; 1
    16fa:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
	  DIO_VidSetPinDirection(KPD_PORT_COLUMNS,KPD_COLUMN_2,OUTPUT);
    16fe:	83 e0       	ldi	r24, 0x03	; 3
    1700:	64 e0       	ldi	r22, 0x04	; 4
    1702:	41 e0       	ldi	r20, 0x01	; 1
    1704:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
	  DIO_VidSetPinDirection(KPD_PORT_COLUMNS,KPD_COLUMN_3,OUTPUT);
    1708:	83 e0       	ldi	r24, 0x03	; 3
    170a:	65 e0       	ldi	r22, 0x05	; 5
    170c:	41 e0       	ldi	r20, 0x01	; 1
    170e:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>

	  DIO_VidSetPinDirection(KPD_PORT_ROWS,KPD_ROW_0,INPUT);
    1712:	81 e0       	ldi	r24, 0x01	; 1
    1714:	64 e0       	ldi	r22, 0x04	; 4
    1716:	40 e0       	ldi	r20, 0x00	; 0
    1718:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
	  DIO_VidSetPinDirection(KPD_PORT_ROWS,KPD_ROW_1,INPUT);
    171c:	81 e0       	ldi	r24, 0x01	; 1
    171e:	65 e0       	ldi	r22, 0x05	; 5
    1720:	40 e0       	ldi	r20, 0x00	; 0
    1722:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
	  DIO_VidSetPinDirection(KPD_PORT_ROWS,KPD_ROW_2,INPUT);
    1726:	81 e0       	ldi	r24, 0x01	; 1
    1728:	66 e0       	ldi	r22, 0x06	; 6
    172a:	40 e0       	ldi	r20, 0x00	; 0
    172c:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
	  DIO_VidSetPinDirection(KPD_PORT_ROWS,KPD_ROW_3,INPUT);
    1730:	81 e0       	ldi	r24, 0x01	; 1
    1732:	67 e0       	ldi	r22, 0x07	; 7
    1734:	40 e0       	ldi	r20, 0x00	; 0
    1736:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>


	  DIO_VidSetPortValue(KPD_PORT_COLUMNS,0b00111100);
    173a:	83 e0       	ldi	r24, 0x03	; 3
    173c:	6c e3       	ldi	r22, 0x3C	; 60
    173e:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <DIO_VidSetPortValue>
	  DIO_VidSetPortValue(KPD_PORT_ROWS,0xF0);
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	60 ef       	ldi	r22, 0xF0	; 240
    1746:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <DIO_VidSetPortValue>

}
    174a:	cf 91       	pop	r28
    174c:	df 91       	pop	r29
    174e:	08 95       	ret

00001750 <LCD_VidSendCommand>:
#include "LCD_Interface.h"



void LCD_VidSendCommand(u8 Copy_u8Command)
{
    1750:	df 93       	push	r29
    1752:	cf 93       	push	r28
    1754:	cd b7       	in	r28, 0x3d	; 61
    1756:	de b7       	in	r29, 0x3e	; 62
    1758:	2f 97       	sbiw	r28, 0x0f	; 15
    175a:	0f b6       	in	r0, 0x3f	; 63
    175c:	f8 94       	cli
    175e:	de bf       	out	0x3e, r29	; 62
    1760:	0f be       	out	0x3f, r0	; 63
    1762:	cd bf       	out	0x3d, r28	; 61
    1764:	8f 87       	std	Y+15, r24	; 0x0f
    DIO_VidSetPinValue(LCD_CTRL_PORT, LCD_RS_PIN ,PIN_LOW);
    1766:	82 e0       	ldi	r24, 0x02	; 2
    1768:	60 e0       	ldi	r22, 0x00	; 0
    176a:	40 e0       	ldi	r20, 0x00	; 0
    176c:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>

	DIO_VidSetPinValue(LCD_CTRL_PORT, LCD_RW_PIN ,PIN_LOW);
    1770:	82 e0       	ldi	r24, 0x02	; 2
    1772:	61 e0       	ldi	r22, 0x01	; 1
    1774:	40 e0       	ldi	r20, 0x00	; 0
    1776:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>

	DIO_VidSetPortValue(LCD_DATA_PORT,Copy_u8Command );
    177a:	80 e0       	ldi	r24, 0x00	; 0
    177c:	6f 85       	ldd	r22, Y+15	; 0x0f
    177e:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <DIO_VidSetPortValue>

	DIO_VidSetPinValue(LCD_CTRL_PORT, LCD_E_PIN ,PIN_HIGH);
    1782:	82 e0       	ldi	r24, 0x02	; 2
    1784:	62 e0       	ldi	r22, 0x02	; 2
    1786:	41 e0       	ldi	r20, 0x01	; 1
    1788:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>
    178c:	80 e0       	ldi	r24, 0x00	; 0
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	a0 e0       	ldi	r26, 0x00	; 0
    1792:	b0 e4       	ldi	r27, 0x40	; 64
    1794:	8b 87       	std	Y+11, r24	; 0x0b
    1796:	9c 87       	std	Y+12, r25	; 0x0c
    1798:	ad 87       	std	Y+13, r26	; 0x0d
    179a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    179c:	6b 85       	ldd	r22, Y+11	; 0x0b
    179e:	7c 85       	ldd	r23, Y+12	; 0x0c
    17a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    17a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    17a4:	20 e0       	ldi	r18, 0x00	; 0
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	4a e7       	ldi	r20, 0x7A	; 122
    17aa:	55 e4       	ldi	r21, 0x45	; 69
    17ac:	0e 94 94 02 	call	0x528	; 0x528 <__mulsf3>
    17b0:	dc 01       	movw	r26, r24
    17b2:	cb 01       	movw	r24, r22
    17b4:	8f 83       	std	Y+7, r24	; 0x07
    17b6:	98 87       	std	Y+8, r25	; 0x08
    17b8:	a9 87       	std	Y+9, r26	; 0x09
    17ba:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    17bc:	6f 81       	ldd	r22, Y+7	; 0x07
    17be:	78 85       	ldd	r23, Y+8	; 0x08
    17c0:	89 85       	ldd	r24, Y+9	; 0x09
    17c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	40 e8       	ldi	r20, 0x80	; 128
    17ca:	5f e3       	ldi	r21, 0x3F	; 63
    17cc:	0e 94 9a 04 	call	0x934	; 0x934 <__ltsf2>
    17d0:	88 23       	and	r24, r24
    17d2:	2c f4       	brge	.+10     	; 0x17de <LCD_VidSendCommand+0x8e>
		__ticks = 1;
    17d4:	81 e0       	ldi	r24, 0x01	; 1
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	9e 83       	std	Y+6, r25	; 0x06
    17da:	8d 83       	std	Y+5, r24	; 0x05
    17dc:	3f c0       	rjmp	.+126    	; 0x185c <LCD_VidSendCommand+0x10c>
	else if (__tmp > 65535)
    17de:	6f 81       	ldd	r22, Y+7	; 0x07
    17e0:	78 85       	ldd	r23, Y+8	; 0x08
    17e2:	89 85       	ldd	r24, Y+9	; 0x09
    17e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    17e6:	20 e0       	ldi	r18, 0x00	; 0
    17e8:	3f ef       	ldi	r19, 0xFF	; 255
    17ea:	4f e7       	ldi	r20, 0x7F	; 127
    17ec:	57 e4       	ldi	r21, 0x47	; 71
    17ee:	0e 94 3a 04 	call	0x874	; 0x874 <__gtsf2>
    17f2:	18 16       	cp	r1, r24
    17f4:	4c f5       	brge	.+82     	; 0x1848 <LCD_VidSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17f6:	6b 85       	ldd	r22, Y+11	; 0x0b
    17f8:	7c 85       	ldd	r23, Y+12	; 0x0c
    17fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    17fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    17fe:	20 e0       	ldi	r18, 0x00	; 0
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	40 e2       	ldi	r20, 0x20	; 32
    1804:	51 e4       	ldi	r21, 0x41	; 65
    1806:	0e 94 94 02 	call	0x528	; 0x528 <__mulsf3>
    180a:	dc 01       	movw	r26, r24
    180c:	cb 01       	movw	r24, r22
    180e:	bc 01       	movw	r22, r24
    1810:	cd 01       	movw	r24, r26
    1812:	0e 94 be 00 	call	0x17c	; 0x17c <__fixunssfsi>
    1816:	dc 01       	movw	r26, r24
    1818:	cb 01       	movw	r24, r22
    181a:	9e 83       	std	Y+6, r25	; 0x06
    181c:	8d 83       	std	Y+5, r24	; 0x05
    181e:	0f c0       	rjmp	.+30     	; 0x183e <LCD_VidSendCommand+0xee>
    1820:	80 e9       	ldi	r24, 0x90	; 144
    1822:	91 e0       	ldi	r25, 0x01	; 1
    1824:	9c 83       	std	Y+4, r25	; 0x04
    1826:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1828:	8b 81       	ldd	r24, Y+3	; 0x03
    182a:	9c 81       	ldd	r25, Y+4	; 0x04
    182c:	01 97       	sbiw	r24, 0x01	; 1
    182e:	f1 f7       	brne	.-4      	; 0x182c <LCD_VidSendCommand+0xdc>
    1830:	9c 83       	std	Y+4, r25	; 0x04
    1832:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1834:	8d 81       	ldd	r24, Y+5	; 0x05
    1836:	9e 81       	ldd	r25, Y+6	; 0x06
    1838:	01 97       	sbiw	r24, 0x01	; 1
    183a:	9e 83       	std	Y+6, r25	; 0x06
    183c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    183e:	8d 81       	ldd	r24, Y+5	; 0x05
    1840:	9e 81       	ldd	r25, Y+6	; 0x06
    1842:	00 97       	sbiw	r24, 0x00	; 0
    1844:	69 f7       	brne	.-38     	; 0x1820 <LCD_VidSendCommand+0xd0>
    1846:	14 c0       	rjmp	.+40     	; 0x1870 <LCD_VidSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1848:	6f 81       	ldd	r22, Y+7	; 0x07
    184a:	78 85       	ldd	r23, Y+8	; 0x08
    184c:	89 85       	ldd	r24, Y+9	; 0x09
    184e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1850:	0e 94 be 00 	call	0x17c	; 0x17c <__fixunssfsi>
    1854:	dc 01       	movw	r26, r24
    1856:	cb 01       	movw	r24, r22
    1858:	9e 83       	std	Y+6, r25	; 0x06
    185a:	8d 83       	std	Y+5, r24	; 0x05
    185c:	8d 81       	ldd	r24, Y+5	; 0x05
    185e:	9e 81       	ldd	r25, Y+6	; 0x06
    1860:	9a 83       	std	Y+2, r25	; 0x02
    1862:	89 83       	std	Y+1, r24	; 0x01
    1864:	89 81       	ldd	r24, Y+1	; 0x01
    1866:	9a 81       	ldd	r25, Y+2	; 0x02
    1868:	01 97       	sbiw	r24, 0x01	; 1
    186a:	f1 f7       	brne	.-4      	; 0x1868 <LCD_VidSendCommand+0x118>
    186c:	9a 83       	std	Y+2, r25	; 0x02
    186e:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(2);

	DIO_VidSetPinValue(LCD_CTRL_PORT, LCD_E_PIN ,PIN_LOW);
    1870:	82 e0       	ldi	r24, 0x02	; 2
    1872:	62 e0       	ldi	r22, 0x02	; 2
    1874:	40 e0       	ldi	r20, 0x00	; 0
    1876:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>
}
    187a:	2f 96       	adiw	r28, 0x0f	; 15
    187c:	0f b6       	in	r0, 0x3f	; 63
    187e:	f8 94       	cli
    1880:	de bf       	out	0x3e, r29	; 62
    1882:	0f be       	out	0x3f, r0	; 63
    1884:	cd bf       	out	0x3d, r28	; 61
    1886:	cf 91       	pop	r28
    1888:	df 91       	pop	r29
    188a:	08 95       	ret

0000188c <LCD_VidSendData>:

void LCD_VidSendData(u8 Copy_u8Data)
{
    188c:	df 93       	push	r29
    188e:	cf 93       	push	r28
    1890:	cd b7       	in	r28, 0x3d	; 61
    1892:	de b7       	in	r29, 0x3e	; 62
    1894:	2f 97       	sbiw	r28, 0x0f	; 15
    1896:	0f b6       	in	r0, 0x3f	; 63
    1898:	f8 94       	cli
    189a:	de bf       	out	0x3e, r29	; 62
    189c:	0f be       	out	0x3f, r0	; 63
    189e:	cd bf       	out	0x3d, r28	; 61
    18a0:	8f 87       	std	Y+15, r24	; 0x0f
    DIO_VidSetPinValue(LCD_CTRL_PORT, LCD_RS_PIN ,PIN_HIGH);
    18a2:	82 e0       	ldi	r24, 0x02	; 2
    18a4:	60 e0       	ldi	r22, 0x00	; 0
    18a6:	41 e0       	ldi	r20, 0x01	; 1
    18a8:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>

	DIO_VidSetPinValue(LCD_CTRL_PORT, LCD_RW_PIN ,PIN_LOW);
    18ac:	82 e0       	ldi	r24, 0x02	; 2
    18ae:	61 e0       	ldi	r22, 0x01	; 1
    18b0:	40 e0       	ldi	r20, 0x00	; 0
    18b2:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>

	DIO_VidSetPortValue(LCD_DATA_PORT,Copy_u8Data );
    18b6:	80 e0       	ldi	r24, 0x00	; 0
    18b8:	6f 85       	ldd	r22, Y+15	; 0x0f
    18ba:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <DIO_VidSetPortValue>

	DIO_VidSetPinValue(LCD_CTRL_PORT, LCD_E_PIN ,PIN_HIGH);
    18be:	82 e0       	ldi	r24, 0x02	; 2
    18c0:	62 e0       	ldi	r22, 0x02	; 2
    18c2:	41 e0       	ldi	r20, 0x01	; 1
    18c4:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>
    18c8:	80 e0       	ldi	r24, 0x00	; 0
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	a0 e0       	ldi	r26, 0x00	; 0
    18ce:	b0 e4       	ldi	r27, 0x40	; 64
    18d0:	8b 87       	std	Y+11, r24	; 0x0b
    18d2:	9c 87       	std	Y+12, r25	; 0x0c
    18d4:	ad 87       	std	Y+13, r26	; 0x0d
    18d6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    18da:	7c 85       	ldd	r23, Y+12	; 0x0c
    18dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    18de:	9e 85       	ldd	r25, Y+14	; 0x0e
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	4a e7       	ldi	r20, 0x7A	; 122
    18e6:	55 e4       	ldi	r21, 0x45	; 69
    18e8:	0e 94 94 02 	call	0x528	; 0x528 <__mulsf3>
    18ec:	dc 01       	movw	r26, r24
    18ee:	cb 01       	movw	r24, r22
    18f0:	8f 83       	std	Y+7, r24	; 0x07
    18f2:	98 87       	std	Y+8, r25	; 0x08
    18f4:	a9 87       	std	Y+9, r26	; 0x09
    18f6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    18f8:	6f 81       	ldd	r22, Y+7	; 0x07
    18fa:	78 85       	ldd	r23, Y+8	; 0x08
    18fc:	89 85       	ldd	r24, Y+9	; 0x09
    18fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	40 e8       	ldi	r20, 0x80	; 128
    1906:	5f e3       	ldi	r21, 0x3F	; 63
    1908:	0e 94 9a 04 	call	0x934	; 0x934 <__ltsf2>
    190c:	88 23       	and	r24, r24
    190e:	2c f4       	brge	.+10     	; 0x191a <LCD_VidSendData+0x8e>
		__ticks = 1;
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	90 e0       	ldi	r25, 0x00	; 0
    1914:	9e 83       	std	Y+6, r25	; 0x06
    1916:	8d 83       	std	Y+5, r24	; 0x05
    1918:	3f c0       	rjmp	.+126    	; 0x1998 <LCD_VidSendData+0x10c>
	else if (__tmp > 65535)
    191a:	6f 81       	ldd	r22, Y+7	; 0x07
    191c:	78 85       	ldd	r23, Y+8	; 0x08
    191e:	89 85       	ldd	r24, Y+9	; 0x09
    1920:	9a 85       	ldd	r25, Y+10	; 0x0a
    1922:	20 e0       	ldi	r18, 0x00	; 0
    1924:	3f ef       	ldi	r19, 0xFF	; 255
    1926:	4f e7       	ldi	r20, 0x7F	; 127
    1928:	57 e4       	ldi	r21, 0x47	; 71
    192a:	0e 94 3a 04 	call	0x874	; 0x874 <__gtsf2>
    192e:	18 16       	cp	r1, r24
    1930:	4c f5       	brge	.+82     	; 0x1984 <LCD_VidSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1932:	6b 85       	ldd	r22, Y+11	; 0x0b
    1934:	7c 85       	ldd	r23, Y+12	; 0x0c
    1936:	8d 85       	ldd	r24, Y+13	; 0x0d
    1938:	9e 85       	ldd	r25, Y+14	; 0x0e
    193a:	20 e0       	ldi	r18, 0x00	; 0
    193c:	30 e0       	ldi	r19, 0x00	; 0
    193e:	40 e2       	ldi	r20, 0x20	; 32
    1940:	51 e4       	ldi	r21, 0x41	; 65
    1942:	0e 94 94 02 	call	0x528	; 0x528 <__mulsf3>
    1946:	dc 01       	movw	r26, r24
    1948:	cb 01       	movw	r24, r22
    194a:	bc 01       	movw	r22, r24
    194c:	cd 01       	movw	r24, r26
    194e:	0e 94 be 00 	call	0x17c	; 0x17c <__fixunssfsi>
    1952:	dc 01       	movw	r26, r24
    1954:	cb 01       	movw	r24, r22
    1956:	9e 83       	std	Y+6, r25	; 0x06
    1958:	8d 83       	std	Y+5, r24	; 0x05
    195a:	0f c0       	rjmp	.+30     	; 0x197a <LCD_VidSendData+0xee>
    195c:	80 e9       	ldi	r24, 0x90	; 144
    195e:	91 e0       	ldi	r25, 0x01	; 1
    1960:	9c 83       	std	Y+4, r25	; 0x04
    1962:	8b 83       	std	Y+3, r24	; 0x03
    1964:	8b 81       	ldd	r24, Y+3	; 0x03
    1966:	9c 81       	ldd	r25, Y+4	; 0x04
    1968:	01 97       	sbiw	r24, 0x01	; 1
    196a:	f1 f7       	brne	.-4      	; 0x1968 <LCD_VidSendData+0xdc>
    196c:	9c 83       	std	Y+4, r25	; 0x04
    196e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1970:	8d 81       	ldd	r24, Y+5	; 0x05
    1972:	9e 81       	ldd	r25, Y+6	; 0x06
    1974:	01 97       	sbiw	r24, 0x01	; 1
    1976:	9e 83       	std	Y+6, r25	; 0x06
    1978:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    197a:	8d 81       	ldd	r24, Y+5	; 0x05
    197c:	9e 81       	ldd	r25, Y+6	; 0x06
    197e:	00 97       	sbiw	r24, 0x00	; 0
    1980:	69 f7       	brne	.-38     	; 0x195c <LCD_VidSendData+0xd0>
    1982:	14 c0       	rjmp	.+40     	; 0x19ac <LCD_VidSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1984:	6f 81       	ldd	r22, Y+7	; 0x07
    1986:	78 85       	ldd	r23, Y+8	; 0x08
    1988:	89 85       	ldd	r24, Y+9	; 0x09
    198a:	9a 85       	ldd	r25, Y+10	; 0x0a
    198c:	0e 94 be 00 	call	0x17c	; 0x17c <__fixunssfsi>
    1990:	dc 01       	movw	r26, r24
    1992:	cb 01       	movw	r24, r22
    1994:	9e 83       	std	Y+6, r25	; 0x06
    1996:	8d 83       	std	Y+5, r24	; 0x05
    1998:	8d 81       	ldd	r24, Y+5	; 0x05
    199a:	9e 81       	ldd	r25, Y+6	; 0x06
    199c:	9a 83       	std	Y+2, r25	; 0x02
    199e:	89 83       	std	Y+1, r24	; 0x01
    19a0:	89 81       	ldd	r24, Y+1	; 0x01
    19a2:	9a 81       	ldd	r25, Y+2	; 0x02
    19a4:	01 97       	sbiw	r24, 0x01	; 1
    19a6:	f1 f7       	brne	.-4      	; 0x19a4 <LCD_VidSendData+0x118>
    19a8:	9a 83       	std	Y+2, r25	; 0x02
    19aa:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(2);

	DIO_VidSetPinValue(LCD_CTRL_PORT, LCD_E_PIN ,PIN_LOW);
    19ac:	82 e0       	ldi	r24, 0x02	; 2
    19ae:	62 e0       	ldi	r22, 0x02	; 2
    19b0:	40 e0       	ldi	r20, 0x00	; 0
    19b2:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIO_VidSetPinValue>

}
    19b6:	2f 96       	adiw	r28, 0x0f	; 15
    19b8:	0f b6       	in	r0, 0x3f	; 63
    19ba:	f8 94       	cli
    19bc:	de bf       	out	0x3e, r29	; 62
    19be:	0f be       	out	0x3f, r0	; 63
    19c0:	cd bf       	out	0x3d, r28	; 61
    19c2:	cf 91       	pop	r28
    19c4:	df 91       	pop	r29
    19c6:	08 95       	ret

000019c8 <LCD_VidInit>:


void LCD_VidInit(void)
{
    19c8:	df 93       	push	r29
    19ca:	cf 93       	push	r28
    19cc:	cd b7       	in	r28, 0x3d	; 61
    19ce:	de b7       	in	r29, 0x3e	; 62
    19d0:	2e 97       	sbiw	r28, 0x0e	; 14
    19d2:	0f b6       	in	r0, 0x3f	; 63
    19d4:	f8 94       	cli
    19d6:	de bf       	out	0x3e, r29	; 62
    19d8:	0f be       	out	0x3f, r0	; 63
    19da:	cd bf       	out	0x3d, r28	; 61

	DIO_VidSetPortDirection(PORT_A , OUTPUT);
    19dc:	80 e0       	ldi	r24, 0x00	; 0
    19de:	61 e0       	ldi	r22, 0x01	; 1
    19e0:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <DIO_VidSetPortDirection>
	DIO_VidSetPinDirection(PORT_C, PIN0, OUTPUT);
    19e4:	82 e0       	ldi	r24, 0x02	; 2
    19e6:	60 e0       	ldi	r22, 0x00	; 0
    19e8:	41 e0       	ldi	r20, 0x01	; 1
    19ea:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(PORT_C, PIN1,OUTPUT);
    19ee:	82 e0       	ldi	r24, 0x02	; 2
    19f0:	61 e0       	ldi	r22, 0x01	; 1
    19f2:	41 e0       	ldi	r20, 0x01	; 1
    19f4:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(PORT_C, PIN2,OUTPUT);
    19f8:	82 e0       	ldi	r24, 0x02	; 2
    19fa:	62 e0       	ldi	r22, 0x02	; 2
    19fc:	41 e0       	ldi	r20, 0x01	; 1
    19fe:	0e 94 71 07 	call	0xee2	; 0xee2 <DIO_VidSetPinDirection>
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	a0 e2       	ldi	r26, 0x20	; 32
    1a08:	b2 e4       	ldi	r27, 0x42	; 66
    1a0a:	8b 87       	std	Y+11, r24	; 0x0b
    1a0c:	9c 87       	std	Y+12, r25	; 0x0c
    1a0e:	ad 87       	std	Y+13, r26	; 0x0d
    1a10:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a12:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a14:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a16:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a18:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a1a:	20 e0       	ldi	r18, 0x00	; 0
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	4a e7       	ldi	r20, 0x7A	; 122
    1a20:	55 e4       	ldi	r21, 0x45	; 69
    1a22:	0e 94 94 02 	call	0x528	; 0x528 <__mulsf3>
    1a26:	dc 01       	movw	r26, r24
    1a28:	cb 01       	movw	r24, r22
    1a2a:	8f 83       	std	Y+7, r24	; 0x07
    1a2c:	98 87       	std	Y+8, r25	; 0x08
    1a2e:	a9 87       	std	Y+9, r26	; 0x09
    1a30:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a32:	6f 81       	ldd	r22, Y+7	; 0x07
    1a34:	78 85       	ldd	r23, Y+8	; 0x08
    1a36:	89 85       	ldd	r24, Y+9	; 0x09
    1a38:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a3a:	20 e0       	ldi	r18, 0x00	; 0
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	40 e8       	ldi	r20, 0x80	; 128
    1a40:	5f e3       	ldi	r21, 0x3F	; 63
    1a42:	0e 94 9a 04 	call	0x934	; 0x934 <__ltsf2>
    1a46:	88 23       	and	r24, r24
    1a48:	2c f4       	brge	.+10     	; 0x1a54 <LCD_VidInit+0x8c>
		__ticks = 1;
    1a4a:	81 e0       	ldi	r24, 0x01	; 1
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	9e 83       	std	Y+6, r25	; 0x06
    1a50:	8d 83       	std	Y+5, r24	; 0x05
    1a52:	3f c0       	rjmp	.+126    	; 0x1ad2 <LCD_VidInit+0x10a>
	else if (__tmp > 65535)
    1a54:	6f 81       	ldd	r22, Y+7	; 0x07
    1a56:	78 85       	ldd	r23, Y+8	; 0x08
    1a58:	89 85       	ldd	r24, Y+9	; 0x09
    1a5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a5c:	20 e0       	ldi	r18, 0x00	; 0
    1a5e:	3f ef       	ldi	r19, 0xFF	; 255
    1a60:	4f e7       	ldi	r20, 0x7F	; 127
    1a62:	57 e4       	ldi	r21, 0x47	; 71
    1a64:	0e 94 3a 04 	call	0x874	; 0x874 <__gtsf2>
    1a68:	18 16       	cp	r1, r24
    1a6a:	4c f5       	brge	.+82     	; 0x1abe <LCD_VidInit+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a6c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a6e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a70:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a72:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	40 e2       	ldi	r20, 0x20	; 32
    1a7a:	51 e4       	ldi	r21, 0x41	; 65
    1a7c:	0e 94 94 02 	call	0x528	; 0x528 <__mulsf3>
    1a80:	dc 01       	movw	r26, r24
    1a82:	cb 01       	movw	r24, r22
    1a84:	bc 01       	movw	r22, r24
    1a86:	cd 01       	movw	r24, r26
    1a88:	0e 94 be 00 	call	0x17c	; 0x17c <__fixunssfsi>
    1a8c:	dc 01       	movw	r26, r24
    1a8e:	cb 01       	movw	r24, r22
    1a90:	9e 83       	std	Y+6, r25	; 0x06
    1a92:	8d 83       	std	Y+5, r24	; 0x05
    1a94:	0f c0       	rjmp	.+30     	; 0x1ab4 <LCD_VidInit+0xec>
    1a96:	80 e9       	ldi	r24, 0x90	; 144
    1a98:	91 e0       	ldi	r25, 0x01	; 1
    1a9a:	9c 83       	std	Y+4, r25	; 0x04
    1a9c:	8b 83       	std	Y+3, r24	; 0x03
    1a9e:	8b 81       	ldd	r24, Y+3	; 0x03
    1aa0:	9c 81       	ldd	r25, Y+4	; 0x04
    1aa2:	01 97       	sbiw	r24, 0x01	; 1
    1aa4:	f1 f7       	brne	.-4      	; 0x1aa2 <LCD_VidInit+0xda>
    1aa6:	9c 83       	std	Y+4, r25	; 0x04
    1aa8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aaa:	8d 81       	ldd	r24, Y+5	; 0x05
    1aac:	9e 81       	ldd	r25, Y+6	; 0x06
    1aae:	01 97       	sbiw	r24, 0x01	; 1
    1ab0:	9e 83       	std	Y+6, r25	; 0x06
    1ab2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ab4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ab6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ab8:	00 97       	sbiw	r24, 0x00	; 0
    1aba:	69 f7       	brne	.-38     	; 0x1a96 <LCD_VidInit+0xce>
    1abc:	14 c0       	rjmp	.+40     	; 0x1ae6 <LCD_VidInit+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1abe:	6f 81       	ldd	r22, Y+7	; 0x07
    1ac0:	78 85       	ldd	r23, Y+8	; 0x08
    1ac2:	89 85       	ldd	r24, Y+9	; 0x09
    1ac4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ac6:	0e 94 be 00 	call	0x17c	; 0x17c <__fixunssfsi>
    1aca:	dc 01       	movw	r26, r24
    1acc:	cb 01       	movw	r24, r22
    1ace:	9e 83       	std	Y+6, r25	; 0x06
    1ad0:	8d 83       	std	Y+5, r24	; 0x05
    1ad2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ad4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ad6:	9a 83       	std	Y+2, r25	; 0x02
    1ad8:	89 83       	std	Y+1, r24	; 0x01
    1ada:	89 81       	ldd	r24, Y+1	; 0x01
    1adc:	9a 81       	ldd	r25, Y+2	; 0x02
    1ade:	01 97       	sbiw	r24, 0x01	; 1
    1ae0:	f1 f7       	brne	.-4      	; 0x1ade <LCD_VidInit+0x116>
    1ae2:	9a 83       	std	Y+2, r25	; 0x02
    1ae4:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(40);

	LCD_VidSendCommand(0b00111000);
    1ae6:	88 e3       	ldi	r24, 0x38	; 56
    1ae8:	0e 94 a8 0b 	call	0x1750	; 0x1750 <LCD_VidSendCommand>

	LCD_VidSendCommand(0b00001100);
    1aec:	8c e0       	ldi	r24, 0x0C	; 12
    1aee:	0e 94 a8 0b 	call	0x1750	; 0x1750 <LCD_VidSendCommand>

	LCD_VidSendCommand(1);
    1af2:	81 e0       	ldi	r24, 0x01	; 1
    1af4:	0e 94 a8 0b 	call	0x1750	; 0x1750 <LCD_VidSendCommand>
}
    1af8:	2e 96       	adiw	r28, 0x0e	; 14
    1afa:	0f b6       	in	r0, 0x3f	; 63
    1afc:	f8 94       	cli
    1afe:	de bf       	out	0x3e, r29	; 62
    1b00:	0f be       	out	0x3f, r0	; 63
    1b02:	cd bf       	out	0x3d, r28	; 61
    1b04:	cf 91       	pop	r28
    1b06:	df 91       	pop	r29
    1b08:	08 95       	ret

00001b0a <LCD_VidDisplayString>:


void LCD_VidDisplayString(const char *str)
{
    1b0a:	df 93       	push	r29
    1b0c:	cf 93       	push	r28
    1b0e:	00 d0       	rcall	.+0      	; 0x1b10 <LCD_VidDisplayString+0x6>
    1b10:	0f 92       	push	r0
    1b12:	cd b7       	in	r28, 0x3d	; 61
    1b14:	de b7       	in	r29, 0x3e	; 62
    1b16:	9b 83       	std	Y+3, r25	; 0x03
    1b18:	8a 83       	std	Y+2, r24	; 0x02
	u8 i;
	for(i=0;str[i]!='\0';i++)
    1b1a:	19 82       	std	Y+1, r1	; 0x01
    1b1c:	0e c0       	rjmp	.+28     	; 0x1b3a <LCD_VidDisplayString+0x30>
		LCD_VidSendData(str[i]);
    1b1e:	89 81       	ldd	r24, Y+1	; 0x01
    1b20:	28 2f       	mov	r18, r24
    1b22:	30 e0       	ldi	r19, 0x00	; 0
    1b24:	8a 81       	ldd	r24, Y+2	; 0x02
    1b26:	9b 81       	ldd	r25, Y+3	; 0x03
    1b28:	fc 01       	movw	r30, r24
    1b2a:	e2 0f       	add	r30, r18
    1b2c:	f3 1f       	adc	r31, r19
    1b2e:	80 81       	ld	r24, Z
    1b30:	0e 94 46 0c 	call	0x188c	; 0x188c <LCD_VidSendData>


void LCD_VidDisplayString(const char *str)
{
	u8 i;
	for(i=0;str[i]!='\0';i++)
    1b34:	89 81       	ldd	r24, Y+1	; 0x01
    1b36:	8f 5f       	subi	r24, 0xFF	; 255
    1b38:	89 83       	std	Y+1, r24	; 0x01
    1b3a:	89 81       	ldd	r24, Y+1	; 0x01
    1b3c:	28 2f       	mov	r18, r24
    1b3e:	30 e0       	ldi	r19, 0x00	; 0
    1b40:	8a 81       	ldd	r24, Y+2	; 0x02
    1b42:	9b 81       	ldd	r25, Y+3	; 0x03
    1b44:	fc 01       	movw	r30, r24
    1b46:	e2 0f       	add	r30, r18
    1b48:	f3 1f       	adc	r31, r19
    1b4a:	80 81       	ld	r24, Z
    1b4c:	88 23       	and	r24, r24
    1b4e:	39 f7       	brne	.-50     	; 0x1b1e <LCD_VidDisplayString+0x14>
		LCD_VidSendData(str[i]);
}
    1b50:	0f 90       	pop	r0
    1b52:	0f 90       	pop	r0
    1b54:	0f 90       	pop	r0
    1b56:	cf 91       	pop	r28
    1b58:	df 91       	pop	r29
    1b5a:	08 95       	ret

00001b5c <LCD_intgerToString>:

void LCD_intgerToString(int data)
{
    1b5c:	df 93       	push	r29
    1b5e:	cf 93       	push	r28
    1b60:	cd b7       	in	r28, 0x3d	; 61
    1b62:	de b7       	in	r29, 0x3e	; 62
    1b64:	62 97       	sbiw	r28, 0x12	; 18
    1b66:	0f b6       	in	r0, 0x3f	; 63
    1b68:	f8 94       	cli
    1b6a:	de bf       	out	0x3e, r29	; 62
    1b6c:	0f be       	out	0x3f, r0	; 63
    1b6e:	cd bf       	out	0x3d, r28	; 61
    1b70:	9a 8b       	std	Y+18, r25	; 0x12
    1b72:	89 8b       	std	Y+17, r24	; 0x11
   char buff[16]; /* String to hold the ascii result */
   itoa(data,buff,10); /* Use itoa C function to convert the data to its corresponding ASCII value, 10 for decimal */
    1b74:	89 89       	ldd	r24, Y+17	; 0x11
    1b76:	9a 89       	ldd	r25, Y+18	; 0x12
    1b78:	9e 01       	movw	r18, r28
    1b7a:	2f 5f       	subi	r18, 0xFF	; 255
    1b7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b7e:	b9 01       	movw	r22, r18
    1b80:	4a e0       	ldi	r20, 0x0A	; 10
    1b82:	50 e0       	ldi	r21, 0x00	; 0
    1b84:	0e 94 65 0f 	call	0x1eca	; 0x1eca <itoa>
   LCD_VidDisplayString(buff); /* Display the string */
    1b88:	ce 01       	movw	r24, r28
    1b8a:	01 96       	adiw	r24, 0x01	; 1
    1b8c:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <LCD_VidDisplayString>
}
    1b90:	62 96       	adiw	r28, 0x12	; 18
    1b92:	0f b6       	in	r0, 0x3f	; 63
    1b94:	f8 94       	cli
    1b96:	de bf       	out	0x3e, r29	; 62
    1b98:	0f be       	out	0x3f, r0	; 63
    1b9a:	cd bf       	out	0x3d, r28	; 61
    1b9c:	cf 91       	pop	r28
    1b9e:	df 91       	pop	r29
    1ba0:	08 95       	ret

00001ba2 <LCD_moveCursor>:

void LCD_moveCursor(u8 row,u8 col)
{
    1ba2:	df 93       	push	r29
    1ba4:	cf 93       	push	r28
    1ba6:	00 d0       	rcall	.+0      	; 0x1ba8 <LCD_moveCursor+0x6>
    1ba8:	00 d0       	rcall	.+0      	; 0x1baa <LCD_moveCursor+0x8>
    1baa:	0f 92       	push	r0
    1bac:	cd b7       	in	r28, 0x3d	; 61
    1bae:	de b7       	in	r29, 0x3e	; 62
    1bb0:	8a 83       	std	Y+2, r24	; 0x02
    1bb2:	6b 83       	std	Y+3, r22	; 0x03
	u8 lcd_memory_address;

	/* Calculate the required address in the LCD DDRAM */
	switch(row)
    1bb4:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb6:	28 2f       	mov	r18, r24
    1bb8:	30 e0       	ldi	r19, 0x00	; 0
    1bba:	3d 83       	std	Y+5, r19	; 0x05
    1bbc:	2c 83       	std	Y+4, r18	; 0x04
    1bbe:	8c 81       	ldd	r24, Y+4	; 0x04
    1bc0:	9d 81       	ldd	r25, Y+5	; 0x05
    1bc2:	81 30       	cpi	r24, 0x01	; 1
    1bc4:	91 05       	cpc	r25, r1
    1bc6:	c1 f0       	breq	.+48     	; 0x1bf8 <LCD_moveCursor+0x56>
    1bc8:	2c 81       	ldd	r18, Y+4	; 0x04
    1bca:	3d 81       	ldd	r19, Y+5	; 0x05
    1bcc:	22 30       	cpi	r18, 0x02	; 2
    1bce:	31 05       	cpc	r19, r1
    1bd0:	2c f4       	brge	.+10     	; 0x1bdc <LCD_moveCursor+0x3a>
    1bd2:	8c 81       	ldd	r24, Y+4	; 0x04
    1bd4:	9d 81       	ldd	r25, Y+5	; 0x05
    1bd6:	00 97       	sbiw	r24, 0x00	; 0
    1bd8:	61 f0       	breq	.+24     	; 0x1bf2 <LCD_moveCursor+0x50>
    1bda:	19 c0       	rjmp	.+50     	; 0x1c0e <LCD_moveCursor+0x6c>
    1bdc:	2c 81       	ldd	r18, Y+4	; 0x04
    1bde:	3d 81       	ldd	r19, Y+5	; 0x05
    1be0:	22 30       	cpi	r18, 0x02	; 2
    1be2:	31 05       	cpc	r19, r1
    1be4:	69 f0       	breq	.+26     	; 0x1c00 <LCD_moveCursor+0x5e>
    1be6:	8c 81       	ldd	r24, Y+4	; 0x04
    1be8:	9d 81       	ldd	r25, Y+5	; 0x05
    1bea:	83 30       	cpi	r24, 0x03	; 3
    1bec:	91 05       	cpc	r25, r1
    1bee:	61 f0       	breq	.+24     	; 0x1c08 <LCD_moveCursor+0x66>
    1bf0:	0e c0       	rjmp	.+28     	; 0x1c0e <LCD_moveCursor+0x6c>
	{
		case 0:
			lcd_memory_address=col;
    1bf2:	8b 81       	ldd	r24, Y+3	; 0x03
    1bf4:	89 83       	std	Y+1, r24	; 0x01
    1bf6:	0b c0       	rjmp	.+22     	; 0x1c0e <LCD_moveCursor+0x6c>
				break;
		case 1:
			lcd_memory_address=col+0x40;
    1bf8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bfa:	80 5c       	subi	r24, 0xC0	; 192
    1bfc:	89 83       	std	Y+1, r24	; 0x01
    1bfe:	07 c0       	rjmp	.+14     	; 0x1c0e <LCD_moveCursor+0x6c>
				break;
		case 2:
			lcd_memory_address=col+0x10;
    1c00:	8b 81       	ldd	r24, Y+3	; 0x03
    1c02:	80 5f       	subi	r24, 0xF0	; 240
    1c04:	89 83       	std	Y+1, r24	; 0x01
    1c06:	03 c0       	rjmp	.+6      	; 0x1c0e <LCD_moveCursor+0x6c>
				break;
		case 3:
			lcd_memory_address=col+0x50;
    1c08:	8b 81       	ldd	r24, Y+3	; 0x03
    1c0a:	80 5b       	subi	r24, 0xB0	; 176
    1c0c:	89 83       	std	Y+1, r24	; 0x01
				break;
	}
	/* Move the LCD cursor to this specific address */
	LCD_VidSendCommand(lcd_memory_address | LCD_SET_CURSOR_LOCATION);
    1c0e:	89 81       	ldd	r24, Y+1	; 0x01
    1c10:	80 68       	ori	r24, 0x80	; 128
    1c12:	0e 94 a8 0b 	call	0x1750	; 0x1750 <LCD_VidSendCommand>
}
    1c16:	0f 90       	pop	r0
    1c18:	0f 90       	pop	r0
    1c1a:	0f 90       	pop	r0
    1c1c:	0f 90       	pop	r0
    1c1e:	0f 90       	pop	r0
    1c20:	cf 91       	pop	r28
    1c22:	df 91       	pop	r29
    1c24:	08 95       	ret

00001c26 <LCD_floatToString>:


void LCD_floatToString(float num, int decimalPlaces)
{
    1c26:	0f 93       	push	r16
    1c28:	1f 93       	push	r17
    1c2a:	df 93       	push	r29
    1c2c:	cf 93       	push	r28
    1c2e:	cd b7       	in	r28, 0x3d	; 61
    1c30:	de b7       	in	r29, 0x3e	; 62
    1c32:	66 97       	sbiw	r28, 0x16	; 22
    1c34:	0f b6       	in	r0, 0x3f	; 63
    1c36:	f8 94       	cli
    1c38:	de bf       	out	0x3e, r29	; 62
    1c3a:	0f be       	out	0x3f, r0	; 63
    1c3c:	cd bf       	out	0x3d, r28	; 61
    1c3e:	69 8b       	std	Y+17, r22	; 0x11
    1c40:	7a 8b       	std	Y+18, r23	; 0x12
    1c42:	8b 8b       	std	Y+19, r24	; 0x13
    1c44:	9c 8b       	std	Y+20, r25	; 0x14
    1c46:	5e 8b       	std	Y+22, r21	; 0x16
    1c48:	4d 8b       	std	Y+21, r20	; 0x15

	    char buffer[16];
	    dtostrf(num, 0, decimalPlaces, buffer); // Convert float to string
    1c4a:	89 89       	ldd	r24, Y+17	; 0x11
    1c4c:	9a 89       	ldd	r25, Y+18	; 0x12
    1c4e:	ab 89       	ldd	r26, Y+19	; 0x13
    1c50:	bc 89       	ldd	r27, Y+20	; 0x14
    1c52:	2d 89       	ldd	r18, Y+21	; 0x15
    1c54:	3e 89       	ldd	r19, Y+22	; 0x16
    1c56:	bc 01       	movw	r22, r24
    1c58:	cd 01       	movw	r24, r26
    1c5a:	40 e0       	ldi	r20, 0x00	; 0
    1c5c:	50 e0       	ldi	r21, 0x00	; 0
    1c5e:	fe 01       	movw	r30, r28
    1c60:	31 96       	adiw	r30, 0x01	; 1
    1c62:	8f 01       	movw	r16, r30
    1c64:	0e 94 44 0f 	call	0x1e88	; 0x1e88 <dtostrf>
	    LCD_VidDisplayString(buffer); // Display the string on the LCD
    1c68:	ce 01       	movw	r24, r28
    1c6a:	01 96       	adiw	r24, 0x01	; 1
    1c6c:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <LCD_VidDisplayString>

}
    1c70:	66 96       	adiw	r28, 0x16	; 22
    1c72:	0f b6       	in	r0, 0x3f	; 63
    1c74:	f8 94       	cli
    1c76:	de bf       	out	0x3e, r29	; 62
    1c78:	0f be       	out	0x3f, r0	; 63
    1c7a:	cd bf       	out	0x3d, r28	; 61
    1c7c:	cf 91       	pop	r28
    1c7e:	df 91       	pop	r29
    1c80:	1f 91       	pop	r17
    1c82:	0f 91       	pop	r16
    1c84:	08 95       	ret

00001c86 <main>:
#include "LCD_Interface.h"
#include  "Key_Pad_Config.h"
#include "Key_Pad_Interface.h"

int main(void)
{
    1c86:	ef 92       	push	r14
    1c88:	ff 92       	push	r15
    1c8a:	0f 93       	push	r16
    1c8c:	1f 93       	push	r17
    1c8e:	df 93       	push	r29
    1c90:	cf 93       	push	r28
    1c92:	cd b7       	in	r28, 0x3d	; 61
    1c94:	de b7       	in	r29, 0x3e	; 62
    1c96:	a6 97       	sbiw	r28, 0x26	; 38
    1c98:	0f b6       	in	r0, 0x3f	; 63
    1c9a:	f8 94       	cli
    1c9c:	de bf       	out	0x3e, r29	; 62
    1c9e:	0f be       	out	0x3f, r0	; 63
    1ca0:	cd bf       	out	0x3d, r28	; 61

  LCD_VidInit();
    1ca2:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <LCD_VidInit>
  Kpd_VidInit();
    1ca6:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <Kpd_VidInit>

  /*******************************************************************/
  u8 pressed_key=KPD_NO_PRESSED_KEY ,op;
    1caa:	8f ef       	ldi	r24, 0xFF	; 255
    1cac:	8e 83       	std	Y+6, r24	; 0x06
  s16 num1=0,num2=0;
    1cae:	1c 82       	std	Y+4, r1	; 0x04
    1cb0:	1b 82       	std	Y+3, r1	; 0x03
    1cb2:	1a 82       	std	Y+2, r1	; 0x02
    1cb4:	19 82       	std	Y+1, r1	; 0x01
  char res[30];


  while(1)
  {
	        pressed_key = kpd_u8GetPressedKey();
    1cb6:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <kpd_u8GetPressedKey>
    1cba:	8e 83       	std	Y+6, r24	; 0x06
	  		if (pressed_key != KPD_NO_PRESSED_KEY)
    1cbc:	8e 81       	ldd	r24, Y+6	; 0x06
    1cbe:	8f 3f       	cpi	r24, 0xFF	; 255
    1cc0:	d1 f3       	breq	.-12     	; 0x1cb6 <main+0x30>
	  		{


	  			if (pressed_key >= '0' && pressed_key <= '9')
    1cc2:	8e 81       	ldd	r24, Y+6	; 0x06
    1cc4:	80 33       	cpi	r24, 0x30	; 48
    1cc6:	d0 f0       	brcs	.+52     	; 0x1cfc <main+0x76>
    1cc8:	8e 81       	ldd	r24, Y+6	; 0x06
    1cca:	8a 33       	cpi	r24, 0x3A	; 58
    1ccc:	b8 f4       	brcc	.+46     	; 0x1cfc <main+0x76>
				{
					LCD_VidSendData(pressed_key);
    1cce:	8e 81       	ldd	r24, Y+6	; 0x06
    1cd0:	0e 94 46 0c 	call	0x188c	; 0x188c <LCD_VidSendData>
					num1 = (num1 * 10) + (pressed_key - '0');
    1cd4:	8b 81       	ldd	r24, Y+3	; 0x03
    1cd6:	9c 81       	ldd	r25, Y+4	; 0x04
    1cd8:	9c 01       	movw	r18, r24
    1cda:	22 0f       	add	r18, r18
    1cdc:	33 1f       	adc	r19, r19
    1cde:	c9 01       	movw	r24, r18
    1ce0:	88 0f       	add	r24, r24
    1ce2:	99 1f       	adc	r25, r25
    1ce4:	88 0f       	add	r24, r24
    1ce6:	99 1f       	adc	r25, r25
    1ce8:	28 0f       	add	r18, r24
    1cea:	39 1f       	adc	r19, r25
    1cec:	8e 81       	ldd	r24, Y+6	; 0x06
    1cee:	88 2f       	mov	r24, r24
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	c0 97       	sbiw	r24, 0x30	; 48
    1cf4:	82 0f       	add	r24, r18
    1cf6:	93 1f       	adc	r25, r19
    1cf8:	9c 83       	std	Y+4, r25	; 0x04
    1cfa:	8b 83       	std	Y+3, r24	; 0x03

				}

			    if ( (pressed_key == '-') || (pressed_key == '+') ||  (pressed_key == '*') || (pressed_key == '/') )
    1cfc:	8e 81       	ldd	r24, Y+6	; 0x06
    1cfe:	8d 32       	cpi	r24, 0x2D	; 45
    1d00:	49 f0       	breq	.+18     	; 0x1d14 <main+0x8e>
    1d02:	8e 81       	ldd	r24, Y+6	; 0x06
    1d04:	8b 32       	cpi	r24, 0x2B	; 43
    1d06:	31 f0       	breq	.+12     	; 0x1d14 <main+0x8e>
    1d08:	8e 81       	ldd	r24, Y+6	; 0x06
    1d0a:	8a 32       	cpi	r24, 0x2A	; 42
    1d0c:	19 f0       	breq	.+6      	; 0x1d14 <main+0x8e>
    1d0e:	8e 81       	ldd	r24, Y+6	; 0x06
    1d10:	8f 32       	cpi	r24, 0x2F	; 47
    1d12:	59 f4       	brne	.+22     	; 0x1d2a <main+0xa4>
				{
					num2 = num1;
    1d14:	8b 81       	ldd	r24, Y+3	; 0x03
    1d16:	9c 81       	ldd	r25, Y+4	; 0x04
    1d18:	9a 83       	std	Y+2, r25	; 0x02
    1d1a:	89 83       	std	Y+1, r24	; 0x01
					num1 = 0;
    1d1c:	1c 82       	std	Y+4, r1	; 0x04
    1d1e:	1b 82       	std	Y+3, r1	; 0x03
					LCD_VidSendData(pressed_key);
    1d20:	8e 81       	ldd	r24, Y+6	; 0x06
    1d22:	0e 94 46 0c 	call	0x188c	; 0x188c <LCD_VidSendData>
					op = pressed_key;
    1d26:	8e 81       	ldd	r24, Y+6	; 0x06
    1d28:	8d 83       	std	Y+5, r24	; 0x05
				}
	  			if (pressed_key == '=')
    1d2a:	8e 81       	ldd	r24, Y+6	; 0x06
    1d2c:	8d 33       	cpi	r24, 0x3D	; 61
    1d2e:	09 f0       	breq	.+2      	; 0x1d32 <main+0xac>
    1d30:	68 c0       	rjmp	.+208    	; 0x1e02 <main+0x17c>
	  			{

	  				LCD_VidSendData(pressed_key);
    1d32:	8e 81       	ldd	r24, Y+6	; 0x06
    1d34:	0e 94 46 0c 	call	0x188c	; 0x188c <LCD_VidSendData>
	  				switch (op)
    1d38:	8d 81       	ldd	r24, Y+5	; 0x05
    1d3a:	28 2f       	mov	r18, r24
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	3e a3       	std	Y+38, r19	; 0x26
    1d40:	2d a3       	std	Y+37, r18	; 0x25
    1d42:	4d a1       	ldd	r20, Y+37	; 0x25
    1d44:	5e a1       	ldd	r21, Y+38	; 0x26
    1d46:	4b 32       	cpi	r20, 0x2B	; 43
    1d48:	51 05       	cpc	r21, r1
    1d4a:	b1 f0       	breq	.+44     	; 0x1d78 <main+0xf2>
    1d4c:	8d a1       	ldd	r24, Y+37	; 0x25
    1d4e:	9e a1       	ldd	r25, Y+38	; 0x26
    1d50:	8c 32       	cpi	r24, 0x2C	; 44
    1d52:	91 05       	cpc	r25, r1
    1d54:	34 f4       	brge	.+12     	; 0x1d62 <main+0xdc>
    1d56:	2d a1       	ldd	r18, Y+37	; 0x25
    1d58:	3e a1       	ldd	r19, Y+38	; 0x26
    1d5a:	2a 32       	cpi	r18, 0x2A	; 42
    1d5c:	31 05       	cpc	r19, r1
    1d5e:	f1 f0       	breq	.+60     	; 0x1d9c <main+0x116>
    1d60:	50 c0       	rjmp	.+160    	; 0x1e02 <main+0x17c>
    1d62:	4d a1       	ldd	r20, Y+37	; 0x25
    1d64:	5e a1       	ldd	r21, Y+38	; 0x26
    1d66:	4d 32       	cpi	r20, 0x2D	; 45
    1d68:	51 05       	cpc	r21, r1
    1d6a:	79 f0       	breq	.+30     	; 0x1d8a <main+0x104>
    1d6c:	8d a1       	ldd	r24, Y+37	; 0x25
    1d6e:	9e a1       	ldd	r25, Y+38	; 0x26
    1d70:	8f 32       	cpi	r24, 0x2F	; 47
    1d72:	91 05       	cpc	r25, r1
    1d74:	11 f1       	breq	.+68     	; 0x1dba <main+0x134>
    1d76:	45 c0       	rjmp	.+138    	; 0x1e02 <main+0x17c>
	  				{
						case '+':
							LCD_intgerToString(num1 + num2);
    1d78:	8b 81       	ldd	r24, Y+3	; 0x03
    1d7a:	9c 81       	ldd	r25, Y+4	; 0x04
    1d7c:	29 81       	ldd	r18, Y+1	; 0x01
    1d7e:	3a 81       	ldd	r19, Y+2	; 0x02
    1d80:	82 0f       	add	r24, r18
    1d82:	93 1f       	adc	r25, r19
    1d84:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LCD_intgerToString>
    1d88:	3c c0       	rjmp	.+120    	; 0x1e02 <main+0x17c>
							break;
						case '-':
							LCD_intgerToString(num2 - num1);
    1d8a:	89 81       	ldd	r24, Y+1	; 0x01
    1d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    1d8e:	2b 81       	ldd	r18, Y+3	; 0x03
    1d90:	3c 81       	ldd	r19, Y+4	; 0x04
    1d92:	82 1b       	sub	r24, r18
    1d94:	93 0b       	sbc	r25, r19
    1d96:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LCD_intgerToString>
    1d9a:	33 c0       	rjmp	.+102    	; 0x1e02 <main+0x17c>
							break;
						case '*':
							LCD_intgerToString(num1 * num2);
    1d9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d9e:	9c 81       	ldd	r25, Y+4	; 0x04
    1da0:	29 81       	ldd	r18, Y+1	; 0x01
    1da2:	3a 81       	ldd	r19, Y+2	; 0x02
    1da4:	ac 01       	movw	r20, r24
    1da6:	42 9f       	mul	r20, r18
    1da8:	c0 01       	movw	r24, r0
    1daa:	43 9f       	mul	r20, r19
    1dac:	90 0d       	add	r25, r0
    1dae:	52 9f       	mul	r21, r18
    1db0:	90 0d       	add	r25, r0
    1db2:	11 24       	eor	r1, r1
    1db4:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <LCD_intgerToString>
    1db8:	24 c0       	rjmp	.+72     	; 0x1e02 <main+0x17c>
							break;
						case '/':
							LCD_floatToString( ( ((double)num2)/num1 ) , 3);
    1dba:	89 81       	ldd	r24, Y+1	; 0x01
    1dbc:	9a 81       	ldd	r25, Y+2	; 0x02
    1dbe:	aa 27       	eor	r26, r26
    1dc0:	97 fd       	sbrc	r25, 7
    1dc2:	a0 95       	com	r26
    1dc4:	ba 2f       	mov	r27, r26
    1dc6:	bc 01       	movw	r22, r24
    1dc8:	cd 01       	movw	r24, r26
    1dca:	0e 94 ca 04 	call	0x994	; 0x994 <__floatsisf>
    1dce:	7b 01       	movw	r14, r22
    1dd0:	8c 01       	movw	r16, r24
    1dd2:	8b 81       	ldd	r24, Y+3	; 0x03
    1dd4:	9c 81       	ldd	r25, Y+4	; 0x04
    1dd6:	aa 27       	eor	r26, r26
    1dd8:	97 fd       	sbrc	r25, 7
    1dda:	a0 95       	com	r26
    1ddc:	ba 2f       	mov	r27, r26
    1dde:	bc 01       	movw	r22, r24
    1de0:	cd 01       	movw	r24, r26
    1de2:	0e 94 ca 04 	call	0x994	; 0x994 <__floatsisf>
    1de6:	9b 01       	movw	r18, r22
    1de8:	ac 01       	movw	r20, r24
    1dea:	c8 01       	movw	r24, r16
    1dec:	b7 01       	movw	r22, r14
    1dee:	0e 94 8e 03 	call	0x71c	; 0x71c <__divsf3>
    1df2:	dc 01       	movw	r26, r24
    1df4:	cb 01       	movw	r24, r22
    1df6:	bc 01       	movw	r22, r24
    1df8:	cd 01       	movw	r24, r26
    1dfa:	43 e0       	ldi	r20, 0x03	; 3
    1dfc:	50 e0       	ldi	r21, 0x00	; 0
    1dfe:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <LCD_floatToString>
							break;
	  				}
	  			}
	  			if (pressed_key == 'c')
    1e02:	8e 81       	ldd	r24, Y+6	; 0x06
    1e04:	83 36       	cpi	r24, 0x63	; 99
    1e06:	09 f0       	breq	.+2      	; 0x1e0a <main+0x184>
    1e08:	56 cf       	rjmp	.-340    	; 0x1cb6 <main+0x30>
	  			{
	  				LCD_VidSendCommand(1);
    1e0a:	81 e0       	ldi	r24, 0x01	; 1
    1e0c:	0e 94 a8 0b 	call	0x1750	; 0x1750 <LCD_VidSendCommand>
	  				num1 = 0;
    1e10:	1c 82       	std	Y+4, r1	; 0x04
    1e12:	1b 82       	std	Y+3, r1	; 0x03
	  				num2 = 0;
    1e14:	1a 82       	std	Y+2, r1	; 0x02
    1e16:	19 82       	std	Y+1, r1	; 0x01
    1e18:	4e cf       	rjmp	.-356    	; 0x1cb6 <main+0x30>

00001e1a <__prologue_saves__>:
    1e1a:	2f 92       	push	r2
    1e1c:	3f 92       	push	r3
    1e1e:	4f 92       	push	r4
    1e20:	5f 92       	push	r5
    1e22:	6f 92       	push	r6
    1e24:	7f 92       	push	r7
    1e26:	8f 92       	push	r8
    1e28:	9f 92       	push	r9
    1e2a:	af 92       	push	r10
    1e2c:	bf 92       	push	r11
    1e2e:	cf 92       	push	r12
    1e30:	df 92       	push	r13
    1e32:	ef 92       	push	r14
    1e34:	ff 92       	push	r15
    1e36:	0f 93       	push	r16
    1e38:	1f 93       	push	r17
    1e3a:	cf 93       	push	r28
    1e3c:	df 93       	push	r29
    1e3e:	cd b7       	in	r28, 0x3d	; 61
    1e40:	de b7       	in	r29, 0x3e	; 62
    1e42:	ca 1b       	sub	r28, r26
    1e44:	db 0b       	sbc	r29, r27
    1e46:	0f b6       	in	r0, 0x3f	; 63
    1e48:	f8 94       	cli
    1e4a:	de bf       	out	0x3e, r29	; 62
    1e4c:	0f be       	out	0x3f, r0	; 63
    1e4e:	cd bf       	out	0x3d, r28	; 61
    1e50:	09 94       	ijmp

00001e52 <__epilogue_restores__>:
    1e52:	2a 88       	ldd	r2, Y+18	; 0x12
    1e54:	39 88       	ldd	r3, Y+17	; 0x11
    1e56:	48 88       	ldd	r4, Y+16	; 0x10
    1e58:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e5a:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e5c:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e5e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e60:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e62:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e64:	b9 84       	ldd	r11, Y+9	; 0x09
    1e66:	c8 84       	ldd	r12, Y+8	; 0x08
    1e68:	df 80       	ldd	r13, Y+7	; 0x07
    1e6a:	ee 80       	ldd	r14, Y+6	; 0x06
    1e6c:	fd 80       	ldd	r15, Y+5	; 0x05
    1e6e:	0c 81       	ldd	r16, Y+4	; 0x04
    1e70:	1b 81       	ldd	r17, Y+3	; 0x03
    1e72:	aa 81       	ldd	r26, Y+2	; 0x02
    1e74:	b9 81       	ldd	r27, Y+1	; 0x01
    1e76:	ce 0f       	add	r28, r30
    1e78:	d1 1d       	adc	r29, r1
    1e7a:	0f b6       	in	r0, 0x3f	; 63
    1e7c:	f8 94       	cli
    1e7e:	de bf       	out	0x3e, r29	; 62
    1e80:	0f be       	out	0x3f, r0	; 63
    1e82:	cd bf       	out	0x3d, r28	; 61
    1e84:	ed 01       	movw	r28, r26
    1e86:	08 95       	ret

00001e88 <dtostrf>:
    1e88:	ef 92       	push	r14
    1e8a:	ff 92       	push	r15
    1e8c:	0f 93       	push	r16
    1e8e:	1f 93       	push	r17
    1e90:	f2 2f       	mov	r31, r18
    1e92:	f0 2e       	mov	r15, r16
    1e94:	47 fd       	sbrc	r20, 7
    1e96:	02 c0       	rjmp	.+4      	; 0x1e9c <dtostrf+0x14>
    1e98:	e4 e0       	ldi	r30, 0x04	; 4
    1e9a:	01 c0       	rjmp	.+2      	; 0x1e9e <dtostrf+0x16>
    1e9c:	e4 e1       	ldi	r30, 0x14	; 20
    1e9e:	24 2f       	mov	r18, r20
    1ea0:	33 27       	eor	r19, r19
    1ea2:	27 fd       	sbrc	r18, 7
    1ea4:	30 95       	com	r19
    1ea6:	37 ff       	sbrs	r19, 7
    1ea8:	03 c0       	rjmp	.+6      	; 0x1eb0 <dtostrf+0x28>
    1eaa:	30 95       	com	r19
    1eac:	21 95       	neg	r18
    1eae:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb0:	4f 2d       	mov	r20, r15
    1eb2:	51 2f       	mov	r21, r17
    1eb4:	0f 2f       	mov	r16, r31
    1eb6:	ee 2e       	mov	r14, r30
    1eb8:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <dtoa_prf>
    1ebc:	8f 2d       	mov	r24, r15
    1ebe:	91 2f       	mov	r25, r17
    1ec0:	1f 91       	pop	r17
    1ec2:	0f 91       	pop	r16
    1ec4:	ff 90       	pop	r15
    1ec6:	ef 90       	pop	r14
    1ec8:	08 95       	ret

00001eca <itoa>:
    1eca:	fb 01       	movw	r30, r22
    1ecc:	9f 01       	movw	r18, r30
    1ece:	e8 94       	clt
    1ed0:	42 30       	cpi	r20, 0x02	; 2
    1ed2:	c4 f0       	brlt	.+48     	; 0x1f04 <itoa+0x3a>
    1ed4:	45 32       	cpi	r20, 0x25	; 37
    1ed6:	b4 f4       	brge	.+44     	; 0x1f04 <itoa+0x3a>
    1ed8:	4a 30       	cpi	r20, 0x0A	; 10
    1eda:	29 f4       	brne	.+10     	; 0x1ee6 <itoa+0x1c>
    1edc:	97 fb       	bst	r25, 7
    1ede:	1e f4       	brtc	.+6      	; 0x1ee6 <itoa+0x1c>
    1ee0:	90 95       	com	r25
    1ee2:	81 95       	neg	r24
    1ee4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee6:	64 2f       	mov	r22, r20
    1ee8:	77 27       	eor	r23, r23
    1eea:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <__udivmodhi4>
    1eee:	80 5d       	subi	r24, 0xD0	; 208
    1ef0:	8a 33       	cpi	r24, 0x3A	; 58
    1ef2:	0c f0       	brlt	.+2      	; 0x1ef6 <itoa+0x2c>
    1ef4:	89 5d       	subi	r24, 0xD9	; 217
    1ef6:	81 93       	st	Z+, r24
    1ef8:	cb 01       	movw	r24, r22
    1efa:	00 97       	sbiw	r24, 0x00	; 0
    1efc:	a1 f7       	brne	.-24     	; 0x1ee6 <itoa+0x1c>
    1efe:	16 f4       	brtc	.+4      	; 0x1f04 <itoa+0x3a>
    1f00:	5d e2       	ldi	r21, 0x2D	; 45
    1f02:	51 93       	st	Z+, r21
    1f04:	10 82       	st	Z, r1
    1f06:	c9 01       	movw	r24, r18
    1f08:	0c 94 c0 11 	jmp	0x2380	; 0x2380 <strrev>

00001f0c <dtoa_prf>:
    1f0c:	a9 e0       	ldi	r26, 0x09	; 9
    1f0e:	b0 e0       	ldi	r27, 0x00	; 0
    1f10:	ec e8       	ldi	r30, 0x8C	; 140
    1f12:	ff e0       	ldi	r31, 0x0F	; 15
    1f14:	0c 94 11 0f 	jmp	0x1e22	; 0x1e22 <__prologue_saves__+0x8>
    1f18:	6a 01       	movw	r12, r20
    1f1a:	12 2f       	mov	r17, r18
    1f1c:	a0 2e       	mov	r10, r16
    1f1e:	be 2c       	mov	r11, r14
    1f20:	2b e3       	ldi	r18, 0x3B	; 59
    1f22:	20 17       	cp	r18, r16
    1f24:	18 f4       	brcc	.+6      	; 0x1f2c <dtoa_prf+0x20>
    1f26:	2c e3       	ldi	r18, 0x3C	; 60
    1f28:	92 2e       	mov	r9, r18
    1f2a:	02 c0       	rjmp	.+4      	; 0x1f30 <dtoa_prf+0x24>
    1f2c:	90 2e       	mov	r9, r16
    1f2e:	93 94       	inc	r9
    1f30:	ae 01       	movw	r20, r28
    1f32:	4f 5f       	subi	r20, 0xFF	; 255
    1f34:	5f 4f       	sbci	r21, 0xFF	; 255
    1f36:	27 e0       	ldi	r18, 0x07	; 7
    1f38:	09 2d       	mov	r16, r9
    1f3a:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <__ftoa_engine>
    1f3e:	bc 01       	movw	r22, r24
    1f40:	89 81       	ldd	r24, Y+1	; 0x01
    1f42:	e8 2e       	mov	r14, r24
    1f44:	ff 24       	eor	r15, r15
    1f46:	c7 01       	movw	r24, r14
    1f48:	89 70       	andi	r24, 0x09	; 9
    1f4a:	90 70       	andi	r25, 0x00	; 0
    1f4c:	01 97       	sbiw	r24, 0x01	; 1
    1f4e:	11 f4       	brne	.+4      	; 0x1f54 <dtoa_prf+0x48>
    1f50:	ad e2       	ldi	r26, 0x2D	; 45
    1f52:	09 c0       	rjmp	.+18     	; 0x1f66 <dtoa_prf+0x5a>
    1f54:	b1 fe       	sbrs	r11, 1
    1f56:	02 c0       	rjmp	.+4      	; 0x1f5c <dtoa_prf+0x50>
    1f58:	ab e2       	ldi	r26, 0x2B	; 43
    1f5a:	05 c0       	rjmp	.+10     	; 0x1f66 <dtoa_prf+0x5a>
    1f5c:	b0 fc       	sbrc	r11, 0
    1f5e:	02 c0       	rjmp	.+4      	; 0x1f64 <dtoa_prf+0x58>
    1f60:	a0 e0       	ldi	r26, 0x00	; 0
    1f62:	01 c0       	rjmp	.+2      	; 0x1f66 <dtoa_prf+0x5a>
    1f64:	a0 e2       	ldi	r26, 0x20	; 32
    1f66:	e3 fe       	sbrs	r14, 3
    1f68:	3b c0       	rjmp	.+118    	; 0x1fe0 <dtoa_prf+0xd4>
    1f6a:	aa 23       	and	r26, r26
    1f6c:	11 f4       	brne	.+4      	; 0x1f72 <dtoa_prf+0x66>
    1f6e:	23 e0       	ldi	r18, 0x03	; 3
    1f70:	01 c0       	rjmp	.+2      	; 0x1f74 <dtoa_prf+0x68>
    1f72:	24 e0       	ldi	r18, 0x04	; 4
    1f74:	21 17       	cp	r18, r17
    1f76:	10 f0       	brcs	.+4      	; 0x1f7c <dtoa_prf+0x70>
    1f78:	20 e0       	ldi	r18, 0x00	; 0
    1f7a:	02 c0       	rjmp	.+4      	; 0x1f80 <dtoa_prf+0x74>
    1f7c:	12 1b       	sub	r17, r18
    1f7e:	21 2f       	mov	r18, r17
    1f80:	eb 2c       	mov	r14, r11
    1f82:	b4 fe       	sbrs	r11, 4
    1f84:	02 c0       	rjmp	.+4      	; 0x1f8a <dtoa_prf+0x7e>
    1f86:	32 2f       	mov	r19, r18
    1f88:	0a c0       	rjmp	.+20     	; 0x1f9e <dtoa_prf+0x92>
    1f8a:	f6 01       	movw	r30, r12
    1f8c:	32 2f       	mov	r19, r18
    1f8e:	80 e2       	ldi	r24, 0x20	; 32
    1f90:	02 c0       	rjmp	.+4      	; 0x1f96 <dtoa_prf+0x8a>
    1f92:	81 93       	st	Z+, r24
    1f94:	31 50       	subi	r19, 0x01	; 1
    1f96:	33 23       	and	r19, r19
    1f98:	e1 f7       	brne	.-8      	; 0x1f92 <dtoa_prf+0x86>
    1f9a:	c2 0e       	add	r12, r18
    1f9c:	d1 1c       	adc	r13, r1
    1f9e:	aa 23       	and	r26, r26
    1fa0:	19 f0       	breq	.+6      	; 0x1fa8 <dtoa_prf+0x9c>
    1fa2:	f6 01       	movw	r30, r12
    1fa4:	a1 93       	st	Z+, r26
    1fa6:	6f 01       	movw	r12, r30
    1fa8:	f6 01       	movw	r30, r12
    1faa:	31 96       	adiw	r30, 0x01	; 1
    1fac:	e2 fe       	sbrs	r14, 2
    1fae:	05 c0       	rjmp	.+10     	; 0x1fba <dtoa_prf+0xae>
    1fb0:	9e e4       	ldi	r25, 0x4E	; 78
    1fb2:	d6 01       	movw	r26, r12
    1fb4:	9c 93       	st	X, r25
    1fb6:	81 e4       	ldi	r24, 0x41	; 65
    1fb8:	04 c0       	rjmp	.+8      	; 0x1fc2 <dtoa_prf+0xb6>
    1fba:	9e e6       	ldi	r25, 0x6E	; 110
    1fbc:	d6 01       	movw	r26, r12
    1fbe:	9c 93       	st	X, r25
    1fc0:	81 e6       	ldi	r24, 0x61	; 97
    1fc2:	11 96       	adiw	r26, 0x01	; 1
    1fc4:	8c 93       	st	X, r24
    1fc6:	91 83       	std	Z+1, r25	; 0x01
    1fc8:	32 96       	adiw	r30, 0x02	; 2
    1fca:	df 01       	movw	r26, r30
    1fcc:	83 2f       	mov	r24, r19
    1fce:	90 e2       	ldi	r25, 0x20	; 32
    1fd0:	02 c0       	rjmp	.+4      	; 0x1fd6 <dtoa_prf+0xca>
    1fd2:	9d 93       	st	X+, r25
    1fd4:	81 50       	subi	r24, 0x01	; 1
    1fd6:	88 23       	and	r24, r24
    1fd8:	e1 f7       	brne	.-8      	; 0x1fd2 <dtoa_prf+0xc6>
    1fda:	e3 0f       	add	r30, r19
    1fdc:	f1 1d       	adc	r31, r1
    1fde:	40 c0       	rjmp	.+128    	; 0x2060 <dtoa_prf+0x154>
    1fe0:	e2 fe       	sbrs	r14, 2
    1fe2:	42 c0       	rjmp	.+132    	; 0x2068 <dtoa_prf+0x15c>
    1fe4:	aa 23       	and	r26, r26
    1fe6:	11 f4       	brne	.+4      	; 0x1fec <dtoa_prf+0xe0>
    1fe8:	23 e0       	ldi	r18, 0x03	; 3
    1fea:	01 c0       	rjmp	.+2      	; 0x1fee <dtoa_prf+0xe2>
    1fec:	24 e0       	ldi	r18, 0x04	; 4
    1fee:	21 17       	cp	r18, r17
    1ff0:	10 f0       	brcs	.+4      	; 0x1ff6 <dtoa_prf+0xea>
    1ff2:	20 e0       	ldi	r18, 0x00	; 0
    1ff4:	02 c0       	rjmp	.+4      	; 0x1ffa <dtoa_prf+0xee>
    1ff6:	12 1b       	sub	r17, r18
    1ff8:	21 2f       	mov	r18, r17
    1ffa:	eb 2c       	mov	r14, r11
    1ffc:	b4 fe       	sbrs	r11, 4
    1ffe:	02 c0       	rjmp	.+4      	; 0x2004 <dtoa_prf+0xf8>
    2000:	92 2f       	mov	r25, r18
    2002:	0a c0       	rjmp	.+20     	; 0x2018 <dtoa_prf+0x10c>
    2004:	f6 01       	movw	r30, r12
    2006:	92 2f       	mov	r25, r18
    2008:	80 e2       	ldi	r24, 0x20	; 32
    200a:	02 c0       	rjmp	.+4      	; 0x2010 <dtoa_prf+0x104>
    200c:	81 93       	st	Z+, r24
    200e:	91 50       	subi	r25, 0x01	; 1
    2010:	99 23       	and	r25, r25
    2012:	e1 f7       	brne	.-8      	; 0x200c <dtoa_prf+0x100>
    2014:	c2 0e       	add	r12, r18
    2016:	d1 1c       	adc	r13, r1
    2018:	aa 23       	and	r26, r26
    201a:	19 f0       	breq	.+6      	; 0x2022 <dtoa_prf+0x116>
    201c:	f6 01       	movw	r30, r12
    201e:	a1 93       	st	Z+, r26
    2020:	6f 01       	movw	r12, r30
    2022:	f6 01       	movw	r30, r12
    2024:	31 96       	adiw	r30, 0x01	; 1
    2026:	e2 fe       	sbrs	r14, 2
    2028:	08 c0       	rjmp	.+16     	; 0x203a <dtoa_prf+0x12e>
    202a:	89 e4       	ldi	r24, 0x49	; 73
    202c:	d6 01       	movw	r26, r12
    202e:	8c 93       	st	X, r24
    2030:	8e e4       	ldi	r24, 0x4E	; 78
    2032:	11 96       	adiw	r26, 0x01	; 1
    2034:	8c 93       	st	X, r24
    2036:	86 e4       	ldi	r24, 0x46	; 70
    2038:	07 c0       	rjmp	.+14     	; 0x2048 <dtoa_prf+0x13c>
    203a:	89 e6       	ldi	r24, 0x69	; 105
    203c:	d6 01       	movw	r26, r12
    203e:	8c 93       	st	X, r24
    2040:	8e e6       	ldi	r24, 0x6E	; 110
    2042:	11 96       	adiw	r26, 0x01	; 1
    2044:	8c 93       	st	X, r24
    2046:	86 e6       	ldi	r24, 0x66	; 102
    2048:	81 83       	std	Z+1, r24	; 0x01
    204a:	32 96       	adiw	r30, 0x02	; 2
    204c:	df 01       	movw	r26, r30
    204e:	89 2f       	mov	r24, r25
    2050:	20 e2       	ldi	r18, 0x20	; 32
    2052:	02 c0       	rjmp	.+4      	; 0x2058 <dtoa_prf+0x14c>
    2054:	2d 93       	st	X+, r18
    2056:	81 50       	subi	r24, 0x01	; 1
    2058:	88 23       	and	r24, r24
    205a:	e1 f7       	brne	.-8      	; 0x2054 <dtoa_prf+0x148>
    205c:	e9 0f       	add	r30, r25
    205e:	f1 1d       	adc	r31, r1
    2060:	10 82       	st	Z, r1
    2062:	2e ef       	ldi	r18, 0xFE	; 254
    2064:	3f ef       	ldi	r19, 0xFF	; 255
    2066:	af c0       	rjmp	.+350    	; 0x21c6 <dtoa_prf+0x2ba>
    2068:	16 16       	cp	r1, r22
    206a:	17 06       	cpc	r1, r23
    206c:	1c f0       	brlt	.+6      	; 0x2074 <dtoa_prf+0x168>
    206e:	41 e0       	ldi	r20, 0x01	; 1
    2070:	50 e0       	ldi	r21, 0x00	; 0
    2072:	03 c0       	rjmp	.+6      	; 0x207a <dtoa_prf+0x16e>
    2074:	ab 01       	movw	r20, r22
    2076:	4f 5f       	subi	r20, 0xFF	; 255
    2078:	5f 4f       	sbci	r21, 0xFF	; 255
    207a:	aa 20       	and	r10, r10
    207c:	19 f4       	brne	.+6      	; 0x2084 <dtoa_prf+0x178>
    207e:	80 e0       	ldi	r24, 0x00	; 0
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	03 c0       	rjmp	.+6      	; 0x208a <dtoa_prf+0x17e>
    2084:	8a 2d       	mov	r24, r10
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	01 96       	adiw	r24, 0x01	; 1
    208a:	20 e0       	ldi	r18, 0x00	; 0
    208c:	30 e0       	ldi	r19, 0x00	; 0
    208e:	aa 23       	and	r26, r26
    2090:	11 f0       	breq	.+4      	; 0x2096 <dtoa_prf+0x18a>
    2092:	21 e0       	ldi	r18, 0x01	; 1
    2094:	30 e0       	ldi	r19, 0x00	; 0
    2096:	24 0f       	add	r18, r20
    2098:	35 1f       	adc	r19, r21
    209a:	28 0f       	add	r18, r24
    209c:	39 1f       	adc	r19, r25
    209e:	81 2f       	mov	r24, r17
    20a0:	90 e0       	ldi	r25, 0x00	; 0
    20a2:	28 17       	cp	r18, r24
    20a4:	39 07       	cpc	r19, r25
    20a6:	14 f0       	brlt	.+4      	; 0x20ac <dtoa_prf+0x1a0>
    20a8:	20 e0       	ldi	r18, 0x00	; 0
    20aa:	02 c0       	rjmp	.+4      	; 0x20b0 <dtoa_prf+0x1a4>
    20ac:	12 1b       	sub	r17, r18
    20ae:	21 2f       	mov	r18, r17
    20b0:	4b 2d       	mov	r20, r11
    20b2:	50 e0       	ldi	r21, 0x00	; 0
    20b4:	ca 01       	movw	r24, r20
    20b6:	80 71       	andi	r24, 0x10	; 16
    20b8:	90 70       	andi	r25, 0x00	; 0
    20ba:	b4 fc       	sbrc	r11, 4
    20bc:	0d c0       	rjmp	.+26     	; 0x20d8 <dtoa_prf+0x1cc>
    20be:	b3 fc       	sbrc	r11, 3
    20c0:	0b c0       	rjmp	.+22     	; 0x20d8 <dtoa_prf+0x1cc>
    20c2:	f6 01       	movw	r30, r12
    20c4:	32 2f       	mov	r19, r18
    20c6:	40 e2       	ldi	r20, 0x20	; 32
    20c8:	02 c0       	rjmp	.+4      	; 0x20ce <dtoa_prf+0x1c2>
    20ca:	41 93       	st	Z+, r20
    20cc:	31 50       	subi	r19, 0x01	; 1
    20ce:	33 23       	and	r19, r19
    20d0:	e1 f7       	brne	.-8      	; 0x20ca <dtoa_prf+0x1be>
    20d2:	c2 0e       	add	r12, r18
    20d4:	d1 1c       	adc	r13, r1
    20d6:	01 c0       	rjmp	.+2      	; 0x20da <dtoa_prf+0x1ce>
    20d8:	32 2f       	mov	r19, r18
    20da:	aa 23       	and	r26, r26
    20dc:	19 f0       	breq	.+6      	; 0x20e4 <dtoa_prf+0x1d8>
    20de:	f6 01       	movw	r30, r12
    20e0:	a1 93       	st	Z+, r26
    20e2:	6f 01       	movw	r12, r30
    20e4:	89 2b       	or	r24, r25
    20e6:	11 f0       	breq	.+4      	; 0x20ec <dtoa_prf+0x1e0>
    20e8:	13 2f       	mov	r17, r19
    20ea:	0a c0       	rjmp	.+20     	; 0x2100 <dtoa_prf+0x1f4>
    20ec:	f6 01       	movw	r30, r12
    20ee:	13 2f       	mov	r17, r19
    20f0:	80 e3       	ldi	r24, 0x30	; 48
    20f2:	02 c0       	rjmp	.+4      	; 0x20f8 <dtoa_prf+0x1ec>
    20f4:	81 93       	st	Z+, r24
    20f6:	11 50       	subi	r17, 0x01	; 1
    20f8:	11 23       	and	r17, r17
    20fa:	e1 f7       	brne	.-8      	; 0x20f4 <dtoa_prf+0x1e8>
    20fc:	c3 0e       	add	r12, r19
    20fe:	d1 1c       	adc	r13, r1
    2100:	09 2d       	mov	r16, r9
    2102:	06 0f       	add	r16, r22
    2104:	ba 80       	ldd	r11, Y+2	; 0x02
    2106:	90 e1       	ldi	r25, 0x10	; 16
    2108:	89 2e       	mov	r8, r25
    210a:	91 2c       	mov	r9, r1
    210c:	8e 20       	and	r8, r14
    210e:	9f 20       	and	r9, r15
    2110:	e4 fe       	sbrs	r14, 4
    2112:	04 c0       	rjmp	.+8      	; 0x211c <dtoa_prf+0x210>
    2114:	f1 e3       	ldi	r31, 0x31	; 49
    2116:	bf 16       	cp	r11, r31
    2118:	09 f4       	brne	.+2      	; 0x211c <dtoa_prf+0x210>
    211a:	01 50       	subi	r16, 0x01	; 1
    211c:	10 16       	cp	r1, r16
    211e:	14 f0       	brlt	.+4      	; 0x2124 <dtoa_prf+0x218>
    2120:	01 e0       	ldi	r16, 0x01	; 1
    2122:	03 c0       	rjmp	.+6      	; 0x212a <dtoa_prf+0x21e>
    2124:	09 30       	cpi	r16, 0x09	; 9
    2126:	08 f0       	brcs	.+2      	; 0x212a <dtoa_prf+0x21e>
    2128:	08 e0       	ldi	r16, 0x08	; 8
    212a:	9b 01       	movw	r18, r22
    212c:	77 ff       	sbrs	r23, 7
    212e:	02 c0       	rjmp	.+4      	; 0x2134 <dtoa_prf+0x228>
    2130:	20 e0       	ldi	r18, 0x00	; 0
    2132:	30 e0       	ldi	r19, 0x00	; 0
    2134:	cb 01       	movw	r24, r22
    2136:	01 96       	adiw	r24, 0x01	; 1
    2138:	82 1b       	sub	r24, r18
    213a:	93 0b       	sbc	r25, r19
    213c:	fe 01       	movw	r30, r28
    213e:	31 96       	adiw	r30, 0x01	; 1
    2140:	e8 0f       	add	r30, r24
    2142:	f9 1f       	adc	r31, r25
    2144:	8e e2       	ldi	r24, 0x2E	; 46
    2146:	f8 2e       	mov	r15, r24
    2148:	3b 01       	movw	r6, r22
    214a:	60 1a       	sub	r6, r16
    214c:	71 08       	sbc	r7, r1
    214e:	8a 2d       	mov	r24, r10
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	44 27       	eor	r20, r20
    2154:	55 27       	eor	r21, r21
    2156:	48 1b       	sub	r20, r24
    2158:	59 0b       	sbc	r21, r25
    215a:	8f ef       	ldi	r24, 0xFF	; 255
    215c:	2f 3f       	cpi	r18, 0xFF	; 255
    215e:	38 07       	cpc	r19, r24
    2160:	19 f4       	brne	.+6      	; 0x2168 <dtoa_prf+0x25c>
    2162:	d6 01       	movw	r26, r12
    2164:	fd 92       	st	X+, r15
    2166:	6d 01       	movw	r12, r26
    2168:	62 17       	cp	r22, r18
    216a:	73 07       	cpc	r23, r19
    216c:	2c f0       	brlt	.+10     	; 0x2178 <dtoa_prf+0x26c>
    216e:	62 16       	cp	r6, r18
    2170:	73 06       	cpc	r7, r19
    2172:	14 f4       	brge	.+4      	; 0x2178 <dtoa_prf+0x26c>
    2174:	80 81       	ld	r24, Z
    2176:	01 c0       	rjmp	.+2      	; 0x217a <dtoa_prf+0x26e>
    2178:	80 e3       	ldi	r24, 0x30	; 48
    217a:	21 50       	subi	r18, 0x01	; 1
    217c:	30 40       	sbci	r19, 0x00	; 0
    217e:	31 96       	adiw	r30, 0x01	; 1
    2180:	24 17       	cp	r18, r20
    2182:	35 07       	cpc	r19, r21
    2184:	24 f0       	brlt	.+8      	; 0x218e <dtoa_prf+0x282>
    2186:	d6 01       	movw	r26, r12
    2188:	8d 93       	st	X+, r24
    218a:	6d 01       	movw	r12, r26
    218c:	e6 cf       	rjmp	.-52     	; 0x215a <dtoa_prf+0x24e>
    218e:	26 17       	cp	r18, r22
    2190:	37 07       	cpc	r19, r23
    2192:	49 f4       	brne	.+18     	; 0x21a6 <dtoa_prf+0x29a>
    2194:	b5 e3       	ldi	r27, 0x35	; 53
    2196:	bb 15       	cp	r27, r11
    2198:	28 f0       	brcs	.+10     	; 0x21a4 <dtoa_prf+0x298>
    219a:	bb 16       	cp	r11, r27
    219c:	21 f4       	brne	.+8      	; 0x21a6 <dtoa_prf+0x29a>
    219e:	81 14       	cp	r8, r1
    21a0:	91 04       	cpc	r9, r1
    21a2:	09 f4       	brne	.+2      	; 0x21a6 <dtoa_prf+0x29a>
    21a4:	81 e3       	ldi	r24, 0x31	; 49
    21a6:	f6 01       	movw	r30, r12
    21a8:	81 93       	st	Z+, r24
    21aa:	d6 01       	movw	r26, r12
    21ac:	81 2f       	mov	r24, r17
    21ae:	90 e2       	ldi	r25, 0x20	; 32
    21b0:	02 c0       	rjmp	.+4      	; 0x21b6 <dtoa_prf+0x2aa>
    21b2:	9c 93       	st	X, r25
    21b4:	81 50       	subi	r24, 0x01	; 1
    21b6:	11 96       	adiw	r26, 0x01	; 1
    21b8:	88 23       	and	r24, r24
    21ba:	d9 f7       	brne	.-10     	; 0x21b2 <dtoa_prf+0x2a6>
    21bc:	e1 0f       	add	r30, r17
    21be:	f1 1d       	adc	r31, r1
    21c0:	10 82       	st	Z, r1
    21c2:	20 e0       	ldi	r18, 0x00	; 0
    21c4:	30 e0       	ldi	r19, 0x00	; 0
    21c6:	c9 01       	movw	r24, r18
    21c8:	29 96       	adiw	r28, 0x09	; 9
    21ca:	ee e0       	ldi	r30, 0x0E	; 14
    21cc:	0c 94 2d 0f 	jmp	0x1e5a	; 0x1e5a <__epilogue_restores__+0x8>

000021d0 <__ftoa_engine>:
    21d0:	28 30       	cpi	r18, 0x08	; 8
    21d2:	08 f0       	brcs	.+2      	; 0x21d6 <__ftoa_engine+0x6>
    21d4:	27 e0       	ldi	r18, 0x07	; 7
    21d6:	33 27       	eor	r19, r19
    21d8:	da 01       	movw	r26, r20
    21da:	99 0f       	add	r25, r25
    21dc:	31 1d       	adc	r19, r1
    21de:	87 fd       	sbrc	r24, 7
    21e0:	91 60       	ori	r25, 0x01	; 1
    21e2:	00 96       	adiw	r24, 0x00	; 0
    21e4:	61 05       	cpc	r22, r1
    21e6:	71 05       	cpc	r23, r1
    21e8:	39 f4       	brne	.+14     	; 0x21f8 <__ftoa_engine+0x28>
    21ea:	32 60       	ori	r19, 0x02	; 2
    21ec:	2e 5f       	subi	r18, 0xFE	; 254
    21ee:	3d 93       	st	X+, r19
    21f0:	30 e3       	ldi	r19, 0x30	; 48
    21f2:	2a 95       	dec	r18
    21f4:	e1 f7       	brne	.-8      	; 0x21ee <__ftoa_engine+0x1e>
    21f6:	08 95       	ret
    21f8:	9f 3f       	cpi	r25, 0xFF	; 255
    21fa:	30 f0       	brcs	.+12     	; 0x2208 <__ftoa_engine+0x38>
    21fc:	80 38       	cpi	r24, 0x80	; 128
    21fe:	71 05       	cpc	r23, r1
    2200:	61 05       	cpc	r22, r1
    2202:	09 f0       	breq	.+2      	; 0x2206 <__ftoa_engine+0x36>
    2204:	3c 5f       	subi	r19, 0xFC	; 252
    2206:	3c 5f       	subi	r19, 0xFC	; 252
    2208:	3d 93       	st	X+, r19
    220a:	91 30       	cpi	r25, 0x01	; 1
    220c:	08 f0       	brcs	.+2      	; 0x2210 <__ftoa_engine+0x40>
    220e:	80 68       	ori	r24, 0x80	; 128
    2210:	91 1d       	adc	r25, r1
    2212:	df 93       	push	r29
    2214:	cf 93       	push	r28
    2216:	1f 93       	push	r17
    2218:	0f 93       	push	r16
    221a:	ff 92       	push	r15
    221c:	ef 92       	push	r14
    221e:	19 2f       	mov	r17, r25
    2220:	98 7f       	andi	r25, 0xF8	; 248
    2222:	96 95       	lsr	r25
    2224:	e9 2f       	mov	r30, r25
    2226:	96 95       	lsr	r25
    2228:	96 95       	lsr	r25
    222a:	e9 0f       	add	r30, r25
    222c:	ff 27       	eor	r31, r31
    222e:	e2 55       	subi	r30, 0x52	; 82
    2230:	ff 4f       	sbci	r31, 0xFF	; 255
    2232:	99 27       	eor	r25, r25
    2234:	33 27       	eor	r19, r19
    2236:	ee 24       	eor	r14, r14
    2238:	ff 24       	eor	r15, r15
    223a:	a7 01       	movw	r20, r14
    223c:	e7 01       	movw	r28, r14
    223e:	05 90       	lpm	r0, Z+
    2240:	08 94       	sec
    2242:	07 94       	ror	r0
    2244:	28 f4       	brcc	.+10     	; 0x2250 <__ftoa_engine+0x80>
    2246:	36 0f       	add	r19, r22
    2248:	e7 1e       	adc	r14, r23
    224a:	f8 1e       	adc	r15, r24
    224c:	49 1f       	adc	r20, r25
    224e:	51 1d       	adc	r21, r1
    2250:	66 0f       	add	r22, r22
    2252:	77 1f       	adc	r23, r23
    2254:	88 1f       	adc	r24, r24
    2256:	99 1f       	adc	r25, r25
    2258:	06 94       	lsr	r0
    225a:	a1 f7       	brne	.-24     	; 0x2244 <__ftoa_engine+0x74>
    225c:	05 90       	lpm	r0, Z+
    225e:	07 94       	ror	r0
    2260:	28 f4       	brcc	.+10     	; 0x226c <__ftoa_engine+0x9c>
    2262:	e7 0e       	add	r14, r23
    2264:	f8 1e       	adc	r15, r24
    2266:	49 1f       	adc	r20, r25
    2268:	56 1f       	adc	r21, r22
    226a:	c1 1d       	adc	r28, r1
    226c:	77 0f       	add	r23, r23
    226e:	88 1f       	adc	r24, r24
    2270:	99 1f       	adc	r25, r25
    2272:	66 1f       	adc	r22, r22
    2274:	06 94       	lsr	r0
    2276:	a1 f7       	brne	.-24     	; 0x2260 <__ftoa_engine+0x90>
    2278:	05 90       	lpm	r0, Z+
    227a:	07 94       	ror	r0
    227c:	28 f4       	brcc	.+10     	; 0x2288 <__ftoa_engine+0xb8>
    227e:	f8 0e       	add	r15, r24
    2280:	49 1f       	adc	r20, r25
    2282:	56 1f       	adc	r21, r22
    2284:	c7 1f       	adc	r28, r23
    2286:	d1 1d       	adc	r29, r1
    2288:	88 0f       	add	r24, r24
    228a:	99 1f       	adc	r25, r25
    228c:	66 1f       	adc	r22, r22
    228e:	77 1f       	adc	r23, r23
    2290:	06 94       	lsr	r0
    2292:	a1 f7       	brne	.-24     	; 0x227c <__ftoa_engine+0xac>
    2294:	05 90       	lpm	r0, Z+
    2296:	07 94       	ror	r0
    2298:	20 f4       	brcc	.+8      	; 0x22a2 <__ftoa_engine+0xd2>
    229a:	49 0f       	add	r20, r25
    229c:	56 1f       	adc	r21, r22
    229e:	c7 1f       	adc	r28, r23
    22a0:	d8 1f       	adc	r29, r24
    22a2:	99 0f       	add	r25, r25
    22a4:	66 1f       	adc	r22, r22
    22a6:	77 1f       	adc	r23, r23
    22a8:	88 1f       	adc	r24, r24
    22aa:	06 94       	lsr	r0
    22ac:	a9 f7       	brne	.-22     	; 0x2298 <__ftoa_engine+0xc8>
    22ae:	84 91       	lpm	r24, Z+
    22b0:	10 95       	com	r17
    22b2:	17 70       	andi	r17, 0x07	; 7
    22b4:	41 f0       	breq	.+16     	; 0x22c6 <__ftoa_engine+0xf6>
    22b6:	d6 95       	lsr	r29
    22b8:	c7 95       	ror	r28
    22ba:	57 95       	ror	r21
    22bc:	47 95       	ror	r20
    22be:	f7 94       	ror	r15
    22c0:	e7 94       	ror	r14
    22c2:	1a 95       	dec	r17
    22c4:	c1 f7       	brne	.-16     	; 0x22b6 <__ftoa_engine+0xe6>
    22c6:	e4 e5       	ldi	r30, 0x54	; 84
    22c8:	f0 e0       	ldi	r31, 0x00	; 0
    22ca:	68 94       	set
    22cc:	15 90       	lpm	r1, Z+
    22ce:	15 91       	lpm	r17, Z+
    22d0:	35 91       	lpm	r19, Z+
    22d2:	65 91       	lpm	r22, Z+
    22d4:	95 91       	lpm	r25, Z+
    22d6:	05 90       	lpm	r0, Z+
    22d8:	7f e2       	ldi	r23, 0x2F	; 47
    22da:	73 95       	inc	r23
    22dc:	e1 18       	sub	r14, r1
    22de:	f1 0a       	sbc	r15, r17
    22e0:	43 0b       	sbc	r20, r19
    22e2:	56 0b       	sbc	r21, r22
    22e4:	c9 0b       	sbc	r28, r25
    22e6:	d0 09       	sbc	r29, r0
    22e8:	c0 f7       	brcc	.-16     	; 0x22da <__ftoa_engine+0x10a>
    22ea:	e1 0c       	add	r14, r1
    22ec:	f1 1e       	adc	r15, r17
    22ee:	43 1f       	adc	r20, r19
    22f0:	56 1f       	adc	r21, r22
    22f2:	c9 1f       	adc	r28, r25
    22f4:	d0 1d       	adc	r29, r0
    22f6:	7e f4       	brtc	.+30     	; 0x2316 <__ftoa_engine+0x146>
    22f8:	70 33       	cpi	r23, 0x30	; 48
    22fa:	11 f4       	brne	.+4      	; 0x2300 <__ftoa_engine+0x130>
    22fc:	8a 95       	dec	r24
    22fe:	e6 cf       	rjmp	.-52     	; 0x22cc <__ftoa_engine+0xfc>
    2300:	e8 94       	clt
    2302:	01 50       	subi	r16, 0x01	; 1
    2304:	30 f0       	brcs	.+12     	; 0x2312 <__ftoa_engine+0x142>
    2306:	08 0f       	add	r16, r24
    2308:	0a f4       	brpl	.+2      	; 0x230c <__ftoa_engine+0x13c>
    230a:	00 27       	eor	r16, r16
    230c:	02 17       	cp	r16, r18
    230e:	08 f4       	brcc	.+2      	; 0x2312 <__ftoa_engine+0x142>
    2310:	20 2f       	mov	r18, r16
    2312:	23 95       	inc	r18
    2314:	02 2f       	mov	r16, r18
    2316:	7a 33       	cpi	r23, 0x3A	; 58
    2318:	28 f0       	brcs	.+10     	; 0x2324 <__ftoa_engine+0x154>
    231a:	79 e3       	ldi	r23, 0x39	; 57
    231c:	7d 93       	st	X+, r23
    231e:	2a 95       	dec	r18
    2320:	e9 f7       	brne	.-6      	; 0x231c <__ftoa_engine+0x14c>
    2322:	10 c0       	rjmp	.+32     	; 0x2344 <__ftoa_engine+0x174>
    2324:	7d 93       	st	X+, r23
    2326:	2a 95       	dec	r18
    2328:	89 f6       	brne	.-94     	; 0x22cc <__ftoa_engine+0xfc>
    232a:	06 94       	lsr	r0
    232c:	97 95       	ror	r25
    232e:	67 95       	ror	r22
    2330:	37 95       	ror	r19
    2332:	17 95       	ror	r17
    2334:	17 94       	ror	r1
    2336:	e1 18       	sub	r14, r1
    2338:	f1 0a       	sbc	r15, r17
    233a:	43 0b       	sbc	r20, r19
    233c:	56 0b       	sbc	r21, r22
    233e:	c9 0b       	sbc	r28, r25
    2340:	d0 09       	sbc	r29, r0
    2342:	98 f0       	brcs	.+38     	; 0x236a <__ftoa_engine+0x19a>
    2344:	23 95       	inc	r18
    2346:	7e 91       	ld	r23, -X
    2348:	73 95       	inc	r23
    234a:	7a 33       	cpi	r23, 0x3A	; 58
    234c:	08 f0       	brcs	.+2      	; 0x2350 <__ftoa_engine+0x180>
    234e:	70 e3       	ldi	r23, 0x30	; 48
    2350:	7c 93       	st	X, r23
    2352:	20 13       	cpse	r18, r16
    2354:	b8 f7       	brcc	.-18     	; 0x2344 <__ftoa_engine+0x174>
    2356:	7e 91       	ld	r23, -X
    2358:	70 61       	ori	r23, 0x10	; 16
    235a:	7d 93       	st	X+, r23
    235c:	30 f0       	brcs	.+12     	; 0x236a <__ftoa_engine+0x19a>
    235e:	83 95       	inc	r24
    2360:	71 e3       	ldi	r23, 0x31	; 49
    2362:	7d 93       	st	X+, r23
    2364:	70 e3       	ldi	r23, 0x30	; 48
    2366:	2a 95       	dec	r18
    2368:	e1 f7       	brne	.-8      	; 0x2362 <__ftoa_engine+0x192>
    236a:	11 24       	eor	r1, r1
    236c:	ef 90       	pop	r14
    236e:	ff 90       	pop	r15
    2370:	0f 91       	pop	r16
    2372:	1f 91       	pop	r17
    2374:	cf 91       	pop	r28
    2376:	df 91       	pop	r29
    2378:	99 27       	eor	r25, r25
    237a:	87 fd       	sbrc	r24, 7
    237c:	90 95       	com	r25
    237e:	08 95       	ret

00002380 <strrev>:
    2380:	dc 01       	movw	r26, r24
    2382:	fc 01       	movw	r30, r24
    2384:	67 2f       	mov	r22, r23
    2386:	71 91       	ld	r23, Z+
    2388:	77 23       	and	r23, r23
    238a:	e1 f7       	brne	.-8      	; 0x2384 <strrev+0x4>
    238c:	32 97       	sbiw	r30, 0x02	; 2
    238e:	04 c0       	rjmp	.+8      	; 0x2398 <strrev+0x18>
    2390:	7c 91       	ld	r23, X
    2392:	6d 93       	st	X+, r22
    2394:	70 83       	st	Z, r23
    2396:	62 91       	ld	r22, -Z
    2398:	ae 17       	cp	r26, r30
    239a:	bf 07       	cpc	r27, r31
    239c:	c8 f3       	brcs	.-14     	; 0x2390 <strrev+0x10>
    239e:	08 95       	ret

000023a0 <__udivmodhi4>:
    23a0:	aa 1b       	sub	r26, r26
    23a2:	bb 1b       	sub	r27, r27
    23a4:	51 e1       	ldi	r21, 0x11	; 17
    23a6:	07 c0       	rjmp	.+14     	; 0x23b6 <__udivmodhi4_ep>

000023a8 <__udivmodhi4_loop>:
    23a8:	aa 1f       	adc	r26, r26
    23aa:	bb 1f       	adc	r27, r27
    23ac:	a6 17       	cp	r26, r22
    23ae:	b7 07       	cpc	r27, r23
    23b0:	10 f0       	brcs	.+4      	; 0x23b6 <__udivmodhi4_ep>
    23b2:	a6 1b       	sub	r26, r22
    23b4:	b7 0b       	sbc	r27, r23

000023b6 <__udivmodhi4_ep>:
    23b6:	88 1f       	adc	r24, r24
    23b8:	99 1f       	adc	r25, r25
    23ba:	5a 95       	dec	r21
    23bc:	a9 f7       	brne	.-22     	; 0x23a8 <__udivmodhi4_loop>
    23be:	80 95       	com	r24
    23c0:	90 95       	com	r25
    23c2:	bc 01       	movw	r22, r24
    23c4:	cd 01       	movw	r24, r26
    23c6:	08 95       	ret

000023c8 <_exit>:
    23c8:	f8 94       	cli

000023ca <__stop_program>:
    23ca:	ff cf       	rjmp	.-2      	; 0x23ca <__stop_program>
